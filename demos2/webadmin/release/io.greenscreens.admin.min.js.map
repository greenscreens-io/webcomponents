{"version":3,"file":"io.greenscreens.admin.min.js","sources":["../modules/utils/Utils.mjs","../modules/utils/WebAuthn.mjs","../modules/dialogs/GSAdminDialog.mjs","../modules/shell/Login.mjs","../modules/shell/Sidebar.mjs","../modules/shell/Header.mjs","../modules/shell/Shell.mjs","../modules/views/GSSearch.mjs","../modules/views/BaseViewUI.mjs","../modules/views/configs/GSConfiguration.mjs","../modules/views/configs/GSTunnel.mjs","../modules/views/configs/GSCustomization.mjs","../modules/views/filters/GSFilterFido.mjs","../modules/views/filters/GSFilterIP.mjs","../modules/views/filters/GSFilterMobile.mjs","../modules/views/keys/GSApiKeys.mjs","../modules/views/keys/GSOtp.mjs","../modules/views/keys/GSBiometrics.mjs","../modules/views/others/GSPrinting.mjs","../modules/views/others/GSSchedulers.mjs","../modules/views/others/GSUsers.mjs","../modules/views/system/GSServices.mjs","../modules/views/system/GSWorkstations.mjs","../modules/views/system/GSWebmodules.mjs","../modules/dialogs/GSAbout.mjs","../modules/dialogs/GSCertBlocked.mjs","../modules/dialogs/GSCertClient.mjs","../modules/dialogs/GSCertImport.mjs","../modules/dialogs/GSCertImportPFX.mjs","../modules/dialogs/GSCertOpt.mjs","../modules/dialogs/GSLoginAdmin.mjs","../modules/dialogs/GSLoginDefaults.mjs","../modules/dialogs/GSOtpOptions.mjs","../modules/dialogs/GSRegisterBiometrics.mjs","../modules/dialogs/GSRegisterOtp.mjs","../modules/dialogs/GSNetwork.mjs","../modules/dialogs/GSSystem.mjs","../modules/dialogs/GSWorkstation.mjs","../modules/dialogs/GSFilter.mjs","../modules/dialogs/GSService.mjs","../modules/dialogs/GSPrinterReset.mjs","../modules/dialogs/GSPrinterSetup.mjs","../modules/dialogs/GSActivate.mjs","../modules/dialogs/GSInstall.mjs","../modules/dialogs/GSLicense.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSComponents,GSDOM,GSFunction,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Utils class\r\n * @module Utils\r\n */\r\n\r\n/**\r\n * Helper class with shared utility functions\r\n * @class\r\n */\r\nexport default class Utils {\r\n\r\n    static setUI(value) {\r\n        const el = document.createElement(value);\r\n        document.body.insertAdjacentElement('beforeend', el);\r\n    }\r\n\r\n    static unsetUI(value) {\r\n        const list = GSDOM.queryAll(value);\r\n        list.forEach(el => el.remove());\r\n    }\r\n\r\n    static get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to show notification on remote data fetch\r\n     * \r\n     * @param {boolean} success Status message info/danger\r\n     * @param {string} msg Message t oshow\r\n     * @returns {boolean}\r\n     */\r\n    static inform(success = false, msg) {\r\n        if (!Utils.notify) return;\r\n        if (success) return Utils.notify.info('Info', msg);\r\n        Utils.notify.danger('Error', msg);\r\n        return success;\r\n    }\r\n\r\n    static handleError(e) {\r\n        console.log(e);\r\n        const msg = e.data?.error || e.msg || e.message || e.toString();\r\n        Utils.inform(false, msg);\r\n        return msg;\r\n    }\r\n\r\n    /**\r\n     * Convert hex string to Uint8Array\r\n     * @param {string} data \r\n     * @returns {Uint8Array}\r\n     */\r\n    static fromHex(data) {\r\n        let a = [];\r\n        for (let i = 0, len = data.length; i < len; i += 2) {\r\n            a.push(parseInt(data.substring(i, 2), 16));\r\n        }\r\n\r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    /**\r\n     * Detect data and convert to Uint8Array\r\n     * \r\n     * @param {variant}\r\n     *            str\r\n     */\r\n    static #validateData(src) {\r\n        var data = null;\r\n        if (src instanceof Array) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof ArrayBuffer) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof Uint8Array) {\r\n            data = src;\r\n        } else if (src instanceof String || typeof src === 'string') {\r\n            data = utf8ToBuffer(src);\r\n        } else if (src.toArrayBuffer) {\r\n            data = new Uint8Array(src.toArrayBuffer());\r\n        } else {\r\n            throw \"Invalid input, must be String or ArrayBuffer or Uint8Array\";\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Convert String to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static stringToBlob(val) {\r\n        return new Blob([val], {\r\n            encoding: \"UTF-8\",\r\n            type: \"text/plain;charset=UTF-8\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convert Binary to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static binaryToBlob(val) {\r\n        const data = Utils.#validateData(val);\r\n        return new Blob([data], { type: 'application/octet-stream' });\r\n    }\r\n\r\n    /**\r\n     * Download raw data \r\n     * @param {string} name \r\n     * @param {string|array} data \r\n     */\r\n    static download(name, data) {\r\n        if (!data) return false;\r\n        const blob = GSUtil.isString(data) ? Utils.stringToBlob(data) : Utils.binaryToBlob(data);\r\n        const link = URL.createObjectURL(blob);\r\n        try {\r\n            const a = document.createElement('a');\r\n            a.download = name;\r\n            a.href = link;\r\n            a.click();\r\n        } finally {\r\n            setTimeout(() => URL.revokeObjectURL(link), 250);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static revokeObjectURL(url) {\r\n        if (url?.indexOf('blob:') === 0) URL.revokeObjectURL(url)\r\n    }\r\n\r\n    static openInNewTab(url, params, target = '_blank') {\r\n\r\n        const win = globalThis.open(url, target, params || null);\r\n\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        win.addEventListener('beforeunload', () => {\r\n            Utils.revokeObjectURL(url);\r\n            return null;\r\n        });\r\n\r\n        return win;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Module for WebAuth protocol\r\n */\r\nexport default class WebAuthn {\r\n\r\n    static #IP_REGEXP = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\r\n\r\n    static #api = `${location.origin}/services/api?q=/wsauth`;\r\n    static #svc = `${location.origin}/services/rpc`;\r\n    static #headers = { 'x-type': 'admin' };\r\n\r\n    static {\r\n        Object.freeze(WebAuthn);\r\n    }\r\n\r\n    static #fromBinary(o) {\r\n        return Uint8Array.from(atob(o), (c) => {\r\n            return c.charCodeAt(0)\r\n        });\r\n    }\r\n\r\n    static #toBinary(data) {\r\n        return btoa(String.fromCharCode.apply(null, new Uint8Array(data)))\r\n    }\r\n\r\n    static isAllowed() {\r\n        return (!WebAuthn.#IP_REGEXP.test(location.hostname) && location.protocol === 'https:') || location.hostname === 'localhost';\r\n    }\r\n\r\n    static get #cfg() {\r\n        return { api: WebAuthn.#api, service: WebAuthn.#svc, headers: WebAuthn.#headers };\r\n    }\r\n\r\n    static async #engine() {\r\n        if (!io?.greenscreens?.WebAuthnController) return Engine.init(WebAuthn.#cfg);\r\n    }\r\n\r\n    static async #callRemote(action, finish = false, data) {\r\n        await WebAuthn.#engine();\r\n        return await io.greenscreens.WebAuthnController[action](data, finish);\r\n    }\r\n\r\n    static async #doRegister(data) {\r\n\r\n        const resp = await WebAuthn.#callRemote('register', false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const uid = WebAuthn.#fromBinary(o.uid);\r\n\r\n        const obj = {\r\n            publicKey: {\r\n                rp: {\r\n                    name: o.rp,\r\n                    id: location.hostname\r\n                },\r\n\r\n                challenge: challenge,\r\n\r\n                user: {\r\n                    id: uid,\r\n                    name: o.name,\r\n                    displayName: o.displayName\r\n                },\r\n\r\n                // https://www.iana.org/assignments/cose/cose.xhtml#algorithms\r\n                /*\r\n                    {type: \"public-key\", alg: -7}\r\n                    {type: \"public-key\", alg: -35}\r\n                    {type: \"public-key\", alg: -36}\r\n                    {type: \"public-key\", alg: -257}\r\n                    {type: \"public-key\", alg: -258}\r\n                    {type: \"public-key\", alg: -259}\r\n                    {type: \"public-key\", alg: -37}\r\n                    {type: \"public-key\", alg: -38}\r\n                    {type: \"public-key\", alg: -39}\r\n                    {type: \"public-key\", alg: -8}\r\n                     */\r\n                pubKeyCredParams: [{\r\n                    type: \"public-key\",\r\n                    alg: -7\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -257\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -41\r\n                }\r\n                ],\r\n\r\n                attestation: \"direct\",\r\n                timeout: 60000,\r\n                excludeCredentials: [],\r\n                extensions: {},\r\n                authenticatorSelection: {\r\n                    requireResidentKey: false,\r\n                    userVerification: \"preferred\"\r\n                    //authenticatorAttachment : \"cross-platform\"\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        const cred = await navigator.credentials.create(obj);\r\n        if (cred == null) throw new Error('Credential not found!');\r\n\r\n        const auth = {\r\n            uid: o.uid,\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            attestationObject: WebAuthn.#toBinary(cred.response.attestationObject),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote('register', true, auth);\r\n\r\n    }\r\n\r\n    static async #doAuthenticate(action, data) {\r\n\r\n        const resp = await WebAuthn.#callRemote(action, false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const creds = [];\r\n\r\n        if (action === 'test' && o.uid.length === 0) {\r\n            throw new Error('Invalid credentials!');\r\n        }\r\n\r\n        o.uid.every((v) => {\r\n            const uid = WebAuthn.#fromBinary(v);\r\n            const o = {\r\n                type: \"public-key\",\r\n                id: uid\r\n            };\r\n            //o.transports: [\"usb\", \"nfc\", \"ble\"],\r\n            creds.push(o);\r\n            return true;\r\n        });\r\n\r\n        const obj = {\r\n            challenge: challenge,\r\n            rpId: location.hostname,\r\n            userVerification: \"preferred\",\r\n            timeout: 60000,\r\n\r\n            allowCredentials: creds,\r\n            extensions: {\r\n                uvm: true, // RP wants to know how the user was verified\r\n                loc: false,\r\n                txAuthSimple: \"Could you please verify yourself?\"\r\n            }\r\n        };\r\n\r\n        const cred = await navigator.credentials.get({ publicKey: obj });\r\n\r\n        if (cred == null) {\r\n            throw new Error('Credential not found!');\r\n        }\r\n\r\n        const auth = {\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            authenticatorData: WebAuthn.#toBinary(cred.response.authenticatorData),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON),\r\n            signature: WebAuthn.#toBinary(cred.response.signature),\r\n            userHandle: WebAuthn.#toBinary(cred.response.userHandle)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote(action, true, auth);\r\n    }\r\n\r\n    static register(data) {\r\n        return WebAuthn.#doRegister(data);\r\n    }\r\n\r\n    static authenticate(data) {\r\n        return WebAuthn.#doAuthenticate(\"authenticate\", data);\r\n    }\r\n\r\n    static update(data) {\r\n        return WebAuthn.#doAuthenticate('update', data);\r\n    }\r\n\r\n    static unregister(data) {\r\n        return WebAuthn.#doAuthenticate('unregister', data);\r\n    }\r\n\r\n    static test(data) {\r\n        return WebAuthn.#doAuthenticate('test', data);\r\n    }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport {GSAttr,GSComponents,GSDOM,GSEvent,GSFunction,GSLoader,GSDialog} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSAdminDialog extends GSDialog {\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.cssHeader = 'p-3 dialog-title';\r\n        //me.cssTitle = 'fs-5 fw-bold text-muted';\r\n        //me.cssBody = 'p-0';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return '';\r\n    }\r\n\r\n    async onReady() {\r\n\r\n        super.onReady();\r\n        const me = this;\r\n\r\n        me.on('data', me.#onData.bind(me));\r\n        me.on('action', me.#onAction.bind(me));\r\n        me.on('error', me.#onError.bind(me));\r\n\r\n        const tpl = await GSLoader.getTemplate(me.dialogTemplate);\r\n        requestAnimationFrame(() => {\r\n            GSDOM.setHTML(me, tpl);\r\n            me.title = me.dialogTitle;\r\n            if (me.auto) me.open();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Should auto open\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    /**\r\n     * Wait dialog\r\n     */\r\n    get waiter() {\r\n        return GSComponents.get('modal-waiter');\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Dialog form\r\n     */\r\n    get form() {\r\n        return GSDOM.query(this, 'form');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to load data into dialog forms\r\n     * @returns {*}\r\n     */\r\n    async onOpen(data) {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to process confirmed dialog form\r\n     * @param {*} data \r\n     */\r\n    async onData(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Override GSModal open method, adds data\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    async open(data) {\r\n        const me = this;\r\n        me.form?.reset();\r\n        data = await me.onOpen(data);\r\n        if (data === false) return;\r\n        super.open();\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(200);\r\n            me.#update(data);\r\n        });\r\n    }\r\n\r\n    #onError(e) {\r\n        Utils.inform(false, 'Some fields are invalid!');\r\n    }\r\n\r\n    #update(data) {\r\n        if (typeof data == 'object') GSDOM.queryAll(this, 'form').forEach(form => GSDOM.fromObject(form, data))\r\n    }\r\n\r\n    async #onData(e) {\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n        try {\r\n            const sts = await me.onData(e.detail.data);\r\n            if (sts) me.close();\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async #onAction(e) {\r\n        const me = this;\r\n        if (!e.detail.action) return;\r\n        try {\r\n            const action = GSUtil.capitalizeAttr(e.detail.action);\r\n            const fn = me[action];\r\n            if (GSFunction.isFunction(fn)) {\r\n                if (GSFunction.isFunctionAsync(fn)) {\r\n                    await me[action](e);\r\n                } else {\r\n                    me[action](e);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading Login class\r\n * @module dialogs/Login\r\n */\r\nimport {GSAttr,GSDOM,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport GSAdminDialog from '../dialogs/GSAdminDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\n\r\nglobalThis.Tn5250 = {\r\n    version: '6.0.0.300',\r\n    build: '15.10.2022.',\r\n    release: 20221015\r\n};\r\n\r\nexport default class Login extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-login', Login);\r\n        Object.seal(Login);\r\n    }\r\n\r\n    static #headers = { 'x-type': 'admin' };\r\n    static #cred = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n    static #api1 = `${location.origin}/services/api?q=/rpc`;\r\n    static #svc1 = `${location.origin}/services/rpc`;\r\n\r\n    static #api2 = `${location.origin}/services/api?q=/wsadmin`;\r\n    static #svc2 = `${location.origin}/services/wsadmin`.replace('http', 'ws');\r\n\r\n    static #auth = `${location.origin}/services/auth`;\r\n\r\n    #engine = null;\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        //me.visible = true;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n        me.cssTitle = 'd-flex justify-content-center w-100';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//shell/login.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        const url = globalThis.GSC?.logoUrl || '../assets/img/logo.png';\r\n        return `<img src=\"${url}\" alt=\"...\" height=\"30\" width=\"180\">`; // 'Admin Login';\r\n    }\r\n\r\n    get #otp() {\r\n        return this.query('input[name=\"otp\"]');\r\n    }\r\n\r\n    get #password() {\r\n        return this.query('input[name=\"password\"]');\r\n    }\r\n\r\n    async onOpen() {\r\n\r\n        console.clear();\r\n\r\n        const me = this;\r\n        me.#initDemo();\r\n        Utils.unsetUI('gs-admin-shell');\r\n\r\n        if (DEMO) return me.#toggle(false);\r\n\r\n        await GSUtil.timeout(5);\r\n        await me.#initAuth();\r\n\r\n        me.#engine = await me.#engineLogin();\r\n\r\n        me.#doWebAuth();\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        if (globalThis.DEMO) {\r\n            me.#shell();\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            me.#toggle(true);\r\n            const cred = Object.assign(data, Login.#cred);\r\n            await io.greenscreens.AdminController.login(cred);\r\n        } catch (e) {\r\n            me.onOpen();\r\n            throw e;\r\n        }\r\n\r\n        me.#postLogin();\r\n    }\r\n\r\n    async #doWebAuth() {\r\n        const me = this;\r\n        if (!me.#isWebauth) return;\r\n        const data = { appID: 0, ipAddress: Tn5250.opt.ip };\r\n        const cred = Object.assign(data, Login.#cred);\r\n        try {\r\n            const o = await WebAuthn.authenticate(cred);\r\n            if (o.success) document.cookie = 'X-Authorization=' + o.srl + '; path=/services/wsadmin';\r\n            me.#postLogin();\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n            if (me.#webauthOnly) location.reload();\r\n        }\r\n    }\r\n\r\n    async #postLogin() {\r\n\r\n        console.clear();\r\n        const me = this;\r\n\r\n        me.#engine?.stop();\r\n        me.#engine = await me.#engineShell();\r\n\r\n        me.#engine.SocketChannel.on('offline', (e) => {\r\n            console.log('Socket channel closed!');\r\n            Utils.handleError(e);\r\n            me.#engine?.stop();\r\n            location.reload();\r\n        });\r\n\r\n        me.#shell();\r\n        return true;\r\n    }\r\n\r\n    get #isWebauth() {\r\n        return Tn5250?.opt?.fido;\r\n    }\r\n\r\n    get #isOtp() {\r\n        return Tn5250?.opt?.otp;\r\n    }\r\n\r\n    get #webauthOnly() {\r\n        return this.#isWebauth && !this.#isOtp;\r\n    }\r\n\r\n    #initDemo() {\r\n        //if (globalThis.hasOwnProperty('DEMO')) return;\r\n        if ('DEMO' in globalThis) return;\r\n        globalThis.DEMO = typeof Engine !== 'function';\r\n    }\r\n\r\n    #toggle(sts = false) {\r\n        GSDOM.queryAll(this, 'input, button').forEach(el => GSAttr.toggle(el, 'disabled', sts));\r\n        GSDOM.query(this, 'input').focus();\r\n    }\r\n\r\n    async #initAuth() {\r\n        delete globalThis.io;\r\n        const res = await fetch(Login.#auth);\r\n        if (!res.ok) return false;\r\n        const opt = globalThis.Tn5250.opt = await res.json();\r\n        globalThis.Tn5250.opt = opt;\r\n        const me = this;\r\n        GSAttr.toggle(me.#otp, 'disabled', !opt.otp);\r\n        GSAttr.toggle(me.#password, 'disabled', !opt.otp);\r\n        GSDOM.toggleClass(me.#otp, 'd-none', !opt.otp);\r\n        if (me.#webauthOnly) {\r\n            me.closable = false;\r\n            me.body.parentElement.innerHTML = '<div class=\"m-3 text-center fs-5\">Use security key to access Web Admin console.</div>';\r\n        }\r\n    }\r\n\r\n    async #engineLogin() {\r\n        return this.#getEngine(Login.#api1, Login.#svc1);\r\n    }\r\n\r\n    async #engineShell() {\r\n        return this.#getEngine(Login.#api2, Login.#svc2);\r\n    }\r\n\r\n    async #getEngine(api, svc) {\r\n        delete globalThis.io;\r\n        this.#engine = null;\r\n        return Engine.init({ api: api, service: svc, headers: Login.#headers });\r\n    }\r\n\r\n    #shell() {\r\n        this.#clear();\r\n        Utils.setUI('gs-admin-shell');\r\n    }\r\n\r\n    #clear() {\r\n        Utils.unsetUI('gs-admin-shell-login');\r\n        Utils.unsetUI('gs-admin-shell');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSElement } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class SidebarUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-sidebar', SidebarUI);\r\n        Object.seal(SidebarUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/sidebar.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\nimport { GSComponents, GSFunction, GSElement, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class HeaderUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-header', HeaderUI);\r\n        Object.seal(HeaderUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/header.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.on('action', me.#onAction.bind(me));\r\n        me.queryAll('gs-dropdown').forEach(el => me.attachEvent(el, 'action', me.#onAction.bind(me)));\r\n    }\r\n\r\n    async #onAction(e) {\r\n        const me = this;\r\n        try {\r\n            const fnName = e?.detail?.action || e?.detail?.source?.target?.dataset?.action;\r\n            const action = GSUtil.capitalizeAttr(fnName);\r\n            const fn = me[action];\r\n            if (GSFunction.isFunction(fn)) {\r\n                if (GSFunction.isFunctionAsync(fn)) {\r\n                    await me[action](e);\r\n                } else {\r\n                    me[action](e);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    // logout and replace with login tag\r\n    async logout() {\r\n        try {\r\n            Utils.unsetUI('gs-admin-shell-login');\r\n            Utils.unsetUI('gs-admin-shell');\r\n            const o = DEMO ? DEMO : await io.greenscreens.Session.closeSession();\r\n            return o.success;\r\n        } finally {\r\n            location.reload();\r\n        }\r\n    }\r\n\r\n    // restart server\r\n    async restart() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.restart();\r\n        Utils.inform(o.success, 'Server is restarting! <br>Wait about 1min. then refresh browser.');\r\n    }\r\n\r\n    // toggle client verification\r\n    async certClientVerify() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.verifySSLClient(2);\r\n        const msg = o.msg || 'Client SSL verification changed.';\r\n        Utils.inform(true, msg + '<br>Restart server to apply changes.');\r\n    }\r\n\r\n    // regenerate session keys\r\n    async certGenTerm() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.regenerate();\r\n        if (o.code === 'RSA') Utils.inform(true, 'New encryption keys generated');\r\n    }\r\n\r\n    // generate server cert request\r\n    async certGenReq() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.request(true);\r\n        Utils.download(\"server_request.txt\", o.data.requestPem);\r\n        Utils.download(\"server_private.txt\", o.data.privatePem);\r\n        //Utils.download(\"server_public.txt\", data.publicPem);\r\n    }\r\n\r\n    // generate server cert\r\n    async certGenSvr() {\r\n        const sts = confirm('Are you sure? Action will overwrite existnig certificate.');\r\n        if (!sts) return;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generate(true);\r\n        Utils.inform(true, 'New server certificate generated! <br> Please, restart server for changes to apply.');\r\n    }\r\n\r\n    certExport() {\r\n        Utils.openInNewTab(`${location.origin}/services/certificate`);\r\n    }\r\n\r\n    explorer() {\r\n        Utils.openInNewTab(`${location.origin}/admin/explorer`, 'toolbar=no,scrollbars=yes,resizable=yes');\r\n    }\r\n\r\n    downloadSavf() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=savf`);\r\n    }\r\n\r\n    downloadConfig() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=conf`);\r\n    }\r\n\r\n    downloadLogs() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=log`);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module shell\r\n */\r\n\r\nimport {GSElement} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Class representing UI Shell\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class ShellUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell', ShellUI);\r\n        Object.seal(ShellUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.GSC?.company && me.company) me.company.innerHTML = me.GSC.company;\r\n    }\r\n\r\n    get company() {\r\n        return this.getByID('company');\r\n    }\r\n\r\n    get GSC() {\r\n        return globalThis.GSC;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSearch class\r\n * @module GSSearch\r\n */\r\n\r\nimport { GSAttr, GSEvents, GSElement, GSEnvironment } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Search input box WebComponent which emits searh event to upper tree.\r\n * In this cse for GSTable filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nclass GSSearch extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-search', GSSearch);\r\n        Object.seal(GSSearch);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"input-group ${me.css}\">\r\n            <i class=\"input-group-text ${me.iconCSS}\"></i>\r\n            <input type=\"search\"  incremental=\"true\" class=\"form-control ${me.inputCSS}\" placeholder=\"${me.placeholder}\" name=\"${me.name}\">\r\n        </div>        \r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (GSEnvironment.isWebkit) {\r\n            me.attachEvent(me.#searchEl, 'search', me.#onSearch.bind(me));\r\n        } else {\r\n            me.attachEvent(me.#searchEl, 'keydown', me.#onSearch.bind(me));\r\n        }\r\n        super.onReady();\r\n    }\r\n\r\n    #onSearch(e) {\r\n        if (!GSEnvironment.isWebkit && e.which != 13) return;\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const opt = { type: 'search', action: 'search', value: me.#searchEl.value };\r\n        GSEvents.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    get #searchEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'css-icon', 'bg-white bi bi-search');\r\n    }\r\n\r\n    set iconCSS(val = '') {\r\n        return GSAttr.set(this, 'css-icon', val);\r\n    }\r\n\r\n    get inputCSS() {\r\n        return GSAttr.get(this, 'css-input', 'border-start-0');\r\n    }\r\n\r\n    set inputCSS(val = '') {\r\n        return GSAttr.set(this, 'css-input', val);\r\n    }\r\n\r\n    /**\r\n    * Input box info mesasge\r\n    * @returns {string}\r\n    */\r\n    get placeholder() {\r\n        return GSAttr.get(this, 'placeholder', 'search');\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val);\r\n    }\r\n\r\n    /**\r\n     * Input box name\r\n     * @returns {string}\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', 'search');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module BaseUI\r\n */\r\n\r\nimport { GSComponents, GSDOM, GSFunction, GSUtil, GSElement } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * BaseUI handles basic screen data view (used by other UI elements)\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class BaseViewUI extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.className = 'd-flex flex-fill';\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.attachEvent(me, 'action', me.#onAction.bind(me));\r\n        me.attachEvent(me.#table, 'filter', e => me.refresh());\r\n        requestAnimationFrame(() => me.refresh());\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get recID() {\r\n        return 'id';\r\n    }\r\n\r\n    /**\r\n     * Table data filter\r\n     */\r\n    get filter() {\r\n        const flt = this.#table?.store.filter || [];\r\n        const obj = {};\r\n        flt.forEach(o => obj[o.name] = o.value);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Table data store\r\n     */\r\n    get store() {\r\n        return this.#table?.store;\r\n    }\r\n\r\n    get #table() {\r\n        return this.query('#table-main');\r\n    }\r\n\r\n    get form() {\r\n        return GSDOM.query(this.modal, '#form-main');\r\n    }\r\n\r\n    get waiter() {\r\n        return GSComponents.get('modal-waiter');\r\n    }\r\n\r\n    /**\r\n     * Record popup\r\n     */\r\n    get modal() {\r\n        return this.query('#modal-main');\r\n    }\r\n\r\n    /**\r\n     * Listener for lower componets \"action\" events\r\n     * wihch might come from table fitlering, table context menut etc.\r\n     * Used to handle context menu options. \r\n     * Action from context menu is mapped to this class function.\r\n     * @param {Event} e \r\n     */\r\n    async #onAction(e) {\r\n        const me = this;\r\n        if (!e.detail.action) return;\r\n        try {\r\n            const action = GSUtil.capitalizeAttr(e.detail.action);\r\n            const fn = me[action];\r\n            if (GSFunction.isFunction(fn)) {\r\n                if (GSFunction.isFunctionAsync(fn)) {\r\n                    await me[action](e);\r\n                } else {\r\n                    me[action](e);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Export table data\r\n     */\r\n    async export() {\r\n        const me = this;\r\n        const name = me.tagName.toLowerCase();\r\n        const data = me.store.data;\r\n        GSUtil.export([JSON.stringify(data)], `${name}.json`);\r\n    }\r\n\r\n    /**\r\n     * Table record action - clone record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async clone(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        const rec = Object.assign({}, data);\r\n\r\n        try {\r\n\r\n            const sts = await me.onClone(rec);\r\n            if (!sts) throw new Error('Record not cloned!');\r\n\r\n            // update locally to refresh ui\r\n            me.store.setData(rec, true);\r\n            Utils.notify.secondary('', 'Record cloned!');\r\n            me.refresh();\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - remove record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async remove(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        try {\r\n\r\n            const sts = await me.onRemove(data);\r\n            if (!sts) throw new Error('Record not removed!');\r\n\r\n            // update locally to refresh ui\r\n            const subset = me.store.data.filter(o => !o.hasOwnProperty(me.recID) || (o[me.recID] !== data[me.recID]));\r\n            me.store.setData(subset);\r\n            Utils.notify.danger('', 'Record removed!');\r\n\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - edit data\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async details(e) {\r\n\r\n        const me = this;\r\n        const data = await me.onDetails(e.detail.data[0]);\r\n        if (!data) return;\r\n\r\n        me.form?.reset();\r\n        GSDOM.fromObject(me.form, data);\r\n        me.modal.open(data);\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onUpdate(result.data);\r\n            if (!sts) throw new Error('Record not updated!');\r\n\r\n            // update locally to refresh ui\r\n            Object.assign(data, result.data);\r\n            me.store.reload();\r\n            Utils.notify.warn('', 'Record updated!');\r\n\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - create record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async create(e) {\r\n\r\n        const me = this;\r\n\r\n        me.form?.reset();\r\n        me.modal.open();\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onCreate(result.data);\r\n            if (!sts) throw new Error('Record not created!');\r\n\r\n            // update locally to refresh ui\r\n            Utils.notify.primary('', 'Record created!');\r\n\r\n            me.refresh();\r\n\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - refresh data\r\n     * @param {Event} e \r\n     */\r\n    async refresh(e) {\r\n        // get data from extension and populate table;\r\n        const me = this;\r\n\r\n        const data = await me.onLoad(e);\r\n\r\n        if (!me.store) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                if (Array.isArray(data) && data.length > 0) {\r\n                    me.store.setData(data);\r\n                    // me.store.firstPage();\r\n                } else {\r\n                    me.store.reload();\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - filter records\r\n     * @param {Event} val \r\n     */\r\n    search(e) {\r\n        this.store.filter = e.detail.value;\r\n    }\r\n\r\n    /**\r\n     * Handle data befoer opening the modal form\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    async onDetails(data) {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onCreate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record cloned from existing one.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onClone(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle existing record change received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onUpdate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle record removal received from table context menu option - remove.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onRemove(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called to load view data\r\n     * @returns {Array<Object>}\r\n     * @throws {Error}\r\n     */\r\n    async onLoad(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport { GSComponents, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSConfiguration extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-configuration', GSConfiguration);\r\n        Object.seal(GSConfiguration);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(1000);\r\n            me.#update();\r\n        });\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n\r\n        const ctx = me.query('gs-context');\r\n        // If license installer available\r\n        if (me.#hasInstaller) {\r\n            ctx?.self?.querySelector('[data-action=\"license\"]')?.remove();\r\n            ctx?.self?.querySelector('[data-action=\"install\"]')?.remove();\r\n        } else {\r\n            // If license installer not available; remove activator\r\n            ctx?.self?.querySelector('[data-action=\"activate\"]')?.remove();\r\n        }\r\n    }\r\n\r\n    get #hasInstaller() {\r\n        return Tn5250?.opt?.lic == true;\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/configurations.html');\r\n    }\r\n\r\n    get activateDialog() {\r\n        return GSComponents.get('modal-activate');\r\n    }\r\n\r\n    get installDialog() {\r\n        return GSComponents.get('modal-install');\r\n    }\r\n\r\n    get licenseDialog() {\r\n        return GSComponents.get('modal-license');\r\n    }\r\n\r\n    get printerReset() {\r\n        return GSComponents.get('modal-reset');\r\n    }\r\n\r\n    get printerSetup() {\r\n        return GSComponents.get('modal-setup');\r\n    }\r\n\r\n    get validate() {\r\n        return GSComponents.get('modal-validate');\r\n    }\r\n\r\n    async onLoad(e) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.list(false);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.unsetHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.cloneConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    resetPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerReset.open(data);\r\n    }\r\n\r\n    setupPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerSetup.open(data);\r\n    }\r\n\r\n    activate(e) {\r\n        const data = e.detail.data[0];\r\n        this.activateDialog.open(data);\r\n    }\r\n\r\n    install(e) {\r\n        const data = e.detail.data[0];\r\n        this.installDialog.open(data);\r\n    }\r\n\r\n    license(e) {\r\n        const data = e.detail.data[0];\r\n        this.licenseDialog.open(data);\r\n    }\r\n\r\n    async validateServer(e) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Hosts.validate(data);\r\n            const body = `<pre>${o.msg}</pre>`;\r\n            me.validate.confirm('Validate', body);\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from \"../../utils/Utils.mjs\";\r\n\r\nexport default class GSTunnel extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-tunnel', GSTunnel);\r\n        Object.seal(GSTunnel);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/tunnel.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.list(me.store.page, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        data.name = `${data.name} - ${Date.now()}`;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async start(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.start(data.id);\r\n        Utils.inform(o.success, 'Tunnel started');\r\n    }\r\n\r\n    async stop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.stop(data.id);\r\n        Utils.inform(o.success, 'Tunnel stopped');\r\n    }\r\n\r\n    async restart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.restart(data.id);\r\n        Utils.inform(o.success, 'Tunnel restarted');\r\n    }\r\n\r\n    async download(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.download(data.id);\r\n\r\n        const conf = [\r\n            'auto: true',\r\n            'mode: cloud',\r\n            'cloud: ' + location.origin,\r\n            'token: ' + o.code,\r\n            'tls: 1',\r\n            'tlsVerify: true'\r\n        ];\r\n        Utils.download(data.name + '.bin', Utils.fromHex(o.msg));\r\n        Utils.download('server.config', conf.join('\\n'));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCustomization class\r\n * @module views/GSCustomization\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSCustomization extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-customization', GSCustomization);\r\n        Object.seal(GSCustomization);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/customizations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scripts.getScripts();\r\n        me.header.value = o.data?.header || '';\r\n        me.footer.value = o.data?.footer || '';\r\n        me.ui.value = o.data?.ui || '';\r\n    }\r\n\r\n    async save() {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Scripts.setScripts(me.header.value, me.footer.value, me.ui.value);\r\n            Utils.inform(o.success, 'Data saved!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    get header() {\r\n        return this.query('#header');\r\n    }\r\n\r\n    get footer() {\r\n        return this.query('#footer');\r\n    }\r\n\r\n    get ui() {\r\n        return this.query('#ui');\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterFido class\r\n * @module views/GSFilterFido\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterFido extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterfido', GSFilterFido);\r\n        Object.seal(GSFilterFido);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-fido.html');\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterIP class\r\n * @module views/GSFilterIP\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterIP extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterip', GSFilterIP);\r\n        Object.seal(GSFilterIP);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-ip.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterMobile class\r\n * @module views/GSFilterMobile\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterMobile extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filtermobile', GSFilterMobile);\r\n        Object.seal(GSFilterMobile);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-mobile.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSApiKeys class\r\n * @module views/GSApiKeys\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSApiKeys extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-apikeys', GSApiKeys);\r\n        Object.seal(GSApiKeys);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-api.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.add(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.update(data.id, data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    toggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.refresh();\r\n    }\r\n}","\r\n/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtp class\r\n * @module views/GSOtp\r\n */\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSOtp extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-otp', GSOtp);\r\n        Object.seal(GSOtp);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-otp.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.update(data.id, data.active);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    toggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.refresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSBiometrics class\r\n * @module views/GSBiometrics\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSBiometrics extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-biometrics', GSBiometrics);\r\n        Object.seal(GSBiometrics);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-bio.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.remove(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinting class\r\n * @module views/GSPrinting\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSPrinting extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-printing', GSPrinting);\r\n        Object.seal(GSPrinting);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/printing.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    #prepare(json) {\r\n        json.uuid = json.uuid.toUpperCase();\r\n        json.host = json.host.toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.library = (json.library || '').toUpperCase();\r\n        json.userName = (json.userName || '').toUpperCase();\r\n        json.spoolName = (json.spoolName || '').toUpperCase();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSScheduler class\r\n * @module views/GSScheduler\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSScheduler extends BaseViewUI {\r\n\r\n    #mapState = { \"\": 0, \"true\": 1, \"false\": 2 };\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-scheduler', GSScheduler);\r\n        Object.seal(GSScheduler);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/schedulers.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const type = filter.type ? parseInt(filter.type, 10) : null;\r\n        const status = me.#mapState[filter.status] || 0;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.list(me.store.page - 1, me.store.limit, type, status);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async run(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.runNow(data.id);\r\n        Utils.inform(o.success, 'Task started!');\r\n        me.refresh();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSUsers class\r\n * @module views/GSUsers\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSUsers extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-users', GSUsers);\r\n        Object.seal(GSUsers);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/users.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async commit(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.commit();\r\n            Utils.inform(o.success, 'Sync with database ok!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n    async resync(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.resync();\r\n            Utils.inform(o.success, 'Sync from storage started!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n\r\n    #prepare(json) {\r\n        json.confid = parseInt(json.confid || 0);\r\n        json.devtype = parseInt(json.devtype || 0);\r\n        json.driver = parseInt(json.driver || 0);\r\n        json.drawer1 = parseInt(json.drawer1 || -1);\r\n        json.drawer2 = parseInt(json.drawer2 || -1);\r\n        json.enhanced = parseInt(json.enhanced || 0);\r\n        json.uuid = (json.uuid || '').toUpperCase();\r\n        json.host = (json.host || '').toUpperCase();\r\n        json.user = (json.user || '').toUpperCase();\r\n        json.display = (json.display || '').toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.program = (json.program || '').toUpperCase();\r\n        json.printer = (json.printer || 'Default');\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-services', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/services.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.list();\r\n        return o.data;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport {GSFunction} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-workstations', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    #terminal = {};\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/workstations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Manage.listSessions(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async message(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessage(data.sessionID, data.deviceID, data.message);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async logging(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.loging(data);\r\n            if (o.msg === 'false') {\r\n                const url = location.origin + '/services/logs?id=' + o.code;\r\n                Utils.download('server.log', url);\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async kill(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killDevice(data);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async messageFilter(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = Object.assign(me.filter);\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessages(me.filter);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async killFilter(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killSessions(me.filter);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async export(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.export(0, 0, me.filter);\r\n            const tmp = JSON.stringify(o.data);\r\n            Utils.download('workstations.json', tmp);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        Object.values(me.#terminal)\r\n            .filter(el => GSFunction.isFunction(el.close))\r\n            .forEach(el => el.close());\r\n        me.#terminal = {};\r\n    }\r\n\r\n    viewSession(e) {\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not available in DEMO mode.');\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n\r\n        let win = me.#terminal[data.deviceID];\r\n        if (win && !win.closed) return;\r\n\r\n        const params = 'target=blank,width=800,height=600,scrollbasrs=no,toolbar=no,titlebar=yes';\r\n        const url = `${location.origin}/terminal/?d=0&k=0`;\r\n        win = Utils.openInNewTab(url, params);\r\n        win.onclose = () => delete me.#terminal[data.deviceID];\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        const id = setInterval(() => {\r\n\r\n            if (!win.Tn5250) return;\r\n            clearInterval(id);\r\n\r\n            me.#terminal[data.deviceID] = win;\r\n            win.document.title = `Terminal - ${data.uuid} - ${data.host} - ${data.display}`;\r\n            me.#updateScreen(win, data);\r\n\r\n            win.Tn5250.Keyboard.listen('command', (e, cfg, code, name) => {\r\n                if (name === 'PF5') me.#updateScreen(win, data);\r\n            });\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    async #updateScreen(win, data) {\r\n        if (!win?.Tn5250) return;\r\n        try {\r\n            const o = await io.greenscreens.Manage.getScreen(data.sessionID, data.deviceID);\r\n            win.Tn5250.Application.test(win.Tn5250.Binary.fromHex(o.msg));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWebmodules class\r\n * @module views/GSWebmodules\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWebmodules extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-webmodules', GSWebmodules);\r\n        Object.seal(GSWebmodules);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/modules.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.list();\r\n        return o.data;\r\n    }\r\n\r\n    async start(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.start(data.name);\r\n        Utils.inform(o.success, 'Module started!');\r\n        me.refresh();\r\n    }\r\n\r\n    async stop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.stop(data.name);\r\n        Utils.inform(o.success, 'Module stopped!');\r\n        me.refresh();\r\n    }\r\n\r\n    async restart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.restart(data.name);\r\n        Utils.inform(o.success, 'Module restarted!');\r\n        me.refresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSAbout class\r\n * @module dialogs/GSAbout\r\n */\r\nimport { GSModal } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSAbout extends GSModal {\r\n\r\n    static #version = '6.0.0.';\r\n    static #build = '20.10.2022. 15:00:00';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-about', GSAbout);\r\n        Object.seal(GSAbout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.align = 'center';\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.confirm(undefined, me.#html);\r\n    }\r\n\r\n    get version() {\r\n        return globalThis.Tn5250?.opt?.version || GSAbout.#version;\r\n    }\r\n\r\n    get build() {\r\n        return globalThis.Tn5250?.opt?.build || GSAbout.#build;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n        <div slot=\"body\" class=\"text-center\">\r\n            <div>Version : <span>${me.version}</span></div>\r\n            <div>Build : <span>${me.build}</span></div>\r\n        </div>\r\n        `;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertBlocked class\r\n * @module dialogs/GSCertBlocked\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertBlocked extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certblocked', GSCertBlocked);\r\n        Object.seal(GSCertBlocked);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-blocked.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Blocked Certificates';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getBlocked();\r\n        return { list: o.msg };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setBlocked(data.list);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertClient class\r\n * @module dialogs/GSCertClient\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertClient extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certclient', GSCertClient);\r\n        Object.seal(GSCertClient);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-client.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Generate Client Certificates';\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generateClient(data);\r\n\r\n        const arr = Utils.fromHex(o.msg);\r\n        const raw = new Uint8Array(arr);\r\n        Utils.download(o.code, raw);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertImport extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certimport', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-import.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import Certificates';\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.setFromPEM(data.rootCAPub, data.rootCAPriv,\r\n            data.serverPub, data.serverPriv, data.rootPass, data.serverPass);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertImport extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certimportpfx', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-importpfx.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import Binary Certificate';\r\n    }\r\n\r\n    get input () {\r\n        return GSDOM.query(this, 'gs-filebox')?.query('input');\r\n    }\r\n\r\n    get file() {\r\n        const input = this.input;\r\n        if (!input?.files?.length > 0) return false;\r\n        return input.files[0];\r\n    }\r\n\r\n    async pfx() {\r\n        const buff = await this.file?.arrayBuffer();\r\n        return btoa(new Uint8Array(buff));\r\n    }\r\n\r\n    async onData(data) {\r\n        data.pfx = await this.pfx();\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.setFromPFX(data.pfx, data.password);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertOpt class\r\n * @module dialogs/GSCertOpt\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertOpt extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certopt', GSCertOpt);\r\n        Object.seal(GSCertOpt);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Certificate Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.loadConfig();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.saveConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSLoginAdmin extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-loginadm', GSLoginAdmin);\r\n        Object.seal(GSLoginAdmin);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-admin.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Admin Login';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        delete o.data.password;\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Session.newAuth(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginDefaults class\r\n * @module dialogs/GSLoginDefaults\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSLoginDefaults extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-logindefs', GSLoginDefaults);\r\n        Object.seal(GSLoginDefaults);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-defaults.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Login Defaults';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getDefaults();\r\n        delete o.data.password;\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveDefaults(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtpOptions class\r\n * @module dialogs/GSOtpOptions\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSOtpOptions extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpopt', GSOtpOptions);\r\n        Object.seal(GSOtpOptions);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/otp-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'OTP Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getOtp();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveOTP(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterBiometrics class\r\n * @module dialogs/GSRegisterBiometrics\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSRegisterBiometrics extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-bioreg', GSRegisterBiometrics);\r\n        Object.seal(GSRegisterBiometrics);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.align = 'center';\r\n        me.cancelable = false;\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-bio.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register Biometric';\r\n    }\r\n\r\n    async onOpen() {\r\n\r\n        const me = this;\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not supported in DEMO mode!');\r\n\r\n        if (!WebAuthn.isAllowed()) {\r\n            const msg = 'FIDO2 allowed only on secured url <br>and valid domain name!'\r\n            me.body = msg;\r\n            Utils.inform(false, msg);\r\n            return true;\r\n        }\r\n\r\n        const params = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n        params.appID = 0;\r\n        params.ipAddress = Tn5250.opt.ip;\r\n        try {\r\n            const o = await WebAuthn.register(params);\r\n            me.body = 'Biometric Web Admin login activated!';\r\n        } catch (e) {\r\n            me.body = Utils.handleError(e) || 'Biometric Web Admin login not activated!';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        // TODO save data; if ok return true\r\n\r\n        return true;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterOtp class\r\n * @module dialogs/GSRegisterOtp\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport {GSDOM} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSRegisterOtp extends GSAdminDialog {\r\n\r\n    static #URL = '/barcode/generator?group=Two%20Dimensional&type=QR&composite=&zoom=4&format=png&eci=-1&attGS1=0&attQR1=&attQR2=3&b64=';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpreg', GSRegisterOtp);\r\n        Object.seal(GSRegisterOtp);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-otp.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register OTP';\r\n    }\r\n\r\n    get scratch() {\r\n        return GSDOM.query(this, '#scratch');\r\n    }\r\n\r\n    get qrcode() {\r\n        return GSDOM.query(this, '#qrcode');\r\n    }\r\n\r\n    get token() {\r\n        return GSDOM.query(this, '#token');\r\n    }\r\n\r\n    getUrl(token) {\r\n        const b64 = self.btoa(token);\r\n        return `${location.origin}${GSRegisterOtp.#URL}${b64}`;\r\n    }\r\n\r\n    async onOpen() {\r\n        const me = this;\r\n        if (DEMO) return Utils.inform(false, 'Nota available in DEMO!');\r\n        const o = await io.greenscreens.OAuth.register();\r\n        me.#download(o.data);\r\n        me.#update(o.data);\r\n        return o.data;\r\n    }\r\n\r\n    async onData() {\r\n        return true;\r\n    }\r\n\r\n    #update(o) {\r\n        const me = this;\r\n        const url = me.getUrl(o.url);\r\n        me.qrcode.parentElement.href = url;\r\n        me.qrcode.src = url;\r\n        me.qrcode.title = o.url;\r\n        me.token.innerHTML = o.key.replaceAll('=', '');\r\n        me.scratch.innerHTML = o.scratchCodes.join('&nbsp;');\r\n    }\r\n\r\n    #download(o) {\r\n        const alt = o.scratchCodes;\r\n        const list = [\r\n            'Green Screens Admin OTP Codes',\r\n            '\\n\\n',\r\n            'User : ',\r\n            o.userName,\r\n            '\\n\\n',\r\n            'Key : ',\r\n            o.key.replaceAll('=', ''),\r\n            '\\n\\n',\r\n            'Recovery Keys : ',\r\n        ];\r\n\r\n        alt.every((v) => {\r\n            list.push(v);\r\n            list.push(' ');\r\n            return true;\r\n        });\r\n\r\n        Utils.download('Green_Screens_Admin_OTP.txt', list.join(''));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSNetwork extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-network', GSNetwork);\r\n        Object.seal(GSNetwork);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/network.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Netowrk Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getInterface();\r\n        o.data.restart = o.data.restart ? '1' : '0';\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        data.restart = parseInt(data.restart) === 1;\r\n        data.redirect = parseInt(data.redirect) === 1;\r\n        data.nodes = parseInt(data.nodes) === 1;\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setInterface(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSSystem extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-system', GSSystem);\r\n        Object.seal(GSSystem);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/system.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'System Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    async reloadKerberos() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.reloadKerberors();\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstation class\r\n * @module dialogs/GSWorkstation\r\n */\r\nimport {GSLoader} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSWorkstation extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-workstation', GSWorkstation);\r\n        Object.seal(GSWorkstation);\r\n    }\r\n\r\n    #def = null;\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.cssBody = 'NA';\r\n        super.connectedCallback();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return null;\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Workstation Info';\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        this.#def = await GSLoader.loadSafe('data/wks.json','GET',null,true);\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        const css = 'fw-bold w-25 text-bg-secondary';\r\n        const html = ['<div class=\"container p-2\"><div class=\"row\"><div class=\"col-xs-12\"><table class=\"table border\"><tbody>'];\r\n        const body = me.#def.order.filter(v => me.#def.data[v])\r\n            .map(v => `<tr><td class=\"${css}\">${me.#def.data[v]}</td><td>${data[v] || ''}</td></td>`).join('');\r\n        html.push(body);\r\n        html.push('</tbody></table></div></div></div>');\r\n        me.body = html.join('');\r\n        super.open();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilter class\r\n * @module dialogs/GSFilter\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSFilter extends GSAdminDialog {\r\n\r\n    //\"((25[0-5]|(2[0-4]|1\\\\d|[1-9]|)\\\\d)\\.?\\\\b){4}\";\r\n    static #IP = \"((([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\\\\.){3}(([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\";\r\n    static #MASK = [`^${GSFilter.#IP}$`, `^${GSFilter.#IP}/[0-9]{1,2}$`, `^${GSFilter.#IP}-${GSFilter.#IP}$`];\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-filter', GSFilter);\r\n        Object.seal(GSFilter);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.large();\r\n        me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//forms/filter-ip.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'IP Filter';\r\n    }\r\n\r\n    get typeField() {\r\n        return this.query('select[name=type]');\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        me.valueField.pattern = GSFilter.#MASK[me.typeField.value];\r\n    }\r\n\r\n    async onOpen(data) {\r\n        const me = this;\r\n        me.valueField.pattern = GSFilter.#MASK[data.type];\r\n        return data;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSService class\r\n * @module dialogs/GSService\r\n */\r\nimport {GSAttr,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSService extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-service', GSService);\r\n        Object.seal(GSService);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/service.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Service Module Property';\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    async onOpen(data) {\r\n        const me = this;\r\n        me.valueField.type = 'text';\r\n        me.valueField.classList.value = 'form-control';\r\n        me.valueField.parentElement.classList.value = '';\r\n\r\n        if (GSUtil.isNumber(data.value)) {\r\n            me.valueField.type = 'number';\r\n        }\r\n\r\n        if (GSUtil.isBool(data.value)) {\r\n            me.valueField.type = 'checkbox';\r\n            me.valueField.classList.value = 'form-check-input';\r\n            me.valueField.parentElement.classList.value = 'form-check form-switch fs-5';\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        const type = GSAttr.get(me.valueField, 'type');\r\n\r\n        if (type === 'checkbox') {\r\n            data.value = me.valueField.checked === true;\r\n        }\r\n\r\n        if (type === 'number') {\r\n            data.value = parseInt(data.value || 0) || 0;\r\n        }\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.set(data.module, data.property, data.value);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterReset class\r\n * @module dialogs/GSPrinterReset\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSPrinterReset extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-reset', GSPrinterReset);\r\n        Object.seal(GSPrinterReset);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-reset.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Reset';\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        super.open();\r\n    }\r\n\r\n    async onOpen() {\r\n        return this.#data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.reset(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterSetup class\r\n * @module dialogs/GSPrinterSetup\r\n */\r\nimport {GSAttr, GSDOM, GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSPrinterSetup extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-setup', GSPrinterSetup);\r\n        Object.seal(GSPrinterSetup);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-setup.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Setup';\r\n    }\r\n\r\n    get hpt() {\r\n        return GSDOM.query(this, 'select[name=\"hostTransform\"]');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(250);\r\n            me.attachEvent(me.hpt, 'change', me.#onHPT.bind(me));\r\n        });\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        delete me.#data.drawer1;\r\n        delete me.#data.drawer2;\r\n        me.form.reset();\r\n        me.#update(true);\r\n        super.open();\r\n    }\r\n\r\n    async onOpen() {\r\n        return this.#data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            data.hostTransform = parseInt(data.hostTransform) === 1;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.setup(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n    #onHPT(e) {\r\n        this.#update(e.target.value !== '1');\r\n    }\r\n\r\n    #update(sts) {\r\n        const qry = '[data-group=\"true\"] input, [data-group=\"true\"] select';\r\n        this.queryAll(qry).forEach(el => GSAttr.toggle(el, 'disabled', sts));\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSActivate class\r\n * @module dialogs/GSActivate\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\n/**\r\n * Available when install.exe exist\r\n */\r\nexport default class GSActivate extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-activate', GSActivate);\r\n        Object.seal(GSActivate);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/activate.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Add license key to the IBM i server';\r\n    }\r\n\r\n    async onOpen(data) {\r\n        return { ipAddress: data?.ipAddress || '' };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Activator.activate(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSInstall class\r\n * @module dialogs/GSInstall\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\n/**\r\n * Available when install.exe does not exist\r\n */\r\nexport default class GSInstall extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-install', GSInstall);\r\n        Object.seal(GSInstall);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/install.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Install product to the IBM i server';\r\n    }\r\n\r\n    async onOpen(data) {\r\n        return { ipAddress: data?.ipAddress || '' };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Installer.installProduct(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLicense class\r\n * @module dialogs/GSLicense\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\n/**\r\n * Available when install.exe does not exist\r\n */\r\nexport default class GSLicense extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-license', GSLicense);\r\n        Object.seal(GSLicense);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/license.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Add license key to the IBM i server';\r\n    }\r\n\r\n    async onOpen(data) {\r\n        return { ipAddress: data?.ipAddress || '' };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Installer.addProductLicense(data);\r\n        return o.success;\r\n    }\r\n}"],"names":["Utils","static","value","el","document","createElement","body","insertAdjacentElement","GSDOM","queryAll","forEach","remove","notify","GSComponents","get","success","msg","info","danger","e","data","error","message","toString","inform","a","i","len","length","push","parseInt","substring","Uint8Array","src","Array","ArrayBuffer","String","utf8ToBuffer","toArrayBuffer","val","Blob","encoding","type","validateData","name","blob","GSUtil","isString","stringToBlob","binaryToBlob","link","URL","createObjectURL","download","href","click","setTimeout","revokeObjectURL","url","indexOf","params","target","win","globalThis","open","GSFunction","isFunction","focus","addEventListener","WebAuthn","location","origin","Object","freeze","o","from","atob","c","charCodeAt","btoa","fromCharCode","apply","IP_REGEXP","test","hostname","protocol","cfg","api","service","svc","headers","io","greenscreens","WebAuthnController","Engine","init","action","finish","engine","callRemote","challenge","fromBinary","uid","obj","publicKey","rp","id","user","displayName","pubKeyCredParams","alg","attestation","timeout","excludeCredentials","extensions","authenticatorSelection","requireResidentKey","userVerification","cred","navigator","credentials","create","Error","auth","rawId","toBinary","attestationObject","response","clientDataJSON","creds","every","v","rpId","allowCredentials","uvm","loc","txAuthSimple","authenticatorData","signature","userHandle","doRegister","doAuthenticate","GSAdminDialog","GSDialog","connectedCallback","super","this","cssHeader","dialogTemplate","dialogTitle","async","onReady","me","on","onData","bind","onAction","onError","tpl","GSLoader","getTemplate","requestAnimationFrame","setHTML","title","auto","GSAttr","getAsBool","waiter","form","query","reset","onOpen","update","fromObject","GSEvent","prevent","detail","close","handleError","capitalizeAttr","fn","isFunctionAsync","Tn5250","version","build","release","Login","customElements","define","seal","uuid","host","replace","cancelable","align","cssTitle","GSC","logoUrl","otp","password","initDemo","unsetUI","DEMO","toggle","initAuth","engineLogin","doWebAuth","shell","assign","AdminController","login","postLogin","isWebauth","appID","ipAddress","opt","ip","authenticate","cookie","srl","webauthOnly","reload","stop","engineShell","SocketChannel","fido","isOtp","sts","res","fetch","ok","json","toggleClass","closable","parentElement","innerHTML","getEngine","api1","svc1","api2","svc2","clear","setUI","SidebarUI","GSElement","HeaderUI","attachEvent","fnName","source","dataset","Session","closeSession","Server","restart","Certificate","verifySSLClient","regenerate","code","request","requestPem","privatePem","confirm","generate","certExport","openInNewTab","explorer","downloadSavf","downloadConfig","downloadLogs","ShellUI","company","getByID","GSSearch","css","iconCSS","inputCSS","placeholder","GSEnvironment","isWebkit","searchEl","onSearch","which","GSEvents","send","set","BaseViewUI","constructor","className","table","refresh","recID","filter","flt","store","modal","tagName","toLowerCase","export","JSON","stringify","rec","onClone","setData","secondary","onRemove","subset","hasOwnProperty","onDetails","result","waitEvent","onUpdate","warn","onCreate","primary","onLoad","isArray","search","GSConfiguration","ctx","hasInstaller","self","querySelector","lic","activateDialog","installDialog","licenseDialog","printerReset","printerSetup","validate","Hosts","list","setHost","unsetHost","cloneConfig","resetPrinter","setupPrinter","activate","install","license","GSTunnel","Proxy","page","limit","save","Date","now","start","conf","fromHex","join","GSCustomization","Scripts","getScripts","header","footer","ui","setScripts","GSFilterFido","large","Fido","isActive","switcher","selectedIndex","onSwitch","activity","GSFilterIP","Filter","GSFilterMobile","Mobile","GSApiKeys","ApiKeys","add","active","GSOtp","OAuth","GSBiometrics","WebAuth","GSPrinting","Printers","prepare","toUpperCase","outq","library","userName","spoolName","GSScheduler","mapState","true","false","status","Scheduler","runNow","GSUsers","Users","commit","resync","confid","devtype","driver","drawer1","drawer2","enhanced","display","program","printer","GSWorkstations","Tweaks","terminal","Manage","listSessions","prompt","trim","sendMessage","sessionID","deviceID","loging","killDevice","sendMessages","killSessions","tmp","disconnectedCallback","values","viewSession","closed","onclose","setInterval","clearInterval","updateScreen","Keyboard","listen","getScreen","Application","Binary","GSWebmodules","WebModules","GSAbout","GSModal","undefined","html","GSCertBlocked","getBlocked","setBlocked","GSCertClient","generateClient","arr","raw","GSCertImport","setFromPEM","rootCAPub","rootCAPriv","serverPub","serverPriv","rootPass","serverPass","input","file","files","buff","arrayBuffer","pfx","setFromPFX","GSCertOpt","loadConfig","saveConfig","GSLoginAdmin","getConfig","newAuth","GSLoginDefaults","getDefaults","saveDefaults","GSOtpOptions","getOtp","saveOTP","GSRegisterBiometrics","isAllowed","register","GSRegisterOtp","scratch","qrcode","token","getUrl","b64","key","replaceAll","scratchCodes","alt","GSNetwork","getInterface","redirect","nodes","setInterface","GSSystem","setConfig","reloadKerberors","GSWorkstation","def","cssBody","loadSafe","order","map","GSFilter","IP","onChange","typeField","valueField","pattern","MASK","GSService","classList","isNumber","isBool","checked","module","property","GSPrinterReset","visible","Printer","GSPrinterSetup","hpt","onHPT","hostTransform","setup","GSActivate","Activator","GSInstall","Installer","installProduct","GSLicense","addProductLicense"],"mappings":"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"}