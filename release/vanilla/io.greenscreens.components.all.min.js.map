{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSOverlay.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTag.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj ? true : false;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\t\t\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (!(editable && e.altKey)) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => !gs.includes(el)).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get asJSON() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    // @Deprecated\r\n    set data(data) {\r\n        return this.asJSON = data;\r\n    }\r\n\r\n    // @Deprecated\r\n    get data() {\r\n        return this.asJSON;\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.asJSON);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last) {\r\n            GSDOM.fromObject2Element(el, me.#last);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.asJSON = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.asJSON, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" aria-label=\"${me.ariaLabel}\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSEvents from '../base/GSEvents.mjs';\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        transform : `translate(${cfg.clientX}px, ${cfg.clientY}px)`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    //me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n// TODO - add CloseWatcher when API available\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    if (GSDialog.#STACK.length === 0) return null;\r\n    return GSDialog.#STACK[GSDialog.#STACK.length - 1];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (me.visible) {\r\n        if (dlg && !dlg.open) {\r\n          dlg.showModal();\r\n          GSDialog.#STACK.push(me);\r\n          me.emit('change');\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      me.emit('visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #onChange() {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) {\r\n        GSEvents.prevent(e);\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    me.#buttonOkEl.disabled = true;\r\n    me.forms.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    me.#buttonOkEl.disabled = false;\r\n    me.forms.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elements stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n      if (me.#isRange) {\r\n         me.attachEvent(me.#inputEl, 'input', me.#onRange.bind(me));\r\n         me.#onRange();\r\n      } \r\n   }\r\n\r\n   #onRange(e) {\r\n      const me = this;\r\n      const el = me.#outputEl;\r\n      if (el) el.innerHTML = me.#inputEl?.value || '';\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #outputEl() {\r\n      return this.query('input').nextElementSibling;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.includes(',');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}${me.#output}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #output() {\r\n      const me = this;\r\n      if (!me.#isRange) return \"\";\r\n      return `<span class=\"position-absolute px-1\">${me.value}</span>`; \r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for a gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const size = GSAttr.getAsNum(el, 'size', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const ssize = size > 0 ? `${sfx}: ${size}px;` : '';\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [ssize, smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    super.connectedCallback();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#unbindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    if (!me.#bindings) return;\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    if (!me.#bindings) return;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOverlay class\r\n * @module components/GSOverlay\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\n\r\n/**\r\n * SVG overlay renderer around selected target.\r\n * <gs-overlay target=\"#GSId-30-nav\" autoremove></gs-overlay>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOverlay extends GSElement {\r\n\r\n    static #attrs = ['target', 'opacity', 'color', 'radius', 'padding'];\r\n\r\n    #tid = 0;\r\n    #svgid = GSID.id;\r\n\r\n    static {\r\n        customElements.define('gs-overlay', GSOverlay);\r\n        Object.seal(GSOverlay);\r\n    }\r\n\r\n    static get attributes() {\r\n        return GSOverlay.#attrs;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return GSElement.observeAttributes(GSOverlay.#attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (GSOverlay.attributes.includes(name)) {\r\n            if (name === 'target') {\r\n                me.#updateSVG(oldValue, newValue);\r\n            } else {\r\n                me.#updateSVG('', me.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me  = this;\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.svg?.remove();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get autoremove() {\r\n        return this.hasAttribute('autoremove');\r\n    }\r\n\r\n    set autoremove(val) {\r\n        return GSAttr.toggle(this, 'autoremove', GSUtil.asBool(val));\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target', '');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get overlayPadding() {\r\n        return GSAttr.getAsNum(this, 'padding', 1);\r\n    }\r\n\r\n    set overlayPadding(val = 1) {\r\n        return GSAttr.setAsNum(this, 'padding', val);\r\n    }\r\n\r\n    get overlayRadius() {\r\n        return GSAttr.getAsNum(this, 'radius', 6);\r\n    }\r\n\r\n    set overlayRadius(val = 6) {\r\n        return GSAttr.setAsNum(this, 'radius', val);\r\n    }\r\n\r\n    get overlayColor() {\r\n        return GSAttr.get(this, 'color', 'rgb(0,0,0)');\r\n    }\r\n\r\n    set overlayColor(val = '') {\r\n        return GSAttr.set(this, 'color', val);\r\n    }\r\n\r\n    get overlayOpacity() {\r\n        return GSAttr.getAsNum(this, 'opacity', 0.7);\r\n    }\r\n\r\n    set overlayOpacity(val = 0.7) {\r\n        return GSAttr.setAsNum(this, 'opacity', val);\r\n    }\r\n\r\n    get svg() {\r\n        return GSDOM.getByID(this.#svgid);\r\n    }\r\n\r\n    get path() {\r\n        return GSDOM.query(this.svg, 'path');\r\n    }\r\n\r\n    open() {\r\n        const me = this;\r\n        me.#updateSVG('', me.target);\r\n    }\r\n\r\n    close() {\r\n        const me = this;\r\n        const svg = me.svg;\r\n        me.removeEvent(svg, 'click');\r\n        svg?.remove();\r\n    }\r\n    \r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    #onResize() {\r\n        const me = this;\r\n        me.close();\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.open(), 200);\r\n    }\r\n\r\n    #updateSVG(oldTarget = '', newTarget = '') {\r\n        const me = this;\r\n        if (oldTarget === newTarget) return;\r\n        if (!newTarget) return me.svg?.remove();\r\n        const el = GSDOM.query(newTarget);\r\n        if (!el) return;\r\n\r\n        const svg = me.svg || me.#createSVG();\r\n        const path = me.path || me.#createSVGPath();\r\n        const pathStr = me.#createSVGPathString(el);\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        path.setAttribute(\"d\", pathStr);\r\n        if (!me.svg) {\r\n            svg.appendChild(path);\r\n            document.body.appendChild(svg);\r\n            me.attachEvent(svg, 'click', me.reset.bind(me));\r\n        }\r\n\r\n    }\r\n\r\n    get #viewBox() {\r\n        return `0 0 ${window.innerWidth} ${window.innerHeight}`;\r\n    }\r\n\r\n    #createSVG() {\r\n\r\n        const me = this;\r\n\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.id = me.#svgid;\r\n        svg.classList.add(\"gs-overlay\", \"gs-overlay-animated\");\r\n\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        svg.setAttribute(\"xmlSpace\", \"preserve\");\r\n        svg.setAttribute(\"xmlnsXlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin slice\");\r\n\r\n        svg.style.fillRule = \"evenodd\";\r\n        svg.style.clipRule = \"evenodd\";\r\n        svg.style.strokeLinejoin = \"round\";\r\n        svg.style.strokeMiterlimit = \"2\";\r\n        svg.style.zIndex = \"10000\";\r\n        svg.style.position = \"fixed\";\r\n        svg.style.top = \"0\";\r\n        svg.style.left = \"0\";\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        return svg;\r\n    }\r\n\r\n    #createSVGPath() {\r\n        \r\n        const me = this;\r\n\r\n        const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        pathEl.style.fill = me.overlayColor;\r\n        pathEl.style.opacity = me.overlayOpacity;\r\n        pathEl.style.pointerEvents = \"auto\";\r\n        pathEl.style.cursor = \"auto\";\r\n        return pathEl;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n        \r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n        \r\n        const rect = target.getBoundingClientRect()\r\n\r\n        const padding = me.overlayPadding;\r\n        const radius = me.overlayRadius;\r\n      \r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n      \r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n      \r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n      \r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n      \r\n        return `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n          M${highlightBoxX},${highlightBoxY} \r\n          h${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n          v${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n          h-${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n          v-${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;      \r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                transform : `translate(${x}px, ${y}px)`\r\n            };\r\n            /*\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n            */\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        //if (!me.visible) me.style.transform = 'unset';\r\n        /*\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n        */\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n        me.attachEvent(el, 'dblclick', me.#onDoubleClick.bind(me));\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n        \r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', {start: true});\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', {stop: true});\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n            .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, true);\r\n                el.dataset.gsSplitter = true;\r\n            });\r\n        } else {\r\n            me.#lockable\r\n            .filter(el => el.dataset.gsSplitter)\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, false);\r\n                delete el.dataset.gsSplitter;\r\n            });            \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n    \r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTag extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSTag.#style);\r\n        customElements.define('gs-tag', GSTag);\r\n        Object.seal(GSTag);\r\n    }\r\n\r\n    static get #style() {\r\n        return `\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = me.#renderList();\r\n        const tags = me.#renderTags();\r\n        return `\r\n        <div class=\"d-flex flex-wrap align-items-center gap-1 ${me.css}\">\r\n            ${tags}\r\n            <input list=\"${me.name}_list\" name=\"${me.name}\" type=\"text\" class=\"form-control d-flex w-auto flex-grow-1\" placeholder=\"${me.placeholder}\">\r\n            <datalist id=\"${me.name}_list\">${items}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.query('div'), 'click', me.#onClick.bind(me));\r\n        me.attachEvent(me.#input, 'keydown', me.#onKeyDown.bind(me));\r\n        me.attachEvent(me.#input, 'input', me.#onInput.bind(me));\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTag.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.#data.length >= me.max;\r\n    }\r\n\r\n    get #data() {\r\n        return this.queryAll('.tag').map(el => el.dataset.value);\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();        \r\n    }\r\n\r\n    get #isDuplicate() {\r\n        const me = this;\r\n        const val = me.#input.value.toLowerCase();\r\n        return me.values.filter( v => v.toLowerCase() === val).length > 0 ;\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax ||(!optEl && me.allowAdd == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (me.#isDuplicate) return;\r\n        const src = me.#renderTag(fld.value);\r\n        const el = GSDOM.parse(src, true);\r\n        fld.insertAdjacentElement('beforebegin', el);\r\n        fld.value = '';\r\n        optEl?.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n    \r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const opt  = document.createElement('option');\r\n        opt.value = tagEl.dataset.value;\r\n        me.#datalist.appendChild(opt);\r\n        tagEl.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        return items.map(el => `<option value=\"${el.name}\">`).join('');\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v)).join('');\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        return `<div class=\"badge tag ${me.cssTag}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"btn-close ms-1 ${me.cssClose}\"></button></div>`;\r\n    }\r\n  \r\n    get #input() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.query('datalist');\r\n    }\r\n\r\n    get allowAdd() {\r\n        return GSAttr.getAsBool(this, 'allowadd', false);\r\n    }\r\n\r\n    set allowAdd(val = false) {\r\n        return GSAttr.betAsBool(this, 'allowadd', val);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set max(val = 0) {\r\n        return GSAttr.setAsNum(this, 'max', val);\r\n    }\r\n\r\n    get values() {\r\n        return GSAttr.get(this, 'values', '').split(',').map(v => v.trim());\r\n    }\r\n\r\n    set values(val = '') {\r\n        return GSAttr.set(this, 'values', val);\r\n    }\r\n\r\n    get placeholder() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return GSAttr.get(this, 'placeholder', alt);\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val)\r\n    }    \r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '')\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }  \r\n\r\n    get cssTag() {\r\n        return GSAttr.get(this, 'css-tag', 'bg-secondary')\r\n    }\r\n\r\n    set cssTag(val = '') {\r\n        return GSAttr.set(this, 'css-tag', val);\r\n    }    \r\n\r\n    get cssClose() {\r\n        return GSAttr.get(this, 'css-close', 'text-bg-light')\r\n    }\r\n\r\n    set cssClose(val = '') {\r\n        return GSAttr.set(this, 'css-close', val);\r\n    }    \r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = null;\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events = {};\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events?.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events?.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events?.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', parent = '', css = '') {\r\n\r\n        const me = this;\r\n        const name = el.name || el.title;\r\n        const path = `${parent}/${name}`\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = GSUtil.isStringEmpty(pid) ? idx : `${pid}.${idx}`;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" `);\r\n        html.push(`data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\"  `);\r\n        html.push(`data-path=\"${path}\"  data-name=\"${name}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, path, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                if (sts) {\r\n                    const cl = cid.split('\\.').length;\r\n                    if (cl > pl + 1) {\r\n                        el = el.nextElementSibling;\r\n                        continue;    \r\n                    }\r\n    \r\n                    if (pl + 1 != cl && sts) break;\r\n                }\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parentNode(nodeid) {\r\n        return nodeid.split('.').slice(0,-1).join('.');\r\n    }\r\n\r\n    #parent(el) {\r\n        const me = this;\r\n        el = el || me.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = me.#parentNode(s);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    #next(el) {\r\n        el = el?.nextElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.nextElementSibling;\r\n        }\r\n        return el;\r\n    }\r\n\r\n    #previous(el) {\r\n        el = el?.previousElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.previousElementSibling;\r\n        }        \r\n        return el;\r\n    }\r\n\r\n    get level() {\r\n        return this.#selected?.dataset.nodeid.split('.').length || -1;\r\n    }\r\n\r\n    get path() {\r\n        return this.#selected?.dataset.path;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:first-of-type'));\r\n        const el = me.#next(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.next() ;\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        const el = me.#previous(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.prev() ;\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     * TODO - path navigation\r\n     */\r\n    open(path) {\r\n        const me = this;\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isOpen && isFolder) return me.next();\r\n        me.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     * TODO - path navigation\r\n     */\r\n    close(path) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || !(isOpen && isFolder)) return me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        // me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.repaint();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #filter = [];\r\n    #sort = [];\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        me.#filter = [];\r\n        me.#sort = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = [...me.#data, ...records];\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    // NOT used, dialog issue delay=\"${delay}\"\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        const me = this;\r\n        const html = e.data.data;\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles$1","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","tracing","forced","logging","tmp","nodeName","fn","console","log","Error","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","own","contextualize","accept","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","Reflect","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents$1","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSPromise$1","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","AbortController","GSAbortController","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","getOwnPropertyDescriptor","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","waitEvent","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","repaint","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","reset","read","submit","onSubmit","elements","storage","fromObject","reportValidity","toObject","handler","old","write","onField","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","isFormElement","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","metaKey","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","dissmis","comment","ariaLabel","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","getAttrs","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","isCompany","isYear","company","GSDialog","STACK","isConnected","updateStack","dlg","dialog","showModal","focusable","monitorAction","onForm","onEscape","onClose","onCancel","buttonOkEl","forms","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","isRange","onRange","outputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isVertical","isSwitch","output","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSOverlay","tid","svgid","updateSVG","svg","autoremove","overlayPadding","overlayRadius","overlayColor","overlayOpacity","oldTarget","newTarget","createSVG","createSVGPath","pathStr","createSVGPathString","viewBox","createElementNS","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathEl","fill","pointerEvents","cursor","windowX","windowY","radius","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","Event","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onDoubleClick","csize","onMouseUp","onMouseMove","lock","updateMouse","lockable","gsSplitter","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTag","renderList","renderTags","inputType","updateTag","srcElement","removeTag","addTag","isMax","optEl","allowAdd","renderTag","tagEl","cssTag","cssClose","betAsBool","alt","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","notify","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","assign","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","GSMarkdown","converter","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}