{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTag.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = new CSSStyleSheet();\t\t\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\tif (!(id && style)) return;\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic flatten(el) {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        return this.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event \r\n     * @param {string} type Event name to be listened\r\n     * @returns {Event}\r\n     */\r\n    wait(type = '') {\r\n        if (!type) return e('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(type, (e) => r(e));\r\n        });\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst me = this;\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst rule = GSCacheStyles.getRule(source.dataset.cssId);\r\n\r\n\t\tconst style = rule ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tif (rule) GSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tif (rule) rule.style.transform = style.transform;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * See GSQuery class\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (editable && !e.altKey) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static #actions = ['ok', 'reset', 'submit'];\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvents.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n        GSEvents.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e) {\r\n\r\n        const el = e.composedPath().shift();\r\n        const action = el?.dataset.action || e.detail.action || el?.type;\r\n        if (!GSFormExt.#actions.includes(action)) return;\r\n\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n\r\n        switch (action) {\r\n            case 'reset':\r\n                me.reset();\r\n                break;\r\n            case 'ok':\r\n            case 'submit':\r\n                GSFormExt.#onSubmit(e, me);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvents.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) return me.reportValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        setTimeout(() => {\r\n            me.#onDataChange();\r\n        }, 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el.tagName);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos - 1] = me.mask[pos - 1];\r\n                pos = pos1 - 1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n\r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                }\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos + 1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos + 1, pos + 1);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.id = GSID.id;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvents.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvents.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvents.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSEvents from '../base/GSEvents.mjs';\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        GSEvents.send(me, 'date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n        me.#updateTarget(date);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    const cfg = {clientX: x.clientX || x, clientY: x.clientY || y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        transform : `translate(${cfg.clientX}px, ${cfg.clientY}px)`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close');\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = null;\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style = { left : `${left}px`};\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style = {top : `${top}px`};\r\n      }\r\n      GSCacheStyles.setRule(me.id, style);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        GSEvents.prevent(e);\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    me.close();\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    //me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => GSEvents.send(me, 'open'));\r\n    me.attachEvent(me.#menu, 'close', e => GSEvents.send(me, 'close'));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n                 .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    if (!me.target) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.data?.action);\r\n    if (sts) return;\r\n    data.type = 'contextmenu';\r\n    GSEvents.send(me, 'action', data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static get top() {\r\n    return GSDialog.#STACK.length === 0 ? null : GSDialog.#STACK[GSDialog.#STACK.length-1];\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        if (!me.#dialog.open) {\r\n          me.#dialog.showModal();\r\n          GSDialog.#STACK.push(me);\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        me.#dialog.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      GSEvents.send(me, 'visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const sts = GSEvents.send(me, 'data', { type: 'dialog', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n     if (me.cancelable)  me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvents.send(me, 'error', { type: 'dialog', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvents.send(me, 'action', { type: 'dialog', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvents.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'open', { type: 'dialog' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'close', { type: 'dialog', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */  \r\n  extra() {\r\n    \r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0\">\r\n        <div class=\"card  ${me.css}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.action || data.data?.action);\r\n    if (sts) return;\r\n    data.type = 'dropdown';\r\n    GSEvents.send(me, 'action', data?.data || data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n  #validateAllowed() {\r\n      const me = this;\r\n      let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'body');\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"body\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${idattr} name=\"${me.name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${me.#checked}\r\n               ${me.#mask} ${me.#pattern} ${me.#value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} ${me.#value} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">\r\n         ${me.#input}         \r\n         </slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n\r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n   \r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n   \r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n  }\r\n     \r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }   \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.next()}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvents.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const sts = GSEvents.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvents.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvents.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvents.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra' : return 'modal-xl';\r\n      case 'large' : return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;    \r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') GSEvents.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.expanded;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property' : `${pos} !important`,\r\n      'transition-duration' : `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function' : `${me.transitionFunction} !important`\r\n    };\r\n    obj[pos] = `${val}px !important`;\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement} ${this.styleID}\"  data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvents.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                transform : `translate(${x}px, ${y}px)`\r\n            };\r\n            /*\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n            */\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        //if (!me.visible) me.style.transform = 'unset';\r\n        /*\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n        */\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = GSEvents.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTag extends GSElement {\r\n\r\n    static {\r\n        GSCacheStyles.injectStyle(GSTag.#style);\r\n        customElements.define('gs-tag', GSTag);\r\n        Object.seal(GSTag);\r\n    }\r\n\r\n    static get #style() {\r\n        return `\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = me.#renderList();\r\n        const tags = me.#renderTags();\r\n        return `\r\n        <div class=\"d-flex flex-wrap align-items-center gap-1 ${me.css}\">\r\n            ${tags}\r\n            <input list=\"${me.name}_list\" name=\"${me.name}\" type=\"text\" class=\"form-control d-flex w-auto flex-grow-1\" placeholder=\"${me.placeholder}\">\r\n            <datalist id=\"${me.name}_list\">${items}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.query('div'), 'click', me.#onClick.bind(me));\r\n        me.attachEvent(me.#input, 'keydown', me.#onKeyDown.bind(me));\r\n        me.attachEvent(me.#input, 'input', me.#onInput.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (['Enter', 'NumpadEnter', 'Comma', 'Space'].indexOf(e.code) < 0) return;        \r\n        this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.#data.length >= me.max;\r\n    }\r\n\r\n    get #data() {\r\n        return this.queryAll('.tag').map(el => el.dataset.value);\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();        \r\n    }\r\n\r\n    get #isDuplicate() {\r\n        const me = this;\r\n        const val = me.#input.value.toLowerCase();\r\n        return me.values.filter( v => v.toLowerCase() === val).length > 0 ;\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax ||(!optEl && me.allowAdd == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (me.#isDuplicate) return;\r\n        const src = me.#renderTag(fld.value);\r\n        const el = GSDOM.parse(src, true);\r\n        fld.insertAdjacentElement('beforebegin', el);\r\n        fld.value = '';\r\n        optEl?.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n    \r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const opt  = document.createElement('option');\r\n        opt.value = tagEl.dataset.value;\r\n        me.#datalist.appendChild(opt);\r\n        tagEl.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        return items.map(el => `<option value=\"${el.name}\">`).join('');\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v)).join('');\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        return `<div class=\"badge tag ${me.cssTag}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"btn-close ms-1 ${me.cssClose}\"></button></div>`;\r\n    }\r\n  \r\n    get #input() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.query('datalist');\r\n    }\r\n\r\n    get allowAdd() {\r\n        return GSAttr.getAsBool(this, 'allowadd', false);\r\n    }\r\n\r\n    set allowAdd(val = false) {\r\n        return GSAttr.betAsBool(this, 'allowadd', val);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set max(val = 0) {\r\n        return GSAttr.setAsNum(this, 'max', val);\r\n    }\r\n\r\n    get values() {\r\n        return GSAttr.get(this, 'values', '').split(',').map(v => v.trim());\r\n    }\r\n\r\n    set values(val = '') {\r\n        return GSAttr.set(this, 'values', val);\r\n    }\r\n\r\n    get placeholder() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return GSAttr.get(this, 'placeholder', alt);\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val)\r\n    }    \r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '')\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }  \r\n\r\n    get cssTag() {\r\n        return GSAttr.get(this, 'css-tag', 'bg-secondary')\r\n    }\r\n\r\n    set cssTag(val = '') {\r\n        return GSAttr.set(this, 'css-tag', val);\r\n    }    \r\n\r\n    get cssClose() {\r\n        return GSAttr.get(this, 'css-close', 'text-bg-light')\r\n    }\r\n\r\n    set cssClose(val = '') {\r\n        return GSAttr.set(this, 'css-close', val);\r\n    }    \r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.injectStyle(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvents.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvents.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        \r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n        \r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.getData(me.skip, me.limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        requestAnimationFrame(() => me.store.page = 1);\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvents.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvents.send(me, 'selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvents.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvents.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSEvents from \"../../base/GSEvents.mjs\";\r\n import GSAttr from \"../../base/GSAttr.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n import GSData from \"../../base/GSData.mjs\";\r\n import GSUtil from \"../../base/GSUtil.mjs\";\r\n \r\n /**\r\n  * table header sorting coluns\r\n  * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n  * @class\r\n  * @extends {HTMLTableRowElement}\r\n  */\r\n export default class GSTableSort extends HTMLTableRowElement {\r\n \r\n     #sc = 0;\r\n \r\n     static {\r\n         customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n         Object.seal(GSTableSort);\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n         GSComponents.store(me);\r\n         me.onReady();\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         GSComponents.remove(me);\r\n         GSEvents.deattachListeners(me);\r\n     }\r\n \r\n     onReady() {\r\n         const me = this;\r\n         requestAnimationFrame(() => {\r\n             me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n         });\r\n     }\r\n \r\n     get #autoSortable() {\r\n         return this.#sortable.filter(el => el.dataset.order != '0');\r\n     }\r\n \r\n     get #sorted() {\r\n         return this.#sortable.filter(el => el.dataset.idx != '0');\r\n     }\r\n \r\n     get #sortable() {\r\n         return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n     }\r\n \r\n     #onClick(e) {\r\n         const me = this;\r\n         const el = e.composedPath().shift();\r\n         if (el.tagName !== 'TH') return;\r\n         if (el.dataset.sortable != 'true') return;\r\n         const ord = GSUtil.asNum(el.dataset.order);\r\n         el.dataset.order = ord > 0 ? -1 : 1;\r\n         requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n     }\r\n \r\n     #onColumnSort(el, append = false) {\r\n \r\n         const me = this;\r\n \r\n         const ord = GSUtil.asNum(el.dataset.order, -1);\r\n \r\n         if (append) {\r\n             me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n             GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n         } else {\r\n             me.#sc = 1;\r\n             GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                 el.dataset.idx = 0;\r\n                 el.dataset.order = 0;\r\n                 GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n             });\r\n         }\r\n \r\n         el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n         el.dataset.idx = me.#sc;\r\n         el.dataset.order = ord;\r\n         GSDOM.toggleClass(el, 'table-active', true);\r\n \r\n \r\n         let sort = [];\r\n         me.#sorted.forEach(el => {\r\n             const ord = GSUtil.asNum(el.dataset.order, 1);\r\n             const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n             const name = GSAttr.get(el, 'name', el.innerText);\r\n             const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n             sort.push(cfg);\r\n         });\r\n         sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n \r\n         GSEvents.send(me, 'sort', sort, true);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvents.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return el.value;\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const me = this;\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    const toast = me.#dialogToast;\r\n    requestAnimationFrame(() => {\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.injectStyle(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles$1","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","dynamic","adoptedStyleSheets","styles","Array","from","filter","selectorText","pop","sync","rule","getRule","insertRule","setRule","data","replaceAll","split","map","trim","entries","kv","updateRule","prop","isImportant","setProperty","deleteRule","sort","a","b","String","localeCompare","values","css","getOrSet","freeze","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","push","innerHTML","textContent","isNull","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","listen","prevent","onKeyDown","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","unlisten","once","hasFunction","preventDefault","stopPropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEvent","EventTarget","listeners","Set","listener","off","emit","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents$1","GSComponents","els","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","receiver","Proxy","GSQuery","instance","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","start","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","c","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","attachEvents","onSubmit","onAction","actions","reset","reportValidity","toObject","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","_","revealing","masks","placeholder","mask","toPattern","onDataChange","strict","optimized","chars","cnt","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isFormElement","isInList","clean","p","dataGroup","clipboard","writeText","select","required","clipboardData","getData","formatMask","isReveal","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","canceled","every","title","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","end","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","setAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","btn","activeCSS","dismissible","GSButton","disable","button","blur","icon","dissmis","comment","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","hasClass","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","vel","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","clientX","clientY","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","is","isSub","childElementCount","renderSub","fromDOM","renderChild","header","attrs","getAttrs","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","onError","GSDialog","STACK","dialog","showModal","focusable","onForm","onEscape","onClose","onCancel","isAcceptedAction","isOk","forms","form","reportForm","submitForm","info","confirm","prompt","QUERY_INPUT","buttonCancelEl","buttonOkEl","align","footer","buttonOk","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","validateAllowed","labelEl","inputEl","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","idattr","autoid","cssField","autocomplete","autocapitalize","multiple","accept","step","min","max","minlength","maxlength","description","readonly","cssLabel","cellLabel","isCheckable","isRange","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","previousElementSibling","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","setSize","dlg","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","backdropEl","canvasEl","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSPopover","unfocus","isPopover","hasPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","bsTrigger","openable","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","Event","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","cursor","autostore","ruleDynamic","cssDynamic","full","isPreceeding","isStyleValue","save","onMouseDown","onMouseUp","onMouseMove","updateMouse","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","tab","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","renderPaneFlat","renderPaneShadow","activePaneCSS","cssPane","GSTag","renderList","renderTags","inputType","updateTag","srcElement","HTMLButtonElement","removeTag","addTag","isMax","optEl","fld","allowAdd","renderTag","tagEl","cssTag","cssClose","betAsBool","alt","GSTooltip","isTooltip","GSAttachment","file","directory","transfer","transferredFiles","files","f","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","resolve","entry","reject","reader","createReader","read","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","clearTimeout","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","remote","skip","limit","page","total","hasSetter","reload","MODES","table","toURL","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","formatFilter","formatSort","filterData","sortData","notify","encodeURIComponent","fromLiteral","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","Number","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","tid","setCSS","dataID","waitFor","contextMenu","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","processData","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","dom","ctx","postResize","pg","th","GSTableSort","HTMLTableRowElement","sc","autoSortable","sorted","cellIndex","GSTableFilter","attachChangeListener","attachDataListener","getRoot","getValue","listID","GSPagination","firstlast","nextprev","getHtml","previous","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten"],"mappings":"AAce,MAAMA,eAAeC,YAEnCC,SAAa,EAEbC,GAAS,GAEEC,gCACV,MAAO,EACP,CAMDF,gBAEC,OADAF,QAAOK,IACA,SAASL,QAAOK,GACvB,CAODH,gBAAgBI,GACf,IAAIC,EAAI,EACPC,EAAIF,EAAEG,OACNC,EAAI,EAEL,GAAIF,EAAI,EAEP,KAAOE,EAAIF,GACVD,GAAKA,GAAK,GAAKA,EAAID,EAAEK,WAAWD,KAAO,EAKzC,OAAOH,CACP,CAaDL,iBAAiBU,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GACnG,MAAMC,EAAQ,IAAIC,YAAYN,EAAM,CAAEO,OAAQN,EAAKC,QAASA,EAASC,SAAUA,EAAUC,WAAYA,IACrG,OAAON,EAAOU,cAAcH,EAC5B,CASDjB,0BAA0BU,EAASC,SAAUC,EAAMC,EAAM,IACxDQ,uBAAsB,KACrBvB,OAAOwB,UAAUZ,EAAQE,EAAMC,EAAI,GAEpC,CAKDU,oBAEC,MAAMC,EAAKC,KAEX,GAAID,EAAGE,KAAOF,EAAGG,eAAgB,CAEhC,MAAMC,EAAO9B,OAAO+B,SAASL,EAAGE,KAGhC,GADYf,SAASmB,cAAc,eAAeF,OAIjD,YADAJ,EAAGO,SAIJ,MAAMC,EAAKR,EAAGS,SAGVD,KAFcA,aAAcE,WAI/BF,EAAGG,QAAQP,KAAOA,EAEdJ,EAAGY,OACNzB,SAAS0B,KAAKC,YAAYN,GAG1BR,EAAGe,sBAAsB,WAAYP,GAGlCR,EAAGgB,SACNR,EAAG7B,GAAK6B,EAAG7B,GAAK6B,EAAG7B,GAAKL,OAAO2C,SAC/BjB,GAAGvB,EAAS+B,EAAG7B,IAIjB,CAEIqB,EAAGgB,QACPhB,EAAGO,QAGJ,CAKDW,uBAEC,MAAMlB,EAAKC,KACX,GAAID,EAAGgB,QAAUhB,GAAGvB,EAAQ,CAC3B,MAAM+B,EAAKrB,SAASmB,cAAc,IAAIN,GAAGvB,KACrC+B,GAAIA,EAAGD,QACX,CACDP,EAAGmB,SAEH,CASDC,yBAAyBhC,EAAMiC,EAAUC,GACxC,MAAMtB,EAAKC,KACXJ,uBAAsB,KACrBG,EAAGuB,kBAAkBnC,EAAMiC,EAAUC,EAAS,GAE/C,CAQDC,kBAAkBnC,EAAMiC,EAAUC,GAEjC,CAKDb,SAEC,CAKDU,UAEC,CAMGK,eACH,OAAIC,UAAUC,cAAsBD,UAAUC,cAAcC,OACrD,iEAAiEC,KAAKH,UAAUI,UACvF,CAMGC,iBACH,MAAMC,EAAS9B,KAAK+B,SACpB,IAAKD,EAAQ,OAAO,EACpB,MAAMC,EAAWC,SAASD,SAASE,QAAQ,IAAK,IAChD,MAAI,SAAWH,GAAUC,IAAaD,GAClC,UAAYA,GAAUC,IAAaD,CAEvC,CAMGI,cACH,OAAOlC,KAAKmC,SAAS,eACrB,CAQDA,SAASC,EAAQ,IAEhB,IAAKA,EAAO,OAAO,EACnB,MAAMC,EAASD,EAAME,cACrB,GAAId,UAAUC,cAAe,CAC5B,IAAIc,GAAM,EAMV,OALAf,UAAUC,cAAce,OAAOC,SAASC,IACnCA,EAAEC,MAAML,cAAcM,SAASP,KAClCE,GAAM,EACN,IAEKA,CACP,CAED,MAAMM,EAAQ,IAAIC,OAAO,GAAGV,IAAS,KAErC,QADYZ,UAAUI,UAAUmB,MAAMF,EAEtC,CAMD3C,eAEC,MAAMH,EAAKC,KAELuB,EAAWxB,EAAGwB,SACdW,EAAUnC,EAAGmC,QACbL,EAAa9B,EAAG8B,WAChBmB,EAASjD,EAAGiD,OACZC,EAAMlD,EAAGkD,IAEf,QAAKpB,KAEO,WAARoB,IAAgC,IAAZf,MAIZ,YAARe,IAAiC,IAAZf,MAIb,WAARe,IAAiC,IAAb1B,MAIZ,YAAR0B,IAAkC,IAAb1B,MAIpBxB,EAAGoC,SAASa,MAKjB,CAMGC,UACH,OAAOjD,KAAKkD,aAAa,QAAU,EACnC,CAMGF,aACH,OAAOhD,KAAKkD,aAAa,WAAa,EACtC,CAMGjD,UAEH,MAAMF,EAAKC,KACX,IAAIC,EAAMF,EAAGmD,aAAa,QAAU,GAEpC,GAAe,WAAXnD,EAAGkD,IACN,MAAO,KAAOhD,EAKf,GAAIF,GAAGoD,EACN,IACC,IAAIC,EAAO,GAAGpB,SAASqB,SAASrB,SAASsB,WACrCrD,EAAIsD,WAAW,OAAMH,EAAOpB,SAASqB,QACrCpD,EAAIsD,WAAW,UAASH,OAAOI,GACnC,MAAMC,EAAM,IAAIC,IAAIzD,EAAKmD,GACzBK,EAAIE,aAAaC,OAAO,MAAOC,KAAKC,OACpC7D,EAAMwD,EAAIM,IAGV,CAFC,MAAOC,GAER,CAGF,OAAO/D,CACP,CAMGgE,WACH,MAAMlE,EAAKC,KACX,IAAIiE,EAAOlE,EAAGmD,aAAa,SAAW,GAQtC,OAPKe,IACAlE,EAAGE,IAAIiE,QAAQ,OAAS,EAC3BD,EAAO,kBACGlE,EAAGE,IAAIiE,QAAQ,QAAU,IACnCD,EAAO,aAGFA,CACP,CAMGE,YACH,OAAOnE,KAAKoE,aAAa,QACzB,CAMGC,YACH,OAAOrE,KAAKoE,aAAa,QACzB,CAMGzD,aACH,OAAOX,KAAKoE,aAAa,OACzB,CAMGrD,aACH,OAAOf,KAAKoE,aAAa,OACzB,CAOGrC,eACH,OAAO/B,KAAKkD,aAAa,aAAe,EACxC,CAMGoB,YACH,OAAOtE,KAAKkD,aAAa,UAAY,EACrC,CAEGqB,kBACH,OAAOvE,KAAKkD,aAAa,cACzB,CAEGsB,oBACH,OAAOxE,KAAKkD,aAAa,kBAAoB,MAC7C,CAEGuB,gBACH,OAAOzE,KAAKkD,aAAa,YACzB,CAEGwB,qBACH,OAAO1E,KAAKkD,aAAa,iBACzB,CAEGC,QAGH,MADe,gBAAiBwB,WAExBA,WAAWC,cAEZC,cAAsD,QAAvCA,aAAaC,QAAQ,cAC3C,QAGAC,OAAOC,KAAK3G,OACZ,EC/Ya,IAAA4G,EAAA,MAAMC,cAEpB3G,SAAgB,IAAI4G,IAQpB5G,WAAWG,EAAI0G,GACd,MAAMrF,EAAKC,KAKX,GAJIoF,aAAiBC,eACpBtF,GAAGuF,EAAOC,IAAI7G,EAAI0G,GAGE,iBAAVA,EAAoB,CAC9B,MAAMI,EAAQ,IAAIH,cAClBG,EAAMC,YAAYL,GAClBrF,GAAGuF,EAAOC,IAAI7G,EAAI8G,EAClB,CAED,OAAOzF,EAAG2F,IAAIhH,EAEd,CAODH,cAAcG,GACb,OAAOsB,MAAKsF,EAAOK,OAAOjH,EAC1B,CAODH,WAAWG,GACV,OAAOsB,MAAKsF,EAAOI,IAAIhH,EACvB,CAQDH,gBAAgBG,EAAI0G,GACnB,GAAIA,GAAmC,IAA1BA,EAAMQ,SAAS9G,OAAc,OAC1C,MAAMiB,EAAKmF,cACL3E,EAAKR,EAAG2F,IAAIhH,GAClB,OAAI6B,GACGR,EAAGwF,IAAI7G,EAAI0G,EAClB,CAMUS,qBACV,MAAM9F,EAAKmF,cACLxG,EAAK,aACX,IAAI8G,EAAQzF,EAAG2F,IAAIhH,GAMnB,OALK8G,IACJA,EAAQ,IAAIH,cACZtF,GAAGuF,EAAOC,IAAI7G,EAAI8G,GAClBtG,SAAS4G,mBAAqBZ,cAAca,QAEtCP,CACP,CAODjH,eAAeG,EAAK,IACnB,OAAOsH,MAAMC,KAAKf,cAAcW,QAAQD,UACtCM,QAAOxD,GAAKA,EAAEyD,eAAiB,IAAIzH,MAAM0H,KAC3C,CAOD7H,eAAeG,EAAK,GAAI0G,EAAQ,GAAIiB,GAAO,GAC1C,IAAM3H,IAAM0G,EAAQ,OACpB,IAAIkB,EAAOpB,cAAcqB,QAAQ7H,GACjC,IAAK4H,EAEJ,OADApB,cAAcW,QAAQW,WAAW,IAAI9H,QAC9BwG,cAAcuB,QAAQ/H,EAAI0G,EAAOiB,GAGzC,IAAIK,EAAO,GAeX,OAbCA,EADoB,iBAAVtB,EACHA,EAAMuB,WAAW,KAAM,IAAIC,MAAM,KAAKC,KAAInE,GAAKA,EAAEoE,OAAOF,MAAM,OAAMV,QAAOxD,GAAkB,IAAbA,EAAE5D,SAElFiG,OAAOgC,QAAQ3B,GAGnBiB,EACHK,EAAKjE,SAAQuE,GAAM9B,eAAc+B,EAAYX,EAAMU,EAAG,GAAIA,EAAG,MAE7DpH,uBAAsB,KACrB8G,EAAKjE,SAAQuE,GAAM9B,eAAc+B,EAAYX,EAAMU,EAAG,GAAIA,EAAG,KAAI,IAI5DV,CACP,CAED/H,SAAmB+H,EAAMY,EAAO,GAAI9B,EAAQ,IAC3C,MAAM+B,EAAc/B,EAAMlB,QAAQ,cAAgB,EAClDkB,EAAQA,EAAMnD,QAAQ,aAAc,IACpCiF,EAAOA,EAAKJ,OACZR,EAAKlB,MAAMgC,YAAYF,EAAM9B,EAAQ+B,EAAc,YAAc,GACjE,CAMD5I,kBAAkBG,EAAK,IACtBsH,MAAMC,KAAKf,cAAcW,QAAQD,UAC/BiB,KAAI,CAACnE,EAAG3D,IAAM2D,EAAEyD,eAAiB,IAAIzH,IAAOK,GAAK,IACjDmH,QAAOxD,GAAKA,GAAG,IACfD,SAAQC,GAAKwC,cAAcW,QAAQwB,WAAW3E,IAChD,CAMUqD,oBACV,OAAOC,MAAMC,KAAK,IAAId,IAAI,IAAID,eAAcI,GAAQgC,MAAK,CAACC,EAAGC,IAAMC,OAAOF,EAAE,IAAIG,cAAcF,EAAE,OAAMG,SACtG,CAKDpJ,mBAAmBqJ,EAAM,GAAIzH,EAAO,GACnC,GAAKyH,EACL,IACCzH,EAAOA,GAAQ9B,OAAO+B,SAASwH,GAC/B,MAAMpC,EAAQ,IAAIH,cAClBG,EAAMC,YAAYmC,GAClB1C,cAAc2C,SAAS1H,EAAMqF,GAC7BtG,SAAS4G,mBAAqBZ,cAAca,MAG5C,CAFC,MAAO/B,GAER,CACD,QAGAe,OAAO+C,OAAO5C,eACdP,WAAWO,cAAgBA,cAC3B,MAAME,EAAQ,gKACdF,cAAc6C,YAAY3C,EAC1B,GChKa,MAAM4C,kBAAkBC,gBAEtCC,GAAY,KAEZC,cACCC,QACA,MAAMrI,EAAKC,KACND,EAAGsI,QAAOtI,EAAGsI,MAAQhK,OAAO2C,UAC5BjB,EAAGuI,QACRvI,GAAGmI,EAAYK,YAAYxI,GAAGyI,EAAQC,KAAK1I,GAAK,GAChD,CAEDD,oBACC,CAEDmB,uBACC,MAAMlB,EAAKC,KAEX,GADA0I,cAAc3I,GAAGmI,IACZnI,EAAGuI,MAAO,OACf,MAAM9C,EAAQN,EAAc5E,OAAOP,EAAGsI,OACtChK,OAAOsK,mBAAmBzJ,SAAU,WAAYsG,EAChD,CAEDgD,KACC,MAAMzI,EAAKC,KAEX,IADcD,EAAGyF,MACL,OACZkD,cAAc3I,GAAGmI,GAEjBhD,EAAc6C,YAAYhI,EAAG6I,OAAQ7I,EAAGsI,OACxC,MAAMQ,EAAQ3D,EAAcQ,IAAI3F,EAAGsI,OACnChK,OAAOsK,mBAAmBzJ,SAAU,WAAY2J,EAChD,CAMGD,aACH,OAAO7D,OAAO4C,OAAO3H,KAAKwF,MAAMI,UAAUiB,KAAIiC,GAAKA,EAAEC,UAASC,KAAK,GACnE,CAMGxD,YACH,MAAMzF,EAAKC,KACX,OAAO+E,OAAO4C,OAAOzI,SAAS+J,aAAa/C,QAAOgD,GAAMA,EAAGC,YAAcpJ,IAAIqG,KAC7E,CAMGkC,YAEH,MAAkB,eADPtI,KACDoJ,KADCpJ,KAC0B+D,KAAKnB,SAAS,OACnD,CAMGyF,YACH,OAAOrI,KAAKkD,aAAa,QACzB,CAEGmF,UAAMgB,EAAM,IACf,OAAOrJ,KAAKsJ,aAAa,QAASD,EAClC,QAGAE,eAAeC,OAAO,cAAexB,UAAW,CAAEyB,QAAS,SAC3D1E,OAAO+C,OAAOE,UACd,EC3Ea,MAAM0B,mBAAmBC,iBAEvCzB,GAAY,KAEZC,cACCC,QACA,MAAMrI,EAAKC,KACND,EAAGsI,QAAOtI,EAAGsI,MAAQhK,OAAO2C,UACjCjB,GAAGmI,EAAYK,YAAYxI,GAAGyI,EAAQC,KAAK1I,GAAK,EAChD,CAEDD,oBACC,CAEDmB,uBAECyH,cADW1I,MACMkI,GACjB,MAAM1C,EAAQN,EAAc5E,OAFjBN,KAE2BqI,OACtChK,OAAOsK,mBAAmBzJ,SAAU,WAAYsG,EAChD,CAEDgD,KACC,MAAMzI,EAAKC,KAEX,IADcD,EAAGyF,MACL,OACZkD,cAAc3I,GAAGmI,GAEjBhD,EAAc6C,YAAYhI,EAAG6I,OAAQ7I,EAAGsI,OACxC,MAAMQ,EAAQ3D,EAAcQ,IAAI3F,EAAGsI,OACnChK,OAAOsK,mBAAmBzJ,SAAU,WAAY2J,EAChD,CAEGD,aACH,OAAO7D,OAAO4C,OAAO3H,KAAKwF,MAAMI,UAAUiB,KAAIiC,GAAKA,EAAEC,UAASC,KAAK,GACnE,CAEGxD,YACH,MAAMzF,EAAKC,KACX,OAAO+E,OAAO4C,OAAOzI,SAAS+J,aAAa/C,QAAOgD,GAAMA,EAAGC,YAAcpJ,IAAIqG,KAC7E,CAEGiC,YACH,OAAOrI,KAAKkD,aAAa,QACzB,CAEGmF,UAAMgB,EAAM,IACf,OAAOrJ,KAAKsJ,aAAa,QAASD,EAClC,QAGAtE,OAAO+C,OAAO4B,YACdH,eAAeC,OAAO,eAAgBE,WAAY,CAAED,QAAS,SAC7D,EC1Ca,MAAMG,cAAcvL,OAEvBI,gCACV,MAAO,CAAC,YAAYoL,OAAOzB,MAAM3J,mBACjC,CAED6C,kBAAkBnC,EAAMiC,EAAUC,GACjC,MAAMtB,EAAKC,KACX,GAAa,aAATb,EACJ,OAAOY,EAAG+J,SAAW/J,EAAGmB,UAAYnB,EAAGS,QACvC,CAED2H,cACCC,QACA,MAAMrI,EAAKC,KACXD,EAAG+J,SAAyB,GAAd/J,EAAGgK,SAAoBhK,EAAGiK,QAAUJ,MAAMK,WAExD,CAQD9F,eACC,MAAMpE,EAAKC,KACX,IAAID,EAAG+J,SAAP,CACK/J,EAAGsI,QAAOtI,EAAGsI,MAAQhK,OAAO2C,UAEjC,IACC,MAAMkJ,QAAYC,MAAMpK,EAAGE,KAC3B,IAAKiK,EAAIE,GAAI,OACb,MAAMxC,QAAYsC,EAAIG,OACtBnF,EAAc6C,YAAYH,EAAK7H,EAAGsI,OAClC,MAAM7C,EAAQN,EAAcQ,IAAI3F,EAAGsI,OAC/B7C,GAAOnH,OAAOsK,mBAAmBzJ,SAAU,WAAYsG,EAI3D,CAHC,MAAOxB,GACRkB,EAAc5E,OAAOP,EAAGsI,MAExB,CAbuB,CAexB,CAEDnH,UACC,MAAMnB,EAAKC,KACX,IAAKD,EAAGgB,OAAQ,OAChB,MAAMyE,EAAQN,EAAcQ,IAAI3F,EAAGsI,OACnCnD,EAAc5E,OAAOP,EAAGsI,OACxBhK,OAAOsK,mBAAmBzJ,SAAU,WAAYsG,GAChDtG,SAAS4G,mBAAqBZ,EAAca,MAC5C,CAMGsC,YACH,OAAOrI,KAAKkD,aAAa,QACzB,CAEGmF,UAAMgB,EAAM,IACf,OAAOrJ,KAAKsJ,aAAa,QAASD,EAClC,CAMGU,cACH,MAAwC,SAAjC/J,KAAKkD,aAAa,UACzB,CAMG4G,eACH,OAAO9J,KAAKoE,aAAa,WACzB,CAEG0F,aAAST,GAAM,GAClB,OAAOA,EAAMrJ,KAAKsJ,aAAa,WAAY,IAAMtJ,KAAKsK,gBAAgB,WACtE,CAMGN,YACH,OAAOhK,KAAKkD,aAAa,UAAY,SACrC,CAMU+G,yBAEV,OADW,IAAIM,gBAAgBvI,SAAS7B,KAAKqK,MAAM,IACzC9E,IAAI,UAAY,SAC1B,CAEDnH,SAAgByF,GACf,MAAMgG,EAAQJ,MAAMK,YACpBjE,MAAMC,KAAK/G,SAASuL,iBAAiB,WACnCvE,QAAO3F,GAAoB,GAAdA,EAAGwJ,UAChBtH,SAAQlC,GAAMA,EAAGuJ,SAAWvJ,EAAGyJ,QAAUA,GAC3C,QAGAjF,OAAO+C,OAAO8B,OACdL,eAAeC,OAAO,SAAUI,OAChCc,OAAOC,iBAAiB,aAAcf,OAAMgB,GAAU,EACtD,EC7Ha,MAAMC,iBAAiBxM,OAKrCmC,SAEC,MAAMT,EAAKC,KACLO,EAAKrB,SAAS4L,cAAc,UAKlC,OAHAvK,EAAGwK,IAAMhL,EAAGE,IACZF,EAAGiL,oBAAoB9E,QAAOxD,GAAW,QAANA,IAAaD,SAAQC,GAAKnC,EAAG+I,aAAa5G,EAAG3C,EAAGmD,aAAaR,MAEzFnC,CAEP,QAGAgJ,eAAeC,OAAO,YAAaqB,UACnC9F,OAAO+C,OAAO+C,SACd,ECnBa,MAAMI,eAAe5M,OAKnCmC,SAEC,MAAMT,EAAKC,KACLO,EAAKrB,SAAS4L,cAAc,QAOlC,OALAvK,EAAGwD,KAAOhE,EAAGE,IACbF,EAAGiL,oBAAoB9E,QAAOxD,GAAW,QAANA,IAAaD,SAAQC,GAAKnC,EAAG+I,aAAa5G,EAAG3C,EAAGmD,aAAaR,MAE5F3C,EAAGmL,QAAqB,eAAX3K,EAAG6I,KAAsB7I,EAAG+I,aAAa,KAAM,eAEzD/I,CAEP,CAEG6I,UACH,MAAMrJ,EAAKC,KACX,IAAIoJ,EAAMrJ,EAAGmD,aAAa,QAAU,GAMpC,OALKkG,GACArJ,EAAGE,IAAI2C,SAAS,UACnBwG,EAAM,cAGDA,CACP,CAEG8B,aACH,OAAOlL,KAAKoE,aAAa,SACzB,QAGAmF,eAAeC,OAAO,UAAWyB,QACjClG,OAAO+C,OAAOmD,OACd,ECzCa,MAAME,MAKpB5M,gBAAiB,EAOjBA,YAAYgC,EAAI6K,GACfpL,MAAKqL,EAAO9K,EAAI6K,GAAK,EAAM,OAC3B,CAOD7M,YAAYgC,EAAI6K,GACfpL,MAAKqL,EAAO9K,EAAI6K,GAAK,EAAM,OAC3B,CAOD7M,aAAagC,EAAI6K,GAChBpL,MAAKqL,EAAO9K,EAAI6K,GAAK,EAAM,QAC3B,CASD7M,WAAWgC,EAAI6K,EAAKE,GACnBtL,MAAKqL,EAAO9K,EAAI6K,EAAKE,EACrB,CAED/M,SAAcgC,EAAI6K,EAAKE,EAAQrH,GAC9B,IAAMqH,IAAUtL,KAAKuL,QAAU,OAC/B,IAAIC,EAAKC,QAAQxH,GAAQ,OAEzB,GADAuH,EAAmB,mBAAPA,EAAoBA,EAAKC,QAAQC,IACzCnL,EAAI,OAAOiL,EAAG,GAAGjL,EAAGoL,eAAepL,EAAG7B,OAAO0M,KACjDI,EAAGJ,EACH,QAGArG,OAAOC,KAAKmG,MACZ,ECvDa,MAAMS,KAEpBrN,SAAa,EAKbA,eACCyB,MAAKtB,EAAM,CACX,CAODH,YAAYsN,EAAQ,SACnB,MAAO,GAAGA,IAAQ7L,MAAKtB,KACvB,CAMUA,gBACV,OAAOsB,KAAK8L,MACZ,CAODvN,gBAAgBI,GACf,MAAME,GAAKF,GAAK,IAAIG,OACpB,IAAIF,EAAI,EAAGG,EAAI,EACf,GAAU,IAANF,EAAS,OAAOD,EACpB,KAAOG,EAAIF,GACVD,GAAKA,GAAK,GAAKA,EAAID,EAAEK,WAAWD,KAAO,EAExC,OAAOH,CACP,QAGAmG,OAAO+C,OAAO8D,KACd,EC3Ca,IAAAG,EAAA,MAAMC,OAEpBzN,SAAoB,EACpBA,YAAoC,GAAtBoG,WAAWsH,QACzB1N,gBAAkB,mBAElBA,gBAAmB2N,IAAgBC,MAAMC,WAAWF,KAAOG,SAASH,GAEpE3N,cAAiBmE,GAA4B,kBAANA,GAAmBA,aAAa4J,QAEvE/N,gBAAkB6D,GAA0B,iBAAVA,EAElC7D,cAAgB6D,GAASA,QAEzB7D,gBAAkB,CAAC6D,EAAQ,IAAMA,EAAMmK,SAAS,GAEhDhO,aAAe,CAAC8K,EAAM,EAAGmD,EAAM,IAAMR,OAAOS,SAASpD,GAAO+C,WAAW/C,GAAOmD,EAE9EjO,cAAgB,CAAC8K,GAAM,IAAkD,SAAxCA,EAAIkD,WAAWzF,OAAOxE,cAEvD/D,mBAAqB,CAACmO,EAAM,GAAItN,IAAQsN,EAAIzK,QAAQ,cAAc,CAAC0K,EAAGC,IAAMxN,EAAIwN,KAEhFrO,kBAAoB,CAACsO,EAAO,KAAOA,EAAK,GAAGC,cAAgBD,EAAKrC,MAAM,GAAGlI,cAEzE/D,qBAAuB,CAACsO,EAAO,GAAIjG,EAAQ,MAAQiG,EAAKjG,MAAMA,GAAOC,KAAI,CAACnE,EAAG3D,IAAMiN,OAAOe,WAAWrK,KAAIsG,KAAKpC,GAE9GrI,sBAAwB,CAACsO,EAAO,KAAOA,EAAKjG,MAAM,KAAKC,KAAI,CAACnE,EAAG3D,IAAMA,EAAIiN,OAAOe,WAAWrK,GAAKA,IAAGsG,KAAK,IAExGzK,iBAAmB,KAAQ,MAAM,IAAIyO,MAAM,oCAAmC,EAO9EzO,aAAe,CAAC0B,EAAM,KAAO,8CAA8C0B,KAAK1B,EAAI6G,QAEpFvI,cAAgB,CAAC8K,EAAM,KAAOA,EAAIzG,SAAS,MAAQyG,EAAIzG,SAAS,KAQhErE,oBAAsB,CAAC0O,EAAU,2BAA4BC,EAAU,qBAAuBD,EAAQhL,QAAQ,QAAQ,IAAMiL,EAAQC,KAAKC,MAAMD,KAAKE,SAAWH,EAAQpO,WAM5JwO,oBACV,OAAO9L,UAAU+L,SAAW/L,UAAU+L,SAAW/L,UAAUgM,UAAU,EACrE,CAEDjP,oBAAoB8K,EAAM,IACzB,MAAqB,iBAAPA,IAAoBA,EAAI9F,WAAW,MAAQ8F,EAAI9F,WAAW,KACxE,CAODhF,kBAAkB8K,EAAM,IACvB,OAAOrD,MAAMyH,QAAQpE,IAAsB,iBAAPA,CACpC,CAOD9K,cAAc8K,EAAM,IACnB,OAAO2C,OAAO0B,aAAarE,IAAQ2C,OAAO2B,WAAWtE,EACrD,CAOD9K,cAAc8K,EAAM,IACnB,OAAI2C,OAAO0B,aAAarE,GAAauE,KAAKC,MAAMxE,GAC5C2C,OAAO2B,WAAWtE,GAAaA,GACnC8B,MAAM2C,KAAK,KAAM,sCAAsCzE,KAChD,KACP,CAOD9K,iBAAiB8K,EAAK0E,EAAM,IAC3B,OAAQ1E,GAAO0E,GAAKxB,WAAWzF,MAC/B,CAQDvI,qBAAqByP,EAAS,GAAI5L,EAAQ,IACzC,OAAQ4L,GACP,IAAK,YACJ5L,EAAQA,EAAME,cACd,MACD,IAAK,YACJF,EAAQA,EAAM0K,cACd,MACD,IAAK,aACJ1K,EAAQ4J,OAAOiC,cAAc7L,GAG/B,OAAOA,CACP,CAYD7D,2BAA2B2P,EAAKC,GAC/B,MAAMC,EAAQrJ,OAAOsJ,KAAKF,GACpBG,EAAOvJ,OAAO4C,OAAOwG,GAC3B,OAAO,IAAII,YAAYH,EAAO,YAAYF,OAAnC,IAAgDI,EACvD,CAOD/P,kBAAkB6D,GACjB,IAAK4J,OAAOwC,SAASpM,GAAQ,OAC7B,IAAK4J,OAAOyC,iBAAiBrM,GAAQ,OACrC,IAAI0G,EAAI4B,OACJc,EAAK,KAQT,OAPApJ,EAAM0E,OAAOF,MAAM,KAAKnE,SAAQ,CAACC,EAAG3D,EAAGwI,KACtC,GAAKuB,EACL,OAAI/J,EAAIwI,EAAEzI,OAAS,EACXgK,EAAIA,EAAEpG,QAEd8I,EAAK1C,EAAEpG,GAAE,IAEH8I,CACP,CAQDjN,wBAAwB8K,EAAM,IAC7B,OAAQ2C,OAAO0C,cAAcrF,EAC7B,CAQD9K,qBAAqB8K,EAAM,IAC1B,QAAI2C,OAAOwC,SAASnF,IAAmC,IAAtBA,EAAIvC,OAAOhI,MAE5C,CASDP,qBAAqBoQ,EAAMC,GAC1B,MAAMC,EAAS7C,OAAOyC,iBAAiBE,GACjCG,EAAS9C,OAAOyC,iBAAiBG,GACvC,OAAIC,GAAUC,EACNH,EAAK7H,OAAOxE,eAAiBsM,EAAM9H,OAAOxE,cAE3CuM,IAAWC,CAClB,CASDvQ,qBAAqBwQ,EAAO,GAC3B,OAAO,IAAItO,SAASuO,IACnBC,WAAWD,EAAEvG,KAAK,MAAM,GAAOsG,EAAK,GAErC,CAQDxQ,6BAA6B2J,GAC5B,GAAwB,mBAAbA,EACX,OAAI8D,QAAOkD,EAAa,EAAUhH,KAClC8D,QAAOkD,IACAvK,WAAW/E,uBAAsB,KACvC,IACCsI,GAKA,CAJC,MAAOlE,GAEZ,CAAa,QACTgI,QAAOkD,GACP,KAEF,CAUD3Q,oBAAoBmI,EAAMvH,EAAM8E,EAAO,gBAEtC,MAAMkL,EAAO,IAAIC,KAAK1I,EAAM,CAAEzC,KAAMA,IAC9BhE,EAAMyD,IAAI2L,gBAAgBF,GAChC,IACC,MAAM5H,EAAIrI,SAAS4L,cAAc,KACjCvD,EAAExD,KAAO9D,EACTsH,EAAE+H,SAAWnQ,EACboI,EAAEgI,cAEIvD,OAAOwD,QAAQ,IAIrB,CAFS,QACT9L,IAAI+L,gBAAgBxP,EACpB,CACD,CAiBD1B,gBAAgBY,EAAMuQ,EAAOC,EAAK3K,GAAO,EAAM8C,GAAS,EAAO8H,GAAS,GAClEtR,YAAYuR,cAAcH,KAC3BnG,eAAe7D,IAAIvG,KACvBoK,eAAeC,OAAOrK,EAAMuQ,EAAO,CAAEjG,QAASkG,GAAKrN,gBAC/C0C,IAASD,OAAO+K,SAASJ,IAAQ3K,OAAOC,KAAK0K,GAC7C5H,IAAW/C,OAAOgL,SAASL,IAAQ3K,OAAO+C,OAAO4H,GACjDE,IAAQI,KAAKN,EAAMvQ,MAAQuQ,IAC/B,CAQDnR,0BAA0BwM,GACzB,MAAMoE,EAAO,IAAIC,KAAK,CAACrE,GAAM,CAAE9G,KAAM,oBAC/BhE,EAAMyD,IAAI2L,gBAAgBF,GAChC,IACC,aAAac,OAAOhQ,EAGpB,CAFS,QACTyD,IAAI+L,gBAAgBxP,EACpB,CACD,QAGA8E,OAAOC,KAAKgH,QACZrH,WAAWqH,OAASA,MACpB,GCvSa,MAAMkE,WAQjB3R,kBAAqBiN,GAAqB,mBAAPA,EAEnCjN,wBAAwBiN,GACpB,OAAO0E,WAAWC,WAAW3E,IAAOA,EAAGe,WAAWrI,QAAQ,eAAiB,CAC9E,CASD3F,mBAAmBuK,EAAG0C,GAClB,OAAO1C,GAAKoH,WAAWC,WAAWrH,EAAE0C,GACvC,CAQDjN,uBAAuBiN,GACnB,IAAK0E,WAAWC,WAAW3E,GAAK,OAAO,EAEvC,IAAI4E,EAAU5E,aADQ0E,WAAWG,kBAAkBlI,YAGnD,OADKiI,IAASA,EAAoC,iBAA1B5E,EAAG8E,OAAOC,cAC3BH,CACV,CAWD7R,+BAA+BiN,EAAIgF,GAC/B,IACI,aAAahF,EAAGgF,EAGnB,CAFC,MAAOxM,GACL,OAAOA,CACV,CACJ,CAUDzF,wBAAwBiN,EAAIgF,GACxB,IACI,OAAOhF,EAAGgF,EAGb,CAFC,MAAOxM,GACL,OAAOA,CACV,CACJ,CASDzF,oBAAoBiN,EAAIgF,EAAOC,GAAS,GACpC,GAAKP,WAAWC,WAAW3E,KACtBiF,IAAUP,WAAWQ,iBAAiBlF,IAC3C,OAAI0E,WAAWS,gBAAgBnF,GACpB0E,WAAWG,kBAAkB7E,EAAIgF,GAErCN,WAAWU,iBAAiBpF,EAAIgF,EAC1C,CAQDjS,qBAAqB6D,GACjB,MAAMoJ,EAAKQ,EAAO6E,WAAWzO,GAC7B,OAAO8N,WAAWC,WAAW3E,GAAMA,EAAK,IAC3C,QAGGzG,OAAOC,KAAKkL,WACf,ECpGU,MAAMY,OAOpBvS,qBAAqBgC,GACpB,OAAOA,aAAcjC,WACrB,CASDC,cAAcgC,EAAIpB,EAAMkK,GAAM,GACxByH,OAAOC,cAAcxQ,KACtB8I,EACH9I,EAAG+I,aAAanK,EAAM,IAEtBoB,EAAG+J,gBAAgBnL,GAEpB,CASDZ,WAAWgC,EAAIpB,EAAMkK,GACfyH,OAAOC,cAAcxQ,KACtByL,EAAOgF,UAAU3H,GACpB9I,EAAG+I,aAAanK,EAAMkK,GAEtB9I,EAAG+J,gBAAgBnL,GAEpB,CAUDZ,WAAWgC,EAAIpB,EAAO,GAAIkK,EAAM,IAC/B,IAAKyH,OAAOC,cAAcxQ,GAAK,OAAO8I,EACtC,MAAM3G,EAAInC,EAAG2C,aAAa/D,IAASkK,EACnC,OAAO2C,EAAOgF,UAAUtO,EACxB,CAUDnE,iBAAiBgC,EAAIpB,EAAO,GAAIkK,EAAM,SACrC,MAAM4H,EAAOH,OAAOpL,IAAInF,EAAIpB,EAAMkK,GAClC,OAAO2C,EAAOkF,OAAOD,EAAM5H,EAC3B,CAUD9K,gBAAgBgC,EAAIpB,EAAO,GAAIkK,EAAM,KACpC,MAAM4H,EAAOH,OAAOpL,IAAInF,EAAIpB,EAAMkK,GAClC,OAAO2C,EAAOmF,MAAMF,EAAM5H,EAC1B,CAUD9K,iBAAiBgC,EAAIpB,EAAO,GAAIkK,EAAM,KACrC,MAAM4H,EAAOH,OAAOpL,IAAInF,EAAIpB,EAAMkK,EAAK,CAAA,GACvC,OAAOuE,KAAKC,MAAMoD,EAClB,CAED1S,iBAAiBgC,EAAIpB,EAAO,GAAIkK,EAAM,SACrC,OAAOyH,OAAOvL,IAAIhF,EAAIpB,EAAM6M,EAAOkF,OAAO7H,IAAM,EAChD,CAED9K,gBAAgBgC,EAAIpB,EAAO,GAAIkK,EAAM,KACpC,OAAOyH,OAAOvL,IAAIhF,EAAIpB,EAAM6M,EAAOmF,MAAM9H,GAAM+H,IAC/C,CAED7S,iBAAiBgC,EAAIpB,EAAO,GAAIkK,EAAM,KACrC,OAAOyH,OAAOvL,IAAIhF,EAAIpB,EAAMyO,KAAKyD,UAAUhI,GAAM,KACjD,CAOD9K,oBAAoBgC,GACnB,OAAOyF,MAAMC,KAAK1F,EAAG+Q,YACnBpL,QAAOxD,GAAKA,EAAEvD,KAAKoE,WAAW,WAC9BsD,KAAInE,GAAK,GAAGA,EAAEvD,SAASuD,EAAEN,WACzB4G,KAAK,IACP,CAEDzK,eAAegC,GACd,OAAOyF,MAAMC,KAAK1F,GAAI+Q,YAAc,IAAIzK,KAAIU,GAAK,GAAGA,EAAEpI,SAASoI,EAAEnF,WAAU4G,KAAK,IAChF,QAGAjE,OAAOC,KAAK8L,QACZnM,WAAWmM,OAASA,MACpB,EC9Ha,IAAAS,EAAA,MAAMC,SAEjBjT,WAAiBoG,WAAWzF,UAAUuS,MAAMC,iBAE5C7K,GAEAsB,YAAYwJ,GACG3R,MACR6G,EAAO2K,UAASI,EAAQD,EAC9B,CAEDjM,IAAIvG,GACA,MAAMY,EAAKC,KACX,GAAKD,GAAG8G,EACR,OAAO2K,UAASK,EAAU9R,GAAG8G,EAAKnB,IAAIvG,GAAQY,GAAG8G,EAAKmF,EAAO8F,eAAe3S,GAC/E,CAEDyJ,OAAOzJ,GACH,OAAQa,KAAK0F,IAAIvG,IAAS,KAAKoN,UAClC,CAED2E,OAAO/R,GACH,MAAMkK,EAAMrJ,KAAK0F,IAAIvG,GACrB,OAAO6M,EAAOkF,OAAOM,UAASK,EAAUxI,GAAKjH,MAAQiH,EACxD,CAED8H,MAAMhS,GACF,IAAIkK,EAAMrJ,KAAK0F,IAAIvG,GAInB,OAHIqS,UAASK,GAAW3B,WAAWC,WAAW9G,GAAK0I,KAC9B,WAAb1I,EAAI2I,OAAmB3I,EAAMA,EAAI0I,GAAG,OAErC/F,EAAOmF,MAAMK,UAASK,EAAUxI,GAAKjH,MAAQiH,EAAItG,MAAM,gBAAgBmD,QAAOxD,GAAIsJ,EAAOS,SAAS/J,KAAIuP,QAChH,CAEDC,QAAQ/S,EAAMiD,GACV,OAAOpC,KAAK4I,OAAOzJ,IAASiD,CAC/B,CAOD7D,SAAegC,GACX,OAAIiR,UAASK,EAAgBtR,EAAGmR,mBAC5B/M,WAAW+F,QAAQyH,iBAAyBxN,WAAW+F,OAAOyH,iBAAiB5R,GAC5E,IACV,CAODhC,kBAAkBgC,EAAIpB,GAClB,OAAOqS,SAASY,qBAAqB7R,GAAImF,IAAIvG,EAChD,CAODZ,4BAA4BoT,GACxB,OAAO,IAAIH,SAASG,EACvB,CAEDpT,SAAkBmO,GACd,OAAKA,GACLA,EAAMjF,OAAOiF,GAAKzK,QAAQ,iBAAkB,SACjCA,QAAQ,SAAU,KAAK6E,OAFhB,EAGrB,CAEJvI,SAAcmO,EAAK2F,GACZ,OAAO3F,EAAI9F,MAAMyL,GAAIxL,KAAI8F,GAAKA,EAAE7F,SAAQZ,QAAOyG,GAAKA,GACvD,CAEDpO,SAAoB+T,EAASC,GACzB,QAAOD,GAAUC,EAAIC,MAAK7F,GAAK2F,EAAQpO,QAAQyI,IAAM,GACxD,CAOJpO,gBAAgBkU,GACf,MAAM1S,EAAMyR,SACAkB,EAAa3S,GAAG6G,EAAO7G,GAAGiR,EAAWyB,GAAW,KAItD,OAHezM,MAAMC,KAAKtB,WAAWzF,SAAS+J,aACpBpC,KAAI8F,GAAK3G,MAAMC,KAAK0G,EAAE/G,UAAY,MAChC+M,QAAO,CAACC,EAAKjG,IAAMiG,EAAI/I,OAAO8C,IAAI,IAC9CzG,QAAQyG,GAAM5M,GAAG8S,EAAa9S,GAAGiR,EAAWrE,EAAExG,cAAeuM,IAChF,QAGG3N,OAAOC,KAAKwM,UACZ7M,WAAW6M,SAAWA,QACzB,GCjGUsB,EAAA,MAAMC,MAEpBxU,uBAAyB,0WACzBA,mBAAqB,iLAGrBA,aAAe,IAMJyU,2BACV,OAAOD,MAAME,OAAO/T,SAAS8T,cAC7B,CAODzU,cAAcgC,GACb,OAAOA,EAAG2S,YAAYF,cAAgBD,MAAME,OAAO1S,EAAG2S,YAAYF,eAAiBzS,CACnF,CAODhC,iBAAiBgC,GAChB,IAAKwS,MAAMhC,cAAcxQ,GAAK,OAAO,EACrC,MAAMqH,EAAM4J,EAASY,qBAAqB7R,GACpC4S,GAAcvL,EAAIsK,QAAQ,aAAc,UACxCkB,GAAWxL,EAAIsK,QAAQ,UAAW,QAClCmB,EAAUzL,EAAIuJ,MAAM,WAAa,EACjCmC,EAAO/S,EAAGgT,wBAEhB,OADcD,EAAKE,MAAQ,GAAKF,EAAKG,OAAS,GAC/BJ,GAAWF,GAAcC,CACxC,CAUD7U,aAAamV,EAAO,GAAIC,GAAS,EAAOC,EAAO,aAC9C,IACC,MACMC,GADS,IAAIC,WACAC,gBAAgBL,EAAME,GACzC,OAAOD,EAAUE,GAAKjT,MAAMoT,mBAAqBH,GAAKpC,MAAMuC,kBAAqBH,CAIjF,CAHC,MAAO7P,GAER,MADAmH,MAAM8I,MAAM,KAAMjQ,GACZA,CACN,CACD,CAQDzF,oBAAoB2V,EAAKnJ,EAAM,GAAIoJ,GAAY,GAE9C,MAAMN,EAAMd,MAAMlF,MAAM9C,GAClBqJ,EAAQrB,OAAMsB,EAAUR,EAAIjT,KAAK0T,UAAUzK,OAAOkJ,OAAMsB,EAAUR,EAAIpC,KAAK6C,WAC3EC,EAAOJ,GAA8B,IAAjBC,EAAMtV,OAE1BoP,EAAM6E,MAAMwB,KAAKL,EAAKK,EAAO,KAAOH,EAAMnC,SAEhD,KAAOmC,EAAMtV,OAAS,GAAGoP,EAAIrN,YAAYuT,EAAMnC,SAE/C,OAAO/D,CACP,CASD3P,YAAY2V,EAAKlR,GAChB,OAAO+P,MAAMyB,KAAKN,EAAKlR,GAAU9D,SAAS4L,cAAc,YACxD,CASDvM,YAAY2V,EAAKlR,GAGhB,OAFAA,EAAOsG,aAAa,QAAS,IAAI4K,EAAIxV,MACjCwV,EAAIO,MAAMzR,EAAOsG,aAAa,OAAQ4K,EAAIO,MACvCzR,CACP,CAEDzE,SAAiB6V,GAChB,OAAOpO,MAAMC,KAAKmO,GAAS,IAAIlO,QAAO3F,IAAOwS,MAAM2B,OAAOnU,IAC1D,CAODhC,qBAAqBgC,GACpB,MAAMpB,EAAO6M,EAAOwC,SAASjO,GAAMA,EAAKA,GAAIoU,QAC5C,MAAO,CAAC,QAAS,SAAU,WAAY,UAAUzQ,QAAQ/E,IAAS,CAClE,CASDZ,iBAAiBgC,EAAI0D,GAGpB,KADeA,GAAQ1D,GACV,OAAO,EAIpB,IAFcyL,EAAOwC,SAASvK,GAElB,OAAO1D,aAAc0D,EAEjC,MAAM2Q,EAAWrL,eAAe7D,IAAIzB,EAAK3B,eACzC,GAAIsS,GAAYrU,aAAcqU,EAAU,OAAOrU,EAE/C,MAAMsU,EAAK9B,MAAM+B,YAAYvU,GAC7B,IAAK,IAAIwU,KAAOF,EACf,GAAIE,GAAK5M,aAAahJ,OAAS8E,EAAM,OAAO1D,EAG7C,OAAI0D,EAAK6I,gBAAkBvM,EAAGoU,SAAgBpU,CAG9C,CAMDhC,yBAAyBgC,GACxB,OAAOA,aAAcyU,mBACrB,CAMDzW,qBAAqBgC,GACpB,OAAOA,aAAcjC,WACrB,CAMDC,oBAAoBgC,GACnB,OAAOA,aAAc0U,UACrB,CAMD1W,cAAcgC,GACb,OAAOA,aAAc2U,IACrB,CAMD3W,iBAAiBgC,GAChB,OAAOA,aAAc4U,OACrB,CAKD5W,mBAAmBgC,GAClB,IAAKA,GAAI6U,UAAW,OAAO,EAE3B,MAAMP,EAAK9B,MAAM+B,YAAYvU,GAC7B,IAAK,IAAImC,KAAKmS,EAAI,CACjB,IAAKnS,EAAG,MACR,GAAqB,cAAjBA,GAAG0S,UAA2B,OAAO,CACzC,CACD,OAAO,CACP,CAOD7W,iBAAiBgC,GAChB,OAAkD,IAA3CA,GAAI2C,aAAa,OAAOgB,QAAQ,MACvC,CAOD3F,iBAAiBgC,GAChB,OAAOyF,MAAMC,KAAK1F,GAAI8U,YAAc,IAAInP,QAAOlC,GAAK+O,MAAMuC,YAAYtR,IACtE,CAQDzF,YAAYgC,EAAIgV,GAAc,GAC7B,OAAOhV,GAAIiV,WAAWC,IAAIF,EAAc,sBAAwB,UAChE,CAQDhX,YAAYgC,EAAIgV,GAAc,GAC7B,OAAOhV,GAAIiV,WAAWlV,OAAOiV,EAAc,sBAAwB,UACnE,CAQDhX,kBAAkByE,EAAQ0S,GACzB,MAAMC,EAAa5C,MAAMhC,cAAc2E,IAAU3C,MAAM6C,aAAaF,GAC9DG,EAAO9C,MAAMhC,cAAc/N,IAAW2S,EACtCG,EAAU9S,IAAW0S,GAAS1S,EAAO+S,aAAeL,GAAS1S,EAAOgT,qBAAuBN,EACjG,SAAOG,GAASC,IAAU9S,EAAO+S,WAAWE,aAAaP,EAAO1S,EAAOgT,mBACvE,CAQDzX,mBAAmByE,EAAQ0S,GAE1B,UADa3C,MAAMhC,cAAc/N,IAAW+P,MAAMhC,cAAc2E,KACjD1S,IAAW0S,IAAQ1S,EAAOnC,YAAY6U,EACrD,CASDnX,sBAAsByE,EAAQ0S,EAAOQ,GACpC,MAAMC,EAAOpD,MAAMhC,cAAc/N,IAAW+P,MAAMhC,cAAc2E,GAC1DI,EAAU9S,IAAW0S,GAAS1S,EAAO+S,aAAeL,EAC1D,SAAOS,GAASL,IAAU9S,EAAOlC,sBAAsBoV,EAAWR,EAClE,CAODnX,qBAAqBgC,GACpB,OAAOwS,MAAMqD,OAAO7V,IAAK8V,YAAY9V,EACrC,CAWDhC,YAAY+X,EAAMC,GAAU,EAAO3D,GAAM,EAAO1H,GAAS,GACxD,OAAOqL,EAAUxD,MAAMyD,UAAUF,GAAQvD,MAAM0D,SAASH,EAAM1D,EAAK1H,EACnE,CAWD3M,gBAAiB+X,EAAM1D,GAAM,EAAO1H,GAAS,EAAMwL,GAAQ,GAC1D,IAAKJ,EAAM,OACPI,UAAaJ,GACbpL,UAAe6H,MAAM0D,SAASH,EAAKpD,WAAYN,EAAK1H,GAAQ,IAChE,MAAMyL,EAAO/D,EAAM0D,EAAKjB,WAAaiB,EAAKhC,SAC1C,GAAKqC,EACL,IAAK,IAAID,KAASC,QACV5D,MAAM0D,SAASC,EAAO9D,EAAK1H,GAAQ,EAE3C,CAQD3M,cAAcgC,GACb,OAAOA,EAAMA,EAAGqW,eAAiBrW,EAAGwV,YAAcxV,EAAGsW,KAAQ,IAC7D,CAQDtY,iBAAkBgC,GACjB,IAAIyD,EAAI+O,MAAMqD,OAAO7V,GACrB,KAAOyD,SACAA,EACNA,EAAI+O,MAAMqD,OAAOpS,GAElB,GAAIA,EAAG,aAAaA,CACpB,CAQDzF,mBAAoBgC,GACnB,IAAIyD,EAAIzD,EAAGuW,UACX,KAAO9S,SACAA,EACNA,EAAIA,EAAE8S,UAEP,GAAI9S,EAAG,aAAaA,CACpB,CAODzF,eAAegC,GACd,IAAKA,EAAI,OAAO,KAEhB,MAAMsU,EAAK9B,MAAMyD,UAAUjW,GAC3B,IAAK,IAAImC,KAAKmS,EAAI,CACjB,GAAInS,aAAaqU,WAAY,OAAOrU,EACpC,GAAIA,aAAasU,gBAAiB,OAAOtU,CACzC,CAED,OAAO,IACP,CAQDnE,eAAegC,EAAI7B,GAClB,GAAkB,iBAAP6B,EAAiB,OAAOwS,MAAMkE,QAAQ/X,SAASuS,KAAM/S,GAChE,IAAM6B,IAAM7B,EAAK,OAAO,KACxB,MAAMmW,EAAK9B,MAAMmE,KAAK3W,GAAI,GAC1B,IAAK,IAAIuI,KAAK+L,EACb,GAAI/L,EAAEpK,KAAOA,EAAI,OAAOoK,EAEzB,OAAO,IACP,CAQDvK,eAAegC,EAAI4W,GAClB,GAAkB,iBAAP5W,EAAiB,OAAOwS,MAAMwD,QAAQrX,SAASuS,KAAM0F,GAChE,IAAM5W,IAAM4W,EAAM,OAAO,KACzB,MAAMtC,EAAK9B,MAAMmE,KAAK3W,GAAI,GAC1B,IAAK,IAAIuI,KAAK+L,EACb,GAAI9B,MAAMb,QAAQpJ,EAAGqO,GAAM,OAAOrO,EAEnC,OAAO,IACP,CASDvK,aAAagC,EAAI4W,EAAKvE,GAAM,EAAO1H,GAAS,GAC3C,GAAkB,iBAAP3K,EAAiB,OAAOwS,MAAMqE,MAAMlY,SAASuS,KAAMlR,EAAIqS,EAAK1H,GACvE,IAAM3K,IAAM4W,EAAM,OAAO,KACzB,GAAIpE,MAAMb,QAAQ3R,EAAI4W,GAAM,OAAO5W,EACnC,MAAMsU,EAAK9B,MAAMmE,KAAK3W,GAAI,EAAOqS,EAAK1H,GACtC,IAAK,IAAIpC,KAAK+L,EACb,GAAI9B,MAAMb,QAAQpJ,EAAGqO,GAAM,OAAOrO,EAEnC,OAAO,IACP,CAQDvK,eAAegC,EAAI4W,GAElB,OAAO5W,GAA4B,mBAAfA,EAAG2R,SAA0B3R,EAAG2R,QAAQiF,EAC5D,CASD5Y,gBAAgBgC,EAAI4W,EAAKvE,GAAM,EAAO1H,GAAS,GAC9C,GAAkB,iBAAP3K,EAAiB,OAAOwS,MAAMsE,SAASnY,SAASuS,KAAMlR,EAAIqS,EAAK1H,GAC1E,MAAMhB,EAAM,GACZ,IAAM3J,IAAM4W,EAAM,OAAOjN,EACzB,MAAM2K,EAAK9B,MAAMmE,KAAK3W,GAAI,EAAOqS,EAAK1H,GACtC,IAAK,IAAIpC,KAAK+L,EACT9B,MAAMb,QAAQpJ,EAAGqO,IAAMjN,EAAIoN,KAAKxO,GAErC,OAAOoB,CACP,CASD3L,eAAegC,EAAI8I,EAAM,KAGR9I,aAAcwW,YAAcxW,aAAcjC,aAAeiC,aAAcyU,uBAC1EzU,EAAGgX,UAAYlO,EAC5B,CAQD9K,eAAegC,EAAI8I,EAAM,IACpB9I,IAAIA,EAAGiX,YAAcnO,EACzB,CAOD9K,WAAWgC,EAAInB,GAGd,GAFI4M,EAAOwC,SAASjO,KAAKA,EAAKwS,MAAMsE,SAAS9W,IACzCwS,MAAMhC,cAAcxQ,KAAKA,EAAK,GAAGsJ,OAAOtJ,MACtCyF,MAAMyH,QAAQlN,IAAOA,EAAGzB,OAAS,GAAI,OAAO,EAClDc,uBAAsB,KACrBW,EAAGkC,SAAQoS,IACV9P,OAAOgC,QAAQ3H,GAAKqD,SAAQuE,IAC3B6N,EAAGzP,MAAM4B,EAAG,IAAMA,EAAG,EAAE,GACtB,GACD,GAEH,CASDzI,mBAAmBgC,EAAI8I,EAAK9G,GAG3B,OAFIyJ,EAAOwC,SAASjO,KAAKA,EAAKwS,MAAMsE,SAAS9W,IACzCwS,MAAMhC,cAAcxQ,KAAKA,EAAK,GAAGsJ,OAAOtJ,OACtCyF,MAAMyH,QAAQlN,IAAOA,EAAGzB,OAAS,QAClCuK,GAA4B,GAArBA,EAAIvC,OAAOhI,UACvBuK,EAAMA,EAAIzC,MAAM,KAAKV,QAAOxD,GAAKA,GAAKA,EAAEoE,OAAOhI,OAAS,IACpDkN,EAAOyL,OAAOlV,GAAa8G,EAAI5G,SAAQC,IAC1CnC,EAAGkC,SAAQoS,GAAMA,EAAGW,UAAUkC,OAAOhV,IAAG,KAEzCnC,EAAGkC,SAAQoS,IACVtS,EAAMsS,EAAGW,UAAUC,IAAIkC,MAAM9C,EAAGW,UAAWnM,GAAOwL,EAAGW,UAAUlV,OAAOqX,MAAM9C,EAAGW,UAAWnM,EAAI,KAExF,IACP,CAOD9K,cAAcgC,EAAIgC,GACjB,OAAOwQ,MAAM6E,YAAYrX,EAAI,SAAUyL,EAAOyL,OAAOlV,GAAOA,GAAOA,EACnE,CAQDhE,gBAAgBgC,EAAI8I,EAAM,IACzB,OAAO9I,GAAIiV,WAAWqC,SAASxO,EAC/B,CAOD9K,mBAAmBiS,EAAO2G,EAAM,mBAC/B,MAAMW,EAAO/E,MAAMgF,OAAOvH,GAC1B5Q,uBAAsB,KACrBkY,EAAKrN,iBAAiB0M,GAAK1U,SAASlC,GAAOA,EAAG6B,MAAQ,IAAG,GAE1D,CAOD7D,eAAegC,GACd,IAAKwS,MAAMhC,cAAcxQ,GAAK,OAC9B,GAAI,aAAeA,EAAG0D,KAAM,OAAO1D,EAAGyX,QACtC,IAAI5V,EAAQ7B,EAAG6B,MACf,GAAI,SAAW7B,EAAG0D,KAAM,CACvB,MAAM4C,EAAM2K,EAASyG,WAAW1X,EAAI,kBAChCsG,IAAKzE,EAAQ4J,EAAOkM,cAAcrR,EAAIzE,MAAOA,GACjD,CACD,OAAOA,CACP,CAQD7D,iBAAiBgC,EAAI8I,GACf0J,MAAMhC,cAAcxQ,KACT,aAAZA,EAAG0D,KACN1D,EAAGyX,QAAiB,GAAP3O,EAEb9I,EAAG6B,MAAQiH,EAEZ,CASD9K,gBAAgBiS,EAAO2G,EAAM,0BAA2BrB,GAAU,GACjE,MAAMgC,EAAO/E,MAAMgF,OAAOvH,GACpBrC,EAAS,CAAA,EACTwI,EAAO5D,MAAMsE,SAASS,EAAMX,GAQlC,OAPAnR,MAAMC,KAAK0Q,GACTzQ,QAAO3F,GAAMA,EAAGpB,OAChB+G,QAAO3F,GAA4B,SAAtBA,EAAGG,QAAQyX,SACxBjS,QAAO3F,KAAMuV,GAAiBvV,EAAG6X,kBACjC3V,SAAQlC,IACR4N,EAAO5N,EAAGpB,MAAQ4T,MAAMsF,QAAQ9X,EAAG,IAE9B4N,CACP,CASD5P,kBAAkBiS,EAAOpR,EAAK+X,EAAM,2BACnC,IAAK/X,EAAK,OACV,MAAM0Y,EAAO/E,MAAMgF,OAAOvH,GACpBmG,EAAO5D,MAAMsE,SAASS,EAAMX,GAClCnR,MAAMC,KAAK0Q,GAETzQ,QAAO3F,GAAMA,EAAGpB,MAAQoB,EAAGpB,QAAQC,IACnCqD,SAAQlC,GAAMwS,MAAMuF,UAAU/X,EAAInB,EAAImB,EAAGpB,QAC3C,CAQDZ,cAAc2V,EAAKqE,GAAY,GAC9B,MAAMnZ,EAAM,CAAA,EACZ,IAAK2T,MAAMhC,cAAcmD,GAAM,OAAO9U,EAMtC,GAJAA,EAAI,YAAc8U,EAAIS,QAAQrS,cAE9B0D,MAAMC,KAAKiO,EAAI5C,YAAY7O,SAAQC,GAAKtD,EAAIsD,EAAEvD,MAAQuD,EAAEN,QAEpDmW,EAAW,CACd,MAAMjE,EAAWtO,MAAMC,KAAKiO,EAAII,UAC5BA,EAASxV,OAAS,IACrBM,EAAIoZ,MAAQ,GACZlE,EAAS7R,SAAQlC,GAAMnB,EAAIoZ,MAAMlB,KAAKvE,MAAM0F,OAAOlY,MAEpD,CAED,OAAOnB,CACP,CAQDb,gBAAgBa,EAAKsZ,EAAM,UAAWC,GAAW,GAChD,OAAOA,EAAW5F,MAAM6F,iBAAiBxZ,EAAKsZ,GAAO3F,MAAM8F,cAAczZ,EAAKsZ,EAC9E,CAODna,qBAAqBa,EAAKsZ,EAAM,WAC/B,IAAKtZ,EAAK,OAAO,KAEjB,GAAI4G,MAAMyH,QAAQrO,GAAM,OAAOA,EAAIyH,KAAIiC,GAAKiK,MAAM8F,cAAc/P,KAEhE,MAAM3J,EAAOC,EAAI,aAAesZ,EAC1BnY,EAAKrB,SAAS4L,cAAc3L,GAYlC,OAVA4F,OAAOsJ,KAAKjP,GAAK8G,QAAOxD,GAAU,SAALA,GAAwB,KAARA,EAAE,KAC7CD,SAAQC,GAAKnC,EAAG+I,aAAa5G,EAAGtD,EAAIsD,MAElCsD,MAAMyH,QAAQrO,EAAIoZ,QACrBpZ,EAAIoZ,MAAM/V,SAAQqG,IACjB,MAAMgQ,EAAM/F,MAAM8F,cAAc/P,EAAG4P,GACnCnY,EAAGM,YAAYiY,EAAI,IAIdvY,CACP,CAODhC,wBAAwBa,EAAKsZ,EAAM,WAClC,IAAKtZ,EAAK,OAAO,KAEjB,GAAI4G,MAAMyH,QAAQrO,GAAM,OAAOA,EAAIyH,KAAIiC,GAAKiK,MAAM6F,iBAAiB9P,KAAIE,KAAK,IAE5E,MAAM7J,EAAOC,EAAI,aAAesZ,EAC1B3N,EAAM,GAiBZ,OAhBAA,EAAIuM,KAAK,IAAInY,MAEb4F,OAAOsJ,KAAKjP,GAAK8G,QAAOxD,GAAU,SAALA,GAAwB,KAARA,EAAE,KAC7CD,SAAQC,GAAKqI,EAAIuM,KAAK,IAAI5U,MAAMtD,EAAIsD,UAEtCqI,EAAIuM,KAAK,KAELtR,MAAMyH,QAAQrO,EAAIoZ,QACrBpZ,EAAIoZ,MAAM/V,SAAQqG,IACjB,MAAMgQ,EAAM/F,MAAM6F,iBAAiB9P,EAAG4P,GACtC3N,EAAIuM,KAAKwB,EAAI,IAIf/N,EAAIuM,KAAK,KAAKnY,MAEP4L,EAAI/B,KAAK,GAChB,CAMDzK,yBAAyBiS,GACxBxO,SAAS7B,KAAKqK,MAAM,GAAG5D,MAAM,KAC5BV,QAAOxD,GAAKA,EAAE5D,OAAS,IACvB2D,SAAQC,IACR,MAAMqW,EAAIrW,EAAEkE,MAAM,KAClBmM,MAAMiG,SAAS,cAAcD,EAAE,MAAOA,EAAE,GAAIvI,EAAM,GAEnD,CAODjS,cAAciS,GACb,OAAOA,EAAQA,EAAMR,MAAQQ,EAAQtR,QACrC,CAODX,mBAAmB2V,EAAKiD,EAAM,uBAC7BpE,MAAMsE,SAASnD,EAAKiD,GAAK1U,SAAQlC,GAAMA,EAAG+J,gBAAgB,aAC1D,CAOD/L,oBAAoB2V,EAAKiD,EAAM,uBAC9BpE,MAAMsE,SAAS9W,GAAI4W,GAAK1U,SAAQlC,GAAMA,EAAG+I,aAAa,YAAY,IAClE,CAQD/K,gBAAgB4Y,EAAK9N,EAAK6K,GACdnB,MAAMsE,SAASnD,EAAKiD,GAC5B1U,SAAQoS,GAAM9B,MAAMuF,UAAUzD,EAAIxL,IACrC,CAOD9K,sBAAsBgC,GACrB,MAAM2W,EAAOhY,SAAS+Z,iBAAiB1Y,GAAMrB,SAAUga,WAAWC,UAAW,MAAM,GAC7E5R,EAAI,GACV,IAAI2E,EACJ,KAAOA,EAAIgL,EAAKkC,YAAY7R,EAAE+P,KAAKpL,GACnC,OAAO3E,CACP,CAMDhJ,iBAAiBuZ,GAChB,MAAMuB,EAAKtG,MAAMuG,eAAexB,GAAQ5Y,UAAUgH,QAAOqT,GAAmC,IAA9BA,EAAEC,UAAU1S,OAAOhI,SACjFua,EAAGnT,QAAO3F,GAAMA,EAAGkZ,uBAAuBvE,OAAMzS,SAAQlC,GAAMA,EAAGD,WACjE+Y,EAAG5W,SAAQ8W,GAAKA,EAAEG,UAAYH,EAAEC,UAAU7S,WAAW,aAAc,MAAMA,WAAW,sBAAuB,KAC3G,CAWDpI,gBAAgB2V,EAAKS,EAASgF,EAAWC,GAAU,GAClD,GAAI1F,EAAIS,UAAYA,EAAS,CAC5B,GAAIiF,EAAS,OAAO,EACpB,MAAM,IAAI5M,MAAM,mBAAmBkH,EAAIS,eAAeT,EAAIxV,gCAAgCiW,IAC1F,CAGD,GADW5B,MAAM8G,UAAU7T,MAAMC,KAAKiO,EAAImB,YAAasE,GAC/C,OAAO,EACf,GAAIC,EAAS,OAAO,EACpB,MAAMxO,EAAM2H,MAAM+G,kBAAkB5F,EAAKyF,GACzC,MAAM,IAAI3M,MAAM5B,EAChB,CAQD7M,iBAAiBgC,EAAIoZ,GACpB,OAAI3T,MAAMyH,QAAQlN,GAAuE,IAA3DA,EAAG2F,QAAO3F,GAAMwS,MAAM8G,UAAUtZ,EAAIoZ,KAAY7a,SACrEyB,aAAc2U,MAAQ3U,aAAc4U,SAAcwE,EAAU/W,SAASrC,EAAGoU,SACjF,CAEDpW,yBAAyB2V,EAAKyF,GAC7B,MAAMhD,EAAO,IAAIgD,EAAU3Q,KAAK,WAChC,MAAO,GAAGkL,EAAIS,eAAeT,EAAIxV,qCAAqCiY,IACtE,CAUDpY,uBAAuB2V,EAAKjU,GAC3B,IAAKiU,GAAKhB,sBAAsB6D,WAAY,OAAO,EACnD,IAAIxU,GAAM,EACV,IACC,MAAM2H,QAAYC,MAAMlK,GACxB,IAAKiK,EAAIE,GAAI,OACb,MAAMxC,QAAYsC,EAAIG,OAChB7E,EAAQ,IAAIH,cAClBG,EAAMC,YAAYmC,GAClBsM,EAAIhB,WAAWpN,mBAAqB,CAACN,EAIrC,CAHC,MAAOxB,GAERzB,GAAM,CACN,CACD,OAAOA,CACP,QAGAwC,OAAOC,KAAK+N,OACZpO,WAAWoO,MAAQA,KACnB,GC90Ba,MAAMgH,SAEpBxb,SAAgB,IAAI4G,IAEpB5G,UAAiB,EAKjBA,iBACCwb,SAASC,OAAOrV,WAAY,KAAM,eAAeX,GAAM+V,SAASE,QAAQjW,KACxE+V,SAASC,OAAOrV,WAAWzF,SAAU,KAAM,UAAW6a,UAASG,EAC/D,CAED3b,SAAkBiB,GACjB,MAAM2a,EAAO3a,EAAM2a,KACnB,MAAY,OAARA,MAEO3a,EAAM4a,UAAW5a,EAAM6a,UAAoB,QAARF,SAAvC,EAGP,CAWD5b,0BAA0ByE,EAAQ7D,EAAO,SAAU+I,EAAUsH,EAAU,KACjEuK,UAASO,SAAeP,SAASQ,KAAK5V,WAAW+F,OAAQ,QAC9DqP,UAASO,GAAU,QACbtO,EAAOwD,QAAQA,GACrBU,WAAWsK,aAAatS,GACxB6R,SAASU,cAAczX,EAAQ7D,EAC/B,CASDZ,gCAAgC2J,GAC/B,OAAO,IAAIzH,SAAQ,CAACuO,EAAGhL,KACtBpE,uBAAsB,KACrB,IACCoP,IACwB,mBAAb9G,GAAyBA,GAIpC,CAHC,MAAOwS,GAER1W,EAAE0W,EACF,IACA,GAEH,CAWDnc,cAAc2V,EAAKiD,EAAK3X,EAAO0I,EAAUyS,GAAM,GAC9C,OAAKxD,GAAOjD,EAAYA,EAAIvJ,iBAAiBnL,EAAO0I,EAAUyS,GACvD5H,EAAMsE,SAASnD,EAAKiD,GAAKtQ,KAAItG,GAAMA,EAAGoK,iBAAiBnL,EAAO0I,EAAUyS,IAC/E,CAUDpc,gBAAgB2V,EAAKiD,EAAK3X,EAAO0I,GAChC,OAAKiP,GAAOjD,EAAYA,EAAI0G,oBAAoBpb,EAAO0I,GAChD6K,EAAMsE,SAASnD,EAAKiD,GAAKtQ,KAAItG,GAAMA,EAAGqa,oBAAoBpb,EAAO0I,IACxE,CAED3J,UAAYwb,SAASC,OACrBzb,WAAawb,SAASc,SAUtBtc,YAAY2V,EAAKiD,EAAK3X,EAAO0I,GAC5B,OAAO6R,SAASC,OAAO9F,EAAKiD,EAAK3X,EAAO0I,EAAU,CAAE4S,MAAM,GAC1D,CAUDvc,YAAY2V,EAAK/U,EAAO,IAEvB,OAAO,IAAIsB,SAAQ,CAACuO,EAAGhL,KACtB,IAAK7E,EAAM,OAAO6E,EAAE,oBACpB+V,SAASe,KAAK5G,EAAK,KAAM/U,GAAO6E,GAAMgL,EAAEhL,EAAEtE,SAAQ,GAEnD,CAODnB,eAAeyF,GACVkM,WAAW6K,YAAY/W,EAAG,mBAAmBA,EAAEgX,iBAC/C9K,WAAW6K,YAAY/W,EAAG,oBAAoBA,EAAEiX,iBACpD,CAaD1c,YAAYU,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GAC9F,MACMC,EAAQ,IAAIC,YAAYN,EADlB,CAAEO,OAAQN,EAAKC,QAASA,EAASC,SAAUA,EAAUC,WAAYA,IAE7E,OAAON,GAAQU,cAAcH,EAC7B,CAQDjB,eAAe0F,EAAM0W,GACpB,IAAIO,EAAO,KACX,OAAOjX,GACN,IAAK,OACL,IAAK,MACL,IAAK,QACJiX,EAAM,IAAIC,eAAelX,EAAM0W,GAC/B,MACD,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACJO,EAAM,IAAIE,WAAWnX,EAAM0W,GAC3B,MACD,IAAK,QACL,IAAK,cACJO,EAAM,IAAIG,WAAWpX,EAAM0W,GAC3B,MACD,IAAK,UACL,IAAK,QACL,IAAK,WACJO,EAAM,IAAII,cAAcrX,EAAM0W,GAC9B,MACD,IAAK,WACL,IAAK,YACL,IAAK,aACL,IAAK,aACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,UACJO,EAAM,IAAIK,WAAWtX,EAAM0W,GAC3B,MACD,IAAK,SACJO,EAAM,IAAIM,YAAYvX,EAAM0W,GAC5B,MACD,IAAK,aACL,IAAK,WACL,IAAK,YACL,IAAK,cACJO,EAAM,IAAIO,WAAWxX,EAAM0W,GAC3B,MACD,IAAK,QACJO,EAAM,IAAIQ,WAAWzX,EAAM0W,GAC3B,MACD,IAAK,cACL,IAAK,eACL,IAAK,cACL,IAAK,cACL,IAAK,YACL,IAAK,gBACL,IAAK,aACL,IAAK,eACL,IAAK,mBACL,IAAK,oBACL,IAAK,qBACJO,EAAM,IAAIS,aAAa1X,EAAM0W,GAC7B,MACD,QACCO,EAAM,IAAIzb,YAAYwE,EAAM0W,GAE9B,OAAOO,CACP,CAaD3c,qBAAqBU,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GACvGK,uBAAsB,KACrBma,SAAS6B,KAAK3c,EAAQE,EAAMC,EAAKC,EAASC,EAAUC,EAAW,GAEhE,CAcDhB,mBAAmBiR,EAAU,EAAGvQ,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GAClH0P,YAAW,IAAM8K,SAAS6B,KAAK3c,EAAQE,EAAMC,EAAKC,EAASC,EAAUC,IAAaiQ,EAClF,CAYDjR,cAAc2V,EAAK3T,EAAIpB,EAAO,GAAIqM,EAAIsP,GAAO,EAAOe,GAAU,GAC7D,IAAKtb,EAAI,OAAO,EAChB,GAAIA,EAAGub,QAAS,OAAO,EACvB,IAAK5L,WAAWC,WAAW3E,GAAK,OAAO,EACvC,IAAK0E,WAAW6K,YAAYxa,EAAI,oBAAqB,OAAO,EAC5D,MAAMR,EAAKC,KACLZ,EAAMW,GAAGgc,EAAU7H,EAAK3T,EAAIpB,EAAMqM,GAClCwQ,EAAQjc,GAAGkc,EAAe/H,GAehC,OAdYnU,GAAGmc,EAAUF,EAAO5c,EAAI+c,KAChC5W,IAAInG,EAAIgd,MAAOhd,GACnBA,EAAIyc,QAAUA,EACVf,IACH1b,EAAI0b,KAAQ9W,IACX,IACC5E,EAAIoM,GAAGxH,EAGP,CAFS,QACTjE,EAAGO,OAAOlB,EAAI8U,IAAK9U,EAAImB,GAAInB,EAAID,KAAMC,EAAI0b,KACzC,GAEF/V,OAAOsX,eAAejd,EAAI0b,KAAM,OAAQ,CAAE1Y,MAAOoJ,EAAG8Q,KAAMC,UAAU,KAErEhc,EAAGoK,iBAAiBxL,EAAM2b,EAAO1b,EAAI0b,KAAO1b,EAAIoM,GAAI,CAAEsP,KAAMA,EAAMe,QAASA,KACpE,CACP,CASDtd,cAAc2V,EAAK3T,EAAIpB,EAAO,GAAIqM,GACjC,MAAMzL,EAAKC,KACLZ,EAAMW,GAAGgc,EAAU7H,EAAK3T,EAAIpB,EAAMqM,GAClCwQ,EAAQjc,GAAGkc,EAAe/H,GAC1BrN,EAAM9G,GAAGmc,EAAUF,EAAO5c,EAAI+c,KAC9BK,EAAM3V,EAAInB,IAAItG,EAAIgd,OACxB,GAAII,EACH3V,EAAIlB,OAAO6W,EAAIJ,OACfrc,GAAG0c,EAAgBD,QACb,GAAIpd,EAAIgd,QAAUhd,EAAI+c,IAC5B,IAAK,IAAIO,KAAK7V,EAAIc,SACjBd,EAAIlB,OAAO+W,EAAEN,OACbrc,GAAG0c,EAAgBC,GAGJ,IAAb7V,EAAI8V,MAAYX,EAAMrW,OAAOvG,EAAI+c,KAClB,IAAfH,EAAMW,MAAY5c,GAAG6c,EAAOjX,OAAOuO,EACvC,CAMD3V,yBAAyB2V,GACxB,MAAMnU,EAAKC,KACL6G,EAAM9G,GAAG8c,EAAkB3I,GACjC,IAAKrN,EAAK,OAEV,MAAMgO,EAAKhO,EAAIc,SACf,IAAK,IAAI+U,KAAK7H,EAAI,CACjB,IAAK,IAAI/L,KAAK4T,EAAE/U,SACf5H,GAAG0c,EAAgB3T,GAEpB4T,EAAEI,OACF,CACDjW,EAAIiW,OACJ,CASDve,SAAiB2V,EAAK3T,EAAIpB,EAAO,GAAIqM,EAAK,IACzC,IAAKjL,EAAI,OAAO,EAChB,MACMwc,EADK/c,MACKgd,EAAczc,GACxB0c,EAFKjd,MAEKkd,EAAe1R,GAG/B,MAAO,CAAE0I,IAAKA,EAAK1I,GAAIA,EAAIjL,GAAIA,EAAIpB,KAAMA,EAAMgd,IAFnCvQ,KAAKxL,SAAS,GAAG2c,IAAO5d,KAEqBid,MAD3CxQ,KAAKxL,SAAS,GAAG2c,IAAO5d,IAAO8d,GAAQ,MAErD,CAQD1e,SAAiByd,EAAOG,GAEvB,IAAItV,EAAMmV,EAAMtW,IAAIyW,GAKpB,OAJKtV,IACJA,EAAM,IAAI1B,IACV6W,EAAMzW,IAAI4W,EAAKtV,IAETA,CACP,CAEDtI,SAAsBiN,GACrB,OAAK0E,WAAWC,WAAW3E,IACtBA,EAAG8Q,MAAMvX,OAAOsX,eAAe7Q,EAAI,OAAQ,CAAEpJ,MAAOwJ,KAAKE,OAAQyQ,UAAU,IACzE/Q,EAAG8Q,MAF6B,IAGvC,CAED/d,SAAqBgC,GACpB,IAAIwc,EAAOjM,OAAOpL,IAAInF,EAAI,eAK1B,OAJKwc,IACJA,EAAOnR,KAAKE,OACZgF,OAAOvL,IAAIhF,EAAI,cAAewc,IAExBA,CACP,CAODxe,SAAsB2V,GAErB,OADWlU,MACDkc,EADClc,MACY4c,EAAQ1I,EAC/B,CAED3V,SAAyB2V,GACxB,MACMrN,EADK7G,MACI4c,EAAOlX,IAAIwO,GAC1B,GAAKrN,EAEL,OAJW7G,MAGR4c,EAAOjX,OAAOuO,GACVrN,CACP,CAEDtI,SAAuBuK,GACtBA,EAAEvI,GAAGqa,oBAAoB9R,EAAE3J,KAAM2J,EAAEgS,KAAOhS,EAAEgS,KAAOhS,EAAE0C,GAAI,CAAEqQ,QAAS/S,EAAE+S,UACtE/S,EAAEvI,GAAK,KACPuI,EAAE0C,GAAK,KACP1C,EAAEgS,KAAO,IACT,QAGA/V,OAAO+C,OAAOiS,UACdpV,WAAWoV,SAAWA,QACtB,EC5Za,MAAMoD,gBAAgBC,YAEjCC,GAAa,IAAIC,IAEjB3G,GAAM1S,EAAO,GAAIsZ,GACb,MACM5G,EAAO3Q,MAAMC,KADRjG,MACgBqd,GAC3B,OAFWrd,MAEDmQ,EAAYoN,GAClB5G,EAAKzQ,QAAO4C,GAAKA,EAAE7E,OAASA,GAAQ6E,EAAEyU,WAAaA,IAEnD5G,EAAKzQ,QAAO4C,GAAKA,EAAE7E,OAASA,GACnC,CAEDkM,GAAY3E,GACR,MAAqB,mBAAPA,CACjB,CAQD6G,GAAGpO,EAAO,GAAIsZ,GACV,OAAOvd,KAAK2K,iBAAiB1G,EAAMsZ,EACtC,CAQDzC,KAAK7W,EAAMsZ,GACP,MAAMxd,EAAKC,KACLuU,KAAQvQ,IACVuZ,EAASvZ,GACTjE,GAAGsd,EAAW1X,OAAO4O,KAAK,EAI9B,OAFAA,KAAKtQ,KAAOA,EACZsQ,KAAKgJ,SAAWA,EACTxd,EAAG4K,iBAAiB1G,EAAMsQ,KAAM,CAAEuG,MAAM,GAClD,CAQD0C,IAAIvZ,EAAO,GAAIsZ,GACXvd,KAAK4a,oBAAoB3W,EAAMsZ,EAClC,CAQDE,KAAKxZ,EAAO,GAAIyC,GACZ,MAAMwU,EAAM,IAAIzb,YAAYwE,EAAM,CAAEvE,OAAQgH,IAC5C,OAAO1G,KAAKL,cAAcub,EAC7B,CAODX,KAAKtW,EAAO,IACR,IAAKA,EAAM,OAAOD,EAAE,oBACpB,MAAMjE,EAAKC,KACX,OAAO,IAAIS,SAAQ,CAACuO,EAAGhL,KACnBjE,EAAG+a,KAAK7W,GAAOD,GAAMgL,EAAEhL,IAAG,GAEjC,CAEDgW,OAAO/V,EAAMsZ,GAAYvd,KAAKqS,GAAGpO,EAAMsZ,EAAY,CACnD1C,SAAS5W,EAAMsZ,GAAYvd,KAAKwd,IAAIvZ,EAAMsZ,EAAY,CAKtDG,SAEI1X,MAAMC,KADKjG,MACGqd,GAAY5a,SAAQqG,IAC9BV,MAAMwS,oBAAoB9R,EAAE7E,KAAM6E,EAAEyU,SAAS,IAFtCvd,MAIRqd,EAAWP,OACjB,CAEDnS,iBAAiB1G,EAAMsZ,EAAU5C,GAE7B,QADW3a,MACHmQ,EAAYoN,KADTvd,MAERqd,EAAW5H,IAAI,CAAExR,KAAMA,EAAMsZ,SAAUA,IACnCnV,MAAMuC,iBAAiB1G,EAAMsZ,EAAU5C,GACjD,CAEDC,oBAAoB3W,EAAMsZ,GACtB,MAAMxd,EAAKC,KACL2W,EAAO5W,GAAG4W,EAAM1S,EAAMsZ,GAC5B5G,EAAKlU,SAAQqG,GAAKV,MAAMwS,oBAAoB9R,EAAE7E,KAAM6E,EAAEyU,YACtD5G,EAAKlU,SAAQqG,GAAK/I,GAAGsd,EAAW1X,OAAOmD,IAC1C,QAGG/D,OAAO+C,OAAOqV,SACdxY,WAAWwY,QAAUA,OACxB,ECxGU,MAAMQ,WAEjBpf,SAAmB,IAAI4G,IAWvB5G,YAAYY,EAAO,GAAI8E,EAAO,GAAIyC,GAC9B,OAAOiX,WAAWC,SAASze,GAAMse,KAAKxZ,EAAMyC,EAC/C,CAQDnI,aAAaY,EAAO,IAChB,OAAOA,GAAQwe,YAAWE,EAAUC,IAAI3e,EAC3C,CAODZ,gBAAgBY,EAAO,IAInB,OAHKwe,WAAWI,MAAM5e,IAClBwe,YAAWE,EAAUtY,IAAIpG,EAAM,IAAIge,SAEhCQ,YAAWE,EAAUnY,IAAIvG,EACnC,CAODZ,kBAAkBY,EAAO,IACrB,MAAM6e,EAAML,YAAWE,EAAUnY,IAAIvG,GAErC,OADI6e,GAAKN,QAAQM,EAAIN,SACdC,YAAWE,EAAUlY,OAAOxG,EACtC,QAGG4F,OAAO+C,OAAO6V,YACdhZ,WAAWgZ,WAAaA,UAC3B,ECzDU,MAAMM,cAMN1c,sBACP,OAAIC,UAAUC,cAAsBD,UAAUC,cAAcC,OACrD,iEAAiEC,KAAKH,UAAUI,UAC1F,CAMUsc,uBACP,OAAQD,cAAc1c,QACzB,CAEU4c,sBACP,MAAO,SAASxc,KAAKH,UAAUI,UAAUU,cAC5C,CAMD/D,uBAAuB8K,EAAM,IACzB,OAAKA,GACErH,SAASD,SAASyI,MAAM,GAAI,KAAOnB,CAChD,CAOE9K,sBAAsB8K,EAAM,IACxB,IAAKA,EAAK,OAAO,EACjB,MAAMhH,EAASgH,EAAI/G,cACnB,GAAId,UAAUC,cAAe,CACzB,IAAIc,GAAM,EAMV,OALAf,UAAUC,cAAce,OAAOC,SAASC,IAChCA,EAAEC,MAAML,cAAcM,SAASP,KAC/BE,GAAM,EACT,IAEEA,CACV,CACD,MAAM6b,EAAS5c,UAAUI,UAAUyc,qBAAuB,GACpDC,EAASF,EAAOla,QAAQ,OAAS,EACvC,SAAIoa,IAAUjc,EAAOkB,WAAW,UACxB+a,GAAUF,EAAOla,QAAQ7B,GAAU,CAC9C,CAOD9D,0BAA0B8K,EAAM,IAE5B,OAAKA,IAEO,YAARA,EACO4U,cAAcC,UAGb,WAAR7U,EACO4U,cAAc1c,SAGlB0c,cAAcM,SAASlV,GACjC,CAOD9K,gBAAgB8K,EAAM,IAClB,IAAKA,EAAK,OAAO,EACjB,MAAMhH,EAASgH,EAAI/G,cAEnB,GAAId,UAAUC,eAAiBD,UAAUC,cAAc+c,SAAU,CAE7D,OADiBhd,UAAUC,cAAc+c,SAASlc,gBAC9BD,CACvB,CAGD,OADeb,UAAUI,UAAUyc,oBACrBna,QAAQ7B,GAAU,CACnC,CAUD9D,0BAA0B8K,EAAM,IAE5B,IAAKA,EAAK,OAAO,EAEjB,IAAKoV,OAAOlJ,YAAa,OAAO,EAEhC,MAAMmJ,EAAQD,OAAOlJ,YAAYtR,KAEjC,OAAIya,EAAM9b,SAAS,YACA,aAARyG,GAA8B,aAARA,GAG7BqV,EAAM9b,SAAS,eACA,cAARyG,GAA+B,eAARA,EAIrC,QAGGtE,OAAOC,KAAKiZ,cACf,ECtHU,MAAMU,sBAAsBC,iBAEvCrgB,SAAqB,IAAI4G,IACzB5G,SAAqB,IAAI4G,IAQzB0Z,QAAQte,EAAIoa,GACR,MAAM6B,EAAM7B,GAAO,CAAEmE,WAAW,EAAMC,SAAS,GAC/C,OAAO3W,MAAMyW,QAAQte,EAAIic,EAC5B,CAODje,cAAcgC,GACV,MAAMye,EAAW,IAAIL,cAAcA,eAAcM,GAEjD,OADAD,EAASH,QAAQte,GACVye,CACV,CAODzgB,SAAkB2gB,GAAY,GAC1B,OAAOA,EAAYP,eAAcQ,EAAcR,eAAcS,CAChE,CAKUC,eACP,OAAOV,eAAcW,GAAkBX,eAAcY,CACxD,CAEUD,eACP,OAAOX,eAAcS,EAAYzC,KAAO,CAC3C,CAEU4C,eACP,OAAOZ,eAAcQ,EAAYxC,KAAO,CAC3C,CAMDpe,SAAkBihB,GACTb,eAAcU,GACnBG,EAAU/c,SAASgd,IACXd,eAAcW,GAAgBG,EAASC,WAAWjd,SAAQlC,GAAMoe,eAAczH,EAAM3W,EAAIoe,eAAcS,KACtGT,eAAcY,GAAgBE,EAASE,aAAald,SAAQlC,GAAMoe,eAAczH,EAAM3W,EAAIoe,eAAcQ,IAAa,GAEhI,CAQD5gB,SAAaqhB,EAAQC,GACjB,OAAqB,IAAjBA,EAAQlD,OACZgC,eAAc9Q,EAAO+R,EAAQC,GAC7BD,EAAOvK,WAAW5S,SAAQlC,GAAMoe,eAAczH,EAAM3W,EAAIsf,MACjD,EACV,CAQDthB,SAAcgC,EAAIsf,GACdA,EAAQpd,SAAQ,CAACC,EAAGod,KAChB,IACQA,EAAEvf,IAAKmC,EAAEnC,EAGhB,CAFC,MAAOyD,GAER,IAER,CAWDzF,SAAagC,EAAI2F,EAAQgC,GACrB,GAAI3H,aAAcjC,aAAe,EAAO,OAAO,EAC/C,MAAMyhB,EAAM,IAAI5a,IAEhB,OADA4a,EAAIxa,IAAIW,EAAQgC,GACTyW,eAAczH,EAAM3W,EAAIwf,EAClC,CAODxhB,SAAmBiN,GACf,MAAqB,mBAAPA,CACjB,CAQDjN,SAAoB2H,EAAQgC,GACxB,OAAOyW,eAAcxO,EAAYjK,IAAWyY,eAAcxO,EAAYjI,EACzE,CAWD3J,sBAAsB2H,EAAQgC,EAAUgX,GAAY,EAAOlc,GAEvD,QAAK2b,eAAcqB,EAAa9Z,EAAQgC,KAExCyW,eAAcsB,EAAWf,GAAW3Z,IAAIW,EAAQgC,GAG3CgX,GAAWP,eAAcuB,EAAMld,GAAU9D,SAASuS,KAAMvL,EAAQgC,IAE9D,EACV,CAUD3J,wBAAwBiN,EAAI0T,GAAY,GACpC,QAAOP,eAAcxO,EAAY3E,IAAMmT,eAAcsB,EAAWf,GAAWvZ,OAAO6F,EACrF,QAMGzG,OAAO+C,OAAO6W,eACdha,WAAWga,cAAgBA,cAC3B,MAAMK,EAAWL,cAAcwB,OAAOjhB,SAASkhB,iBAC/Czb,WAAWgG,iBAAiB,UAAU,KAAQqU,EAASqB,YAAY,GACtE,ECxKU,IAAAC,EAAA,MAAMC,aAKjBhiB,SAAgB,IAAI+e,IAOpB/e,aAAagC,GACTggB,cAAa3D,EAAOnH,IAAIlV,EAC3B,CAODhC,cAAcgC,GACVggB,cAAa3D,EAAOjX,OAAOpF,EAC9B,CAODhC,WAAWG,EAAK,IACZ,IAAKA,EAAI,OAAO,KAChB,MAAM8hB,EAAMxa,MAAMC,KAAKjG,MAAK4c,GAAQ1W,QAAO3F,GAAMA,EAAG7B,KAAOA,IAC3D,OAAsB,IAAf8hB,EAAI1hB,OAAe,KAAO0hB,EAAI,EACxC,CAEDjiB,SAAwBY,EAAO,GAAIqQ,EAAU,EAAGR,GAC5C,MAAMxD,GAAMxH,IACR,MAAMzD,EAAKyD,EAAEtE,OAEb,GADeP,EAAKoE,WAAW,QAAUhD,EAAGoU,UAAYxV,EAAK2N,eAC/CvM,EAAG7B,KAAOS,EAEpB,OADA4a,SAASc,SAAS3b,SAASuS,KAAM,KAAM,iBAAkBjG,IAClDwD,EAAEzO,EACZ,EAECoa,EAAM,CAAEG,MAAM,EAAOe,SAAS,GAChCrM,EAAU,IAAGmL,EAAI8F,OAASC,YAAYlR,QAAQA,IAClDuK,SAASC,OAAO9a,SAASuS,KAAM,KAAM,iBAAkBjG,GAAImP,EAC9D,CAODpc,eAAeY,EAAO,GAAIqQ,EAAU,GAChC,OAAO,IAAI/O,SAAQ,CAACuO,EAAGhL,KACnB,IAAIzD,EAAKggB,aAAaI,KAAKxhB,IAASohB,aAAa7a,IAAIvG,GACrD,OAAOoB,EAAKyO,EAAEzO,GAAMggB,cAAaK,EAAiBzhB,EAAMqQ,EAASR,EAAE,GAE1E,CAODzQ,iBAAiBY,EAAO,GAAIqM,GACxB,IAAK0E,WAAWC,WAAW3E,GAAK,OAAO,EACvC,MAAMtD,SAAYlE,IACd,MAAMzD,EAAKyD,EAAE6c,eAAe5O,QAE5B,OADW1R,EAAG7B,KAAOS,GAAQoB,EAAGoU,UAAYxV,EAChCqM,EAAGjL,EAAIyD,QAAKR,CAAS,EAE/BjD,EAAKggB,aAAaI,KAAKxhB,IAASohB,aAAa7a,IAAIvG,GACvD,OAAIoB,EAAWiL,EAAGjL,IAClBwZ,SAASC,OAAO9a,SAASuS,KAAM,KAAM,iBAAkBvJ,UAChDA,SACV,CASD3J,eAAeY,EAAO,GAAI2hB,GAAO,EAAM5V,GAAS,GAE5C,IAAI6V,EAAS/a,MAAMC,KAAKsa,cAAa3D,GAKrC,OAJIzd,IAAM4hB,EAASA,EAAO7a,QAAO3F,GAAMA,GAAMwS,EAAMb,QAAQ3R,EAAIpB,MAC1D2hB,IAAMC,EAASA,EAAO7a,QAAO3F,GAAMA,EAAG2S,cACtChI,IAAQ6V,EAASA,EAAO7a,QAAO3F,IAAOA,EAAG2S,cAEvC6N,CACV,CASDxiB,YAAYY,EAAO,GAAI2hB,GAAO,EAAM5V,GAAS,GACzC,OAAOqV,aAAaS,QAAQ7hB,EAAM2hB,EAAM5V,GAAQ+G,OACnD,CAQD1T,gBAAgBgC,EAAI0D,GAEhB,KADa8O,EAAMuC,YAAY/U,IAAOwS,EAAMhC,cAAcxQ,IAC/C,OAAO,KAElB,MAAMsU,EAAK9B,EAAMyD,UAAUjW,GAC3B,IAAK,IAAImC,KAAKmS,EAAI,CACd,IAAKnS,EAAG,MACR,GAAIA,aAAaqU,WAAY,CACzB,MAAMX,EAASrD,EAAMqD,OAAO1T,GAC5B,OAAKuB,EACD8O,EAAMkO,UAAU7K,EAAQnS,GAAcmS,EACnCmK,aAAaW,SAAS9K,EAAQnS,GAFnBmS,CAGrB,CACD,GAAIrD,EAAMkO,UAAUve,EAAGuB,GAAO,OAAOvB,CACxC,CAED,OAAOuB,EAAO,KAAO/E,SAASuS,IACjC,CAQDlT,iBAAiB2V,EAAK/U,GAClB,OAAOohB,aAAaY,QAAQjN,EAAK/U,EAAM,MAC1C,CAQDZ,iBAAiB2V,EAAK/U,GAClB,OAAOohB,aAAaY,QAAQjN,EAAK/U,EAAM,MAC1C,CASDZ,eAAe2V,EAAK/U,EAAMqM,GACtB,MAAM4V,EAAOC,QAAQC,yBAAyBpN,EAAI4C,UAAW3X,GAC7D,OAAOiiB,GAA4B,mBAAbA,EAAK5V,EAC9B,CAMDjN,sBACQgiB,cAAahD,IACjBre,SAASyL,iBAAiB,WAAY4V,cAAagB,GACnDhB,cAAahD,GAAY,EAC5B,CAMDhf,wBACIW,SAAS0b,oBAAoB,WAAY2F,cAAagB,GACtDhB,cAAahD,GAAY,CAC5B,CAEDhf,UAAmB,EACnBA,WACIqB,uBAAsB,KAClB2gB,aAAaS,QAAQ,MAAM,GAAO,GAAM9a,QAAO3F,GAAMA,EAAG2S,aAAYzQ,SAAQlC,GAAMA,EAAG2S,WAAWpN,mBAAqBZ,EAAca,QAAO,GAEjJ,QAGGhB,OAAO+C,OAAOyY,cACdA,aAAaiB,eACb7c,WAAW4b,aAAeA,YAC7B,GCnMU,MAAMkB,SAEjBljB,oBAAsBoG,WAAW+c,iBAAmB1f,SAASqB,OAC7D9E,iBAAkB,SAGd,IAAKoG,WAAW+c,gBAAiB,CAC7B,MAAMzhB,EAAM+B,SAAS+B,KAAK6C,MAAM,KAAKR,MACrC,IAAIub,EAAM1hB,EAAI2G,MAAM,KACpB6a,SAASG,aAAe3hB,EAAI4hB,SAAS,KAAO5hB,EAAM0hB,EAAInX,MAAM,GAAI,GAAGxB,KAAK,KACxErE,WAAW+c,gBAAkBD,SAASG,YACzC,CAGD,MAAME,EAAS,gBAAiB9R,KAC5B8R,IACAL,SAASM,UAAsC,IAA3Bpd,WAAWC,YAC3BC,cAAcA,aAAamd,QAAQ,cAAeP,SAASM,WAEnEN,SAASM,WAAWld,cAAsD,QAAvCA,aAAaC,QAAQ,cAE3D,CAMDvG,oBAAoB0B,EAAM,GAAImD,GAAO,GAEjCnD,EAAMA,GAAO,GACb,IAAIgiB,EAAO,KACX,MAAMC,EAASlgB,SAASsB,SAASsD,MAAM,KAAKR,KAAK,GAAGxD,SAAS,KACvDuf,EAAQliB,EAAI2C,SAAS,eAIvBqf,EAHUhiB,EAAIsD,WAAW,SAEhB4e,EACFliB,EACAA,EAAIsD,WAAW,KACf,GAAGvB,SAASqB,UAAUpD,IACtBiiB,EACA,GAAGlgB,SAASqB,SAASrB,SAASsB,eAAerD,IAE7C,GAAG+B,SAASqB,SAASrB,SAASsB,YAAYrD,IAGrDgiB,EAAOA,EAAKrb,MAAM,OAAOC,KAAInE,GAAKA,EAAEiE,WAAW,UAAW,OAAMqC,KAAK,OACrE,MAAMvF,EAAM,IAAIC,IAAIue,GAKpB,OAFK7e,GAAQqe,SAASM,UAAUte,EAAIE,aAAaC,OAAO,MAAOC,KAAKC,OAE7DL,EAAIM,IACd,CAQDxF,kBAAkB0B,EAAM,GAAImiB,EAAQ,GAChC,OAAQniB,GAAO,IAAI2G,MAAM,KAAK4D,MAAM,GAAI,EAAI4X,GAAOpZ,KAAK,IAC3D,CAUDzK,yBAAyBwP,EAAM,IAE3B,IAAKA,EAAK,OAAOA,EAGjB,GADcA,EAAIxK,WAAW,KAClB,CACP,MAAMhD,EAAKwS,EAAMqE,MAAMlY,SAASkhB,gBAAiBrS,GACjD,OAAOxN,EAAKA,EAAGgX,UAAYxJ,CAC9B,CAGD,OADe/B,EAAOqW,OAAOtU,GACVA,GAEnBA,EAAM0T,UAASa,EAAgBvU,GACxB0T,SAASc,SAASxU,GAC5B,CAODxP,SAAuB0B,EAAM,IAMzB,OADAA,EAAMA,EAAIsD,WAAW,MAAQke,UAASe,EAAe,IAAMviB,EAAMA,EAC1DwhB,SAASgB,aAAaxiB,EAChC,CAMUuiB,eACP,OAAOf,SAASgB,aAAahB,UAASiB,GAAe,EACxD,CAMUA,eACP,OAAOjB,SAASG,aAAeH,SAASG,aAAa3f,QAAQ,KAAM,KAAO,EAC7E,CAWD1D,0BAA0B8K,EAAM,GAAIsZ,EAAS,OACzC,MAAM1iB,EAAMwhB,UAASa,EAAgBjZ,GACrC,aAAaoY,SAASmB,KAAK3iB,EAAK0iB,EACnC,CAWDpkB,kBAAkB8K,EAAM,GAAIsZ,EAAS,MAAOE,EAASC,GAAS,GAC1D,IAAIpc,EAAO,KACX,MAAMqc,EAAK,gBACXF,EAAUA,GAAW,IACbE,GAAMD,EAAS,mBAAqBD,EAAQE,IAAO,aAC3D,MAAM9iB,EAAMwhB,SAASgB,aAAapZ,GAAK,GACjCa,QAAYC,MAAMlK,EAAK,CAAE0iB,OAAQA,EAAQE,QAASA,IAExD,OADI3Y,EAAIE,KAAI1D,EAAOoc,QAAe5Y,EAAI8Y,aAAe9Y,EAAIG,QAClD3D,CACV,CAaDnI,sBAAsB0B,EAAM,GAAI0iB,EAAS,MAAOE,EAASC,GAAS,EAAOtW,GACrE,IACI,GAAIvM,EAAK,OAAOwhB,SAASmB,KAAK3iB,EAAK0iB,EAAQE,EAASC,EAGvD,CAFC,MAAO9e,GACLmH,MAAM8I,MAAMjU,KAAMgE,EACrB,CACD,OAAIwI,IACGsW,EAAS,CAAE,EAAG,GACxB,CAUDvkB,sBAAsB8K,EAAM,IAExB,MAAM4Z,EAASjX,EAAOiX,OAAO5Z,GACvB6Z,GAAQD,GAAU/S,WAAWiT,cAAc9Z,GAC3C+Z,EAASF,GAAQhT,WAAWC,WAAW+S,GAK7C,KAJgBE,GAAUpX,EAAO6E,WAAWxH,IAE9B4Z,KAAQ5Z,EAAM2C,EAAOyM,OAAOpP,IAEtC+Z,EAAQ,CAGJ/Z,EAFY6G,WAAWS,gBAAgBuS,SAE3BhT,WAAWG,kBAAkB6S,EAAMljB,MAEzCkQ,WAAWsK,aAAa0I,EAErC,CAED,GAAKlX,EAAO2B,WAAWtE,GAEvB,OAAOA,CACV,QAGGtE,OAAOC,KAAKyc,SACf,EClNU,MAAM4B,OAOjB9kB,aAAamI,GACT,OAAOV,MAAMC,KAAK,IAAIqX,IAAI5W,GAC7B,CASDnI,mBAAmBgJ,EAAGC,GAElB,GAAID,IAAMC,EAAG,OAAO,EACpB,IAAKxB,MAAMyH,QAAQlG,GAAI,OAAO,EAC9B,IAAKvB,MAAMyH,QAAQjG,GAAI,OAAO,EAE9BD,EAAED,OACFE,EAAEF,OAEF,IAAK,IAAIvI,EAAI,EAAGA,EAAIwI,EAAEzI,SAAUC,EAC5B,GAAIwI,EAAExI,KAAOyI,EAAEzI,GAAI,OAAO,EAG9B,OAAO,CACV,CAQDR,mBAAmB+kB,EAAQ,GAAIC,EAAS,IACpC,OAAOD,EAAMzZ,OAAO0Z,GAAQrd,QAAO,CAAC9D,EAAOohB,EAAOC,IAAQA,EAAIvf,QAAQ9B,KAAWohB,GACpF,CAEDjlB,kBAAkB2H,EAAQQ,EAAMgd,GAE5B,OAAyB,IAAlBxd,EAAOpH,OAAe4H,EAAOA,EAAKR,QAAOyd,GAAON,OAAOO,aAAaD,EAAKzd,EAAQwd,IAC3F,CAEDnlB,oBAAoBolB,EAAKzd,EAAQwd,GAG7B,MADmC,iBAAXxd,EACNmd,OAAOQ,aAAaF,EAAKzd,EAAQwd,GAAUL,OAAOS,cAAcH,EAAKzd,EAC1F,CAED3H,oBAAoBolB,EAAKzd,EAAS,GAAIwd,GAClCxd,EAASA,EAAO5D,cAChBohB,EAASA,GAAU3e,OAAOsJ,KAAKsV,GAC/B,IAAIvhB,EAAQ,KACZ,IAAK,IAAI+Z,KAAOuH,EAEZ,GADAthB,EAAQuhB,EAAIxH,IACP,GAAK/Z,GAAOmK,WAAWjK,cAAcM,SAASsD,GAAS,OAAO,EAEvE,OAAO,CACV,CAED3H,qBAAqBolB,EAAKzd,GACtB,IAAI6d,GAAQ,EACRhhB,EAAQ,KAEZ,IAAK,IAAIihB,KAAO9d,EAIZ,GAFAnD,EAAQihB,GAAK5hB,OAAOE,cACpByhB,EAAQA,IAAU,GAAKJ,EAAIK,EAAI7kB,OAAOkf,oBAAoBzb,SAASG,IAC9DghB,EAAO,MAGhB,OAAOA,CACV,CAEDxlB,gBAAgB+I,EAAMZ,GAClB,OAAoB,IAAhBY,EAAKxI,OAAqB4H,EACvBA,EAAKY,MAAK,CAACC,EAAGC,IAAM6b,OAAOY,SAAS1c,EAAGC,EAAGF,IACpD,CAED/I,gBAAgBgJ,EAAGC,EAAGF,GAElB,MAAMmG,EAAUzH,MAAMyH,QAAQlG,GAC9B,IAAIhF,EAAM,EAYV,OAVA+E,EAAK7E,SAAQ,CAACqG,EAAG/J,KACb,IAAK+J,EAAG,OACR,MAAMob,EAAMpb,EAAEqb,KAAOplB,EACfod,EAAM1O,EAAUyW,EAAMpb,EAAE3J,KACxBilB,EAAK7c,EAAE4U,GACPkI,EAAK7c,EAAE2U,GAEb5Z,EAAM8gB,OAAOiB,QAAQF,EAAIC,EAAIvb,EAAEyb,IAAKhiB,EAAI,IAGrCA,CACV,CAEDhE,eAAe6lB,EAAIC,EAAIhc,EAAO9F,GAE1B,OAAIyJ,EAAOS,SAAS2X,IAAOpY,EAAOS,SAAS4X,GAChC9hB,GAAO8gB,OAAOmB,WAAWJ,EAAIC,EAAIhc,GACjC2D,EAAOwC,SAAS4V,IAAOpY,EAAOwC,SAAS6V,GACvC9hB,GAAO8gB,OAAOoB,cAAcL,EAAIC,EAAIhc,GAExC9F,CACV,CASDhE,qBAAqB6lB,EAAIC,EAAIE,GACzB,MAAMG,GAAMN,GAAM,IAAI7X,WAChBoY,GAAMN,GAAM,IAAI9X,WACtB,OAAOgY,EAAM,EAAII,EAAGjd,cAAcgd,GAAMA,EAAGhd,cAAcid,EAC5D,CASDpmB,kBAAkB6lB,EAAIC,EAAIE,GACtB,OAAOA,EAAM,EAAIF,EAAKD,EAAKA,EAAKC,CACnC,QAGGtf,OAAOC,KAAKqe,OACf,EC5IU,MAAMuB,eAAe/gB,KAEhCtF,sBAAwB,uBACxBA,oBAAsB,sFAEtB+O,GAAU9L,UAAU8L,OAEpBU,OAAO3E,EAAMub,OAAOC,eAAgBvX,GACrBtN,KACRsN,OAASA,EACZ,MAAMlO,EAFKY,KAEI8kB,SACf,OAAOzb,EAAIpH,QAAQ2iB,OAAOG,cAAc,CAAChiB,EAAOsG,IAAQA,GAAOjK,EAAI2D,IACtE,CAMDiiB,QACI,MAAMjlB,EAAKC,KACLilB,EAAOllB,EAAGklB,KAAKC,UACf5B,EAAQvjB,EAAGujB,MAAM6B,SAEjBC,EAAcrlB,GAAGslB,IAGjBC,EAAiB,IAAVhC,EAAc,GAAK,IAAIiC,OAAOjC,GAD3B8B,GAAe,GAAK,IACwBxe,MAAM,KAClE,IAAI7H,EAAI,EACR,KAAOA,GAAKkmB,GACRK,EAAKhO,KAAKvY,EAAEwN,YACZxN,IAGJ,KAAOumB,EAAKxmB,OAAS,GAAK,GAAGwmB,EAAKhO,KAAK,IAEvC,OAAOgO,CACV,CAEGhY,aACA,OAAOtN,MAAKsN,CACf,CAEGA,WAAOjE,GACPrJ,MAAKsN,EAAUjE,GAAO7H,UAAU+L,QACnC,CAEGiY,WACA,OAAOxlB,KAAKylB,aACf,CAEGD,SAAKnc,EAAM,GACXrJ,KAAK0lB,YAAYrc,EACpB,CAEGsc,YACA,OAAO3lB,KAAK4lB,UACf,CAEGD,UAAMtc,EAAM,GACZrJ,KAAK6lB,SAASxc,EACjB,CAEGyc,UACA,OAAO9lB,KAAKklB,SACf,CAEGY,QAAIzc,EAAM,GACVrJ,KAAK+lB,QAAQ1c,EAChB,CAMGia,YACA,OAAO,IAAIsB,OAAO5kB,KAAKylB,cAAezlB,KAAK4lB,WAAY,EAC1D,CAMGX,WACA,OAAO,IAAIL,OAAO5kB,KAAKylB,cAAezlB,KAAK4lB,WAAa,EAAG,EAC9D,CAEGI,SACA,OAAOve,OAAOzH,KAAKimB,MAAMzb,OAAO,EACnC,CAEGyb,WACA,OAAOjmB,KAAKylB,aACf,CAEGS,QACA,OAAOlmB,KAAK4lB,WAAa,CAC5B,CAEGO,SACA,OAAOnmB,KAAKkmB,EAAE3Z,WAAW6Z,SAAS,EAAG,IACxC,CAEGC,UACA,OAAOrmB,MAAKsmB,EAAU,CAAEX,MAAO,SAClC,CAEGY,WACA,OAAOvmB,MAAKsmB,EAAU,CAAEX,MAAO,QAClC,CAEGa,QACA,OAAOxmB,KAAKklB,UAAU3Y,UACzB,CAEGka,SACA,OAAOzmB,KAAKwmB,EAAEJ,SAAS,EAAG,IAC7B,CAEGrN,QACA,OAAO/Y,KAAKmlB,SAAS5Y,UACxB,CAEGma,SACA,OAAO1mB,KAAK2mB,IAAInc,MAAM,EAAG,EAC5B,CAEGmc,UACA,OAAO3mB,MAAKsmB,EAAU,CAAEM,QAAS,SACpC,CAEGC,WACA,OAAO7mB,MAAKsmB,EAAU,CAAEM,QAAS,QACpC,CAEGE,QACA,OAAO9mB,KAAK+mB,WAAWxa,UAC1B,CAEGya,SACA,OAAOhnB,KAAK8mB,EAAEV,SAAS,EAAG,IAC7B,CAEGxnB,QACA,OAAOoB,MAAKinB,EAAY,EAC3B,CAEGC,SACA,OAAOlnB,MAAKinB,EAAY,EAC3B,CAEG1f,QACA,OAAOvH,MAAKmnB,GAAU,EACzB,CAEGC,QACA,OAAOpnB,MAAKmnB,GAAU,EACzB,CAEGzK,QACA,OAAO1c,KAAKqnB,aAAa9a,UAC5B,CAEG+a,SACA,OAAOtnB,KAAK0c,EAAE0J,SAAS,EAAG,IAC7B,CAEGznB,QACA,OAAOqB,KAAKunB,aAAahb,UAC5B,CAEGib,SACA,OAAOxnB,KAAKrB,EAAEynB,SAAS,EAAG,IAC7B,CAEGqB,UACA,OAAOznB,KAAK0nB,kBAAkBnb,WAAW6Z,SAAS,EAAG,IACxD,CAEGuB,QACA,OAAO3nB,MAAK4nB,GACf,CAEGC,SACA,OAAO7nB,KAAK2nB,EAAE1lB,QAAQ,IAAK,GAC9B,CAEG6lB,QACA,OAAO3a,KAAK4a,KAAK/nB,KAAKkmB,EAAI,EAC7B,CAEGpG,QACA,OAAQ9f,KAAK+mB,WAAa,GAAGxa,UAChC,CAEGyb,SACA,OAAOhoB,KAAK8f,EAAEsG,SAAS,EAAG,IAC7B,CAEG6B,QACA,MAAMC,EAAO,IAAIrkB,KAAK7D,KAAKmoB,WAC3BD,EAAKE,SAAS,EAAG,EAAG,EAAG,GACvBF,EAAKnC,QAAQmC,EAAKhD,UAAY,GAAKgD,EAAK/C,SAAW,GAAK,GACxD,MAAMkD,EAAQ,IAAIxkB,KAAKqkB,EAAKzC,cAAe,EAAG,GAC9C,OAAO,EAAItY,KAAKmb,QAAQJ,EAAKC,UAAYE,EAAMF,WAAa,MAAW,GAAKE,EAAMlD,SAAW,GAAK,GAAK,EAC1G,CAEGoD,SACA,OAAOvoB,KAAKioB,EAAE1b,WAAW6Z,SAAS,EAAG,IACxC,CAEGzZ,QACA,OAAO3M,KAAKmoB,SACf,CAEGK,QACA,OAAOrb,KAAKC,MAAMpN,KAAK2M,EAAI,IAC9B,CAEDmY,SACI,MAAM/kB,EAAKC,KACX,MAAO,CACHgmB,GAAIjmB,EAAGimB,GACPC,KAAMlmB,EAAGkmB,KACTC,EAAGnmB,EAAGmmB,EACNC,GAAIpmB,EAAGomB,GACPE,IAAKtmB,EAAGsmB,IACRE,KAAMxmB,EAAGwmB,KACTC,EAAGzmB,EAAGymB,EACNC,GAAI1mB,EAAG0mB,GACP1N,EAAGhZ,EAAGgZ,EACN2N,GAAI3mB,EAAG2mB,GACPC,IAAK5mB,EAAG4mB,IACRE,KAAM9mB,EAAG8mB,KACTC,EAAG/mB,EAAG+mB,EACNE,GAAIjnB,EAAGinB,GACPpoB,EAAGmB,EAAGnB,EACNsoB,GAAInnB,EAAGmnB,GACP3f,EAAGxH,EAAGwH,EACN6f,EAAGrnB,EAAGqnB,EACN1K,EAAG3c,EAAG2c,EACN4K,GAAIvnB,EAAGunB,GACP3oB,EAAGoB,EAAGpB,EACN6oB,GAAIznB,EAAGynB,GACPC,IAAK1nB,EAAG0nB,IACRE,EAAG5nB,EAAG4nB,EACNE,GAAI9nB,EAAG8nB,GACPC,EAAG/nB,EAAG+nB,EACNhI,EAAG/f,EAAG+f,EACNkI,GAAIjoB,EAAGioB,GACPC,EAAGloB,EAAGkoB,EACNM,GAAIxoB,EAAGwoB,GACP5b,EAAG5M,EAAG4M,EACN6b,EAAGzoB,EAAGyoB,EAEb,CAEDjqB,iBAAiBkqB,GAAQ,EAAOnb,EAAS9L,UAAU8L,OAAQP,GAAa,GACpE,MAAMgT,EAAM,IAAI6E,OAChB7E,EAAIzS,OAASA,EACbyS,EAAI8F,SAAS,GACb,MAAMP,EAAO,GACb,IAAIjc,EAAM,KACN0P,EAAI,GACR,KAAOA,KACH1P,EAAMof,EAAQ1I,EAAIsG,IAAMtG,EAAIwG,KAC5Bld,EAAM0D,EAAagT,GAAIhT,GAAY1D,GAAOA,EAC1Cic,EAAKhO,KAAKjO,GACV0W,EAAI8F,SAAS9F,EAAI6F,WAAa,GAElC,OAAON,CACV,CAED/mB,eAAekqB,GAAQ,EAAOnb,EAAS9L,UAAU8L,OAAQP,GAAa,GAClE,MAAMgT,EAAM,IAAI6E,OAChB7E,EAAIzS,OAASA,EACb,MACMob,EADc3I,GAAIsF,IACK,EAAI,EACjCtF,EAAIgG,QAAQhG,EAAImF,UAAYnF,EAAIoF,SAAWuD,GAC3C,MAAMpD,EAAO,GACb,IAAIjc,EAAM,KACN0P,EAAI,EACR,KAAOA,KACH1P,EAAMof,EAAQ1I,EAAI4G,IAAM5G,EAAI8G,KAC5Bxd,EAAM0D,EAAagT,GAAIhT,GAAY1D,GAAOA,EAC1Cic,EAAKhO,KAAKjO,GACV0W,EAAIgG,QAAQhG,EAAImF,UAAY,GAEhC,OAAOI,CACV,CAEDD,KAEI,OAA6D,IAAtD,IAAIsD,KAAKC,OAAO5oB,MAAKsN,IAAUub,UAAUC,QACnD,CAED/b,IAAY1D,EAAM,IACd,OAAOA,EAAI0f,OAAO,GAAGjc,cAAgBzD,EAAImB,MAAM,EAClD,CAED8b,GAAU3L,GACN,OAAO3a,KAAKgpB,eAAehpB,MAAKsN,EAASqN,EAC5C,CAEDsM,GAAYtK,GACR,OAAQ3c,KAAK+mB,WAAa,IAAM,IAAIxa,WAAW6Z,SAASzJ,EAAM,IACjE,CAEDwK,GAAU8B,GACN,MACM5f,EAAMrJ,MAAKsmB,EADL,CAAE4C,KAAM,UAAWC,QAAQ,IACPviB,MAAM,KAAKR,KAAK,GAChD,OAAO6iB,EAAc5f,EAAI/G,cAAgB+G,CAC5C,CAEDue,KACI,MACMwB,GAAc,EADTppB,KACgBqpB,oBACrBC,EAAUnc,KAAKoc,IAAIH,GAEnBI,EAAeF,EAAU,GAM/B,MAAO,GAJMF,GAAc,EAAI,IAAM,MAHlBjc,KAAKC,MAAMkc,EAAU,IAIhB/c,WAAW6Z,SAAS,EAAG,QAClCoD,EAAajd,WAAW6Z,SAAS,EAAG,MAGpD,EChUU,MAAMqD,SAQpBlrB,iBAAiBgC,GAChB,MAAM+S,EAAO/S,EAAGgT,wBACVmW,EAAKhf,OAAOif,QACZC,EAAKlf,OAAOmf,QACZzqB,EAAM,CACXuP,KAAM2E,EAAK3E,KAAO+a,EAClB9a,MAAO0E,EAAK1E,MAAQ8a,EACpBI,IAAKxW,EAAKwW,IAAMF,EAChBG,OAAQzW,EAAKyW,OAASH,EACtBnW,OAAQH,EAAKG,OACbD,MAAOF,EAAKE,MACZ7G,EAAG2G,EAAK3G,EAAI+c,EACZM,EAAG1W,EAAK0W,EAAIJ,GAIb,OAFAxqB,EAAI6qB,QAAU7qB,EAAIuP,KAAQvP,EAAIoU,MAAQ,EACtCpU,EAAI8qB,QAAU9qB,EAAI0qB,IAAO1qB,EAAIqU,OAAS,EAC/BrU,CACP,CAQDb,oBAAoBoT,EAASwY,GAE5B,MAAM7W,EAAO3B,EAAQ4B,wBACf6W,EAAUX,SAASY,eAAeF,EAAcxY,EAAU,MAE1D2Y,EAAWF,EAAQzd,EACnB4d,EAAWH,EAAQJ,EAEnBQ,EAAe7Y,EAAQ8Y,YAAcH,EACrCI,EAAgB/Y,EAAQgZ,aAAeJ,EAEvCK,EAAWtX,EAAK3E,KAAOyb,EAAQzb,KAC/Bkc,EAAWvX,EAAKwW,IAAMM,EAAQN,IAKpC,MAAO,CACNtW,MAAOgX,EACP/W,OAAQiX,EACRZ,IAAKe,EACLlc,KAAMic,EACNje,EAAGie,EACHZ,EAAGa,EACHZ,QAVgBO,EAAe,EAAKI,EAWpCV,QAVeW,EAAYH,EAAgB,EAY5C,CAODnsB,sBAAsBoT,GAErB,MAAMvS,EAAM,CACXuP,KAAM,EACNC,MAAO,EACPkb,IAAK,EACLC,OAAQ,EACRpd,EAAG,EACHqd,EAAG,GAKJ,KADarY,aAAmBrT,aACrB,OAAOc,EAClB,MAAMwI,EAAM4J,EAASY,qBAAqBT,GAS1C,OAPAvS,EAAIuP,KAAO/G,EAAIuJ,MAAM,gBACrB/R,EAAIwP,MAAQhH,EAAIuJ,MAAM,iBACtB/R,EAAI0qB,IAAMliB,EAAIuJ,MAAM,eACpB/R,EAAI2qB,OAASniB,EAAIuJ,MAAM,kBACvB/R,EAAIuN,EAAIvN,EAAIuP,KAAOvP,EAAIwP,MACvBxP,EAAI4qB,EAAI5qB,EAAI0qB,IAAM1qB,EAAI2qB,OAEf3qB,CACP,CAUDb,kBAAkB2X,EAAY,MAAO4U,EAAQ9nB,EAAQ+nB,GAEpD,IAAKD,EAAQ,OAAO,EACpB,IAAK9nB,EAAQ,OAAO,EAEpB,MAAMgoB,EAAMvB,UAASwB,GAAe/U,GAEpC,IAAKuT,UAASyB,GAAkBF,GAE/B,YADA7f,MAAM2C,KAAKgd,EAAQ,6BAA6B5U,MAIjD,MAAM5P,EAAOpB,EAAcqB,QAAQukB,EAAOpqB,QAAQyqB,OAE5C/lB,EAAQkB,EAAO,GAAKwkB,EAAO1lB,MAEjCA,EAAMgmB,SAAW,QACjBhmB,EAAM0kB,IAAM,MACZ1kB,EAAMuJ,KAAO,MACbvJ,EAAMimB,OAAS,MACfjmB,EAAMglB,QAAU,MACZ9jB,GAAMpB,EAAcuB,QAAQqkB,EAAOpqB,QAAQyqB,MAAO/lB,GAAO,GAE7D,MAAMkmB,EAAOR,EAAOH,aAAe,EAC7BY,EAAOT,EAAOL,YAAc,EAE5BnX,EAAOmW,SAAS+B,aAAaxoB,EAAQ+nB,aAAiBzsB,aACtDmtB,EAAQhC,UAASiC,GAAaZ,EAAQC,EAAOC,GAE7C5rB,EAAM,CACXuN,EAAG2G,EAAK2W,QACRD,EAAG1W,EAAK4W,QACRyB,KAAML,EACNM,KAAML,EACNM,KAAMf,EAAOH,aACbmB,KAAMhB,EAAOL,aAGdhB,UAASsC,GAAWf,EAAK5rB,EAAKkU,EAAMmY,GAEpCrmB,EAAM4mB,UAAY,aAAa5sB,EAAIuN,QAAQvN,EAAI4qB,OAC3C1jB,IAAMA,EAAKlB,MAAM4mB,UAAY5mB,EAAM4mB,UAEvC,CAUDztB,qBAAqB2X,EAAY,MAAO4U,EAAQ9nB,EAAQ+nB,GAEvD,IAAKD,EAAQ,OAAO,EACpB,IAAK9nB,EAAQ,OAAO,EAEpB,MAAMgoB,EAAMvB,UAASwB,GAAe/U,GAEpC,IAAKuT,UAASyB,GAAkBF,GAE/B,YADA7f,MAAM2C,KAAKgd,EAAQ,6BAA6B5U,MAIjD6U,EAAM3lB,MAAMgmB,SAAW,WACvBN,EAAO1lB,MAAMgmB,SAAW,WACxBN,EAAO1lB,MAAMimB,OAAS,MACtBP,EAAO1lB,MAAM6mB,MAAQxC,UAASwC,GAAOjB,GAErC,MAAMkB,EAAQpB,EAAOvX,wBACfkY,EAAQV,EAAMxX,wBACdmV,EAASe,SAAS0C,UAAUnpB,GAE5B5D,EAAM,CACXuN,EAAG+b,EAAOuB,QACVD,EAAGtB,EAAOwB,SAGLzG,EAAM,CACX9W,EAAIuf,EAAM1Y,MAAQ,EAAMiY,EAAMjY,MAAQ,EACtCwW,EAAIkC,EAAMzY,OAAS,EAAMgY,EAAMhY,OAAS,GAGzCgW,UAAS2C,GAAcpB,EAAK5rB,EAAKqkB,EAAKyI,EAAOT,EAAO/C,GAEpDoC,EAAO1lB,MAAM4mB,UAAY,aAAa5sB,EAAIuN,QAAQvN,EAAI4qB,OACtDe,EAAM3lB,MAAM4mB,UAAY,aAAavI,EAAI9W,QAAQ8W,EAAIuG,OACrDe,EAAM3lB,MAAM0kB,IAAMrG,EAAIqG,IAAMrG,EAAIqG,IAAM,GACtCiB,EAAM3lB,MAAMuJ,KAAO8U,EAAI9U,KAAO8U,EAAI9U,KAAO,EAEzC,CAEDpQ,UAAqBysB,EAAK5rB,EAAKqkB,EAAKyI,EAAOT,EAAO/C,GAC7CsC,EAAIqB,OACP5I,EAAIuG,EAAI,EACRvG,EAAI9U,KAAO,MACXvP,EAAIuN,EAAIvN,EAAIuN,EAAKuf,EAAM1Y,MAAQ,EAC/BpU,EAAI4qB,GAAK,GAAKkC,EAAMnC,OAASrB,EAAOoB,IAAM2B,EAAMhY,SACtCuX,EAAIsB,UACd7I,EAAIuG,EAAI,EACRvG,EAAI9U,KAAO,MACXvP,EAAIuN,EAAIvN,EAAIuN,EAAKuf,EAAM1Y,MAAQ,EAC/BpU,EAAI4qB,EAAItB,EAAOqB,OAAS0B,EAAMhY,QACpBuX,EAAIuB,SACd9I,EAAI9W,EAAI,EACR8W,EAAIqG,IAAM,MACV1qB,EAAIuN,GAAK,GAAKuf,EAAMtd,MAAQ8Z,EAAO/Z,KAAO8c,EAAMjY,OAChDpU,EAAI4qB,EAAI5qB,EAAI4qB,EAAKkC,EAAMzY,OAAS,GACtBuX,EAAIwB,QACd/I,EAAI9W,EAAI,EACR8W,EAAIqG,IAAM,MACV1qB,EAAIuN,EAAI+b,EAAO9Z,MAAQ6c,EAAMjY,MAC7BpU,EAAI4qB,EAAI5qB,EAAI4qB,EAAKkC,EAAMzY,OAAS,EAEjC,CAEDlV,UAAkBysB,EAAK5rB,EAAKqtB,EAAOhB,GAC9BT,EAAIqB,OACPjtB,EAAI4qB,EAAIyC,EAAM3C,IAAM1qB,EAAIysB,KAAOJ,EAAM9O,KACrCvd,EAAIuN,EAAIvN,EAAIuN,EAAIvN,EAAIwsB,MACVZ,EAAIsB,UACdltB,EAAI4qB,EAAIyC,EAAM3C,IAAM2C,EAAMhZ,OAASgY,EAAM9O,KACzCvd,EAAIuN,EAAIvN,EAAIuN,EAAIvN,EAAIwsB,MACVZ,EAAIuB,SACdntB,EAAIuN,EAAI8f,EAAM9d,KAAOvP,EAAI0sB,KAAOL,EAAM9O,KACtCvd,EAAI4qB,EAAI5qB,EAAI4qB,EAAI5qB,EAAIusB,KAAOF,EAAM9O,MACvBqO,EAAIwB,QACdptB,EAAIuN,EAAI8f,EAAM9d,KAAO8d,EAAMjZ,MAAQiY,EAAM9O,KACzCvd,EAAI4qB,EAAI5qB,EAAI4qB,EAAI5qB,EAAIusB,KAAOF,EAAM9O,KAElC,CAEDpe,UAAca,GACb,OAAIA,EAAIitB,MACA,oBACGjtB,EAAIktB,SACP,oBACGltB,EAAImtB,QACP,oBACGntB,EAAIotB,MACP,yBADD,CAGP,CAEDjuB,UAAyBa,GACxB,OAAOA,EAAImtB,SAAWntB,EAAIotB,OAASptB,EAAIitB,OAASjtB,EAAIktB,QACpD,CAED/tB,UAAsB2X,GACrB,MAAO,CACNqW,QAAsB,SAAbrW,GAAqC,QAAbA,EACjCsW,MAAoB,OAAbtW,GAAmC,SAAbA,EAC7BmW,MAAoB,OAAbnW,EACPoW,SAAuB,UAAbpW,EAEX,CAED3X,UAAoBoT,EAASoZ,EAAOC,GAEnC,IAAKD,EAAO,MAAO,CAAEpe,EAAG,EAAGqd,EAAG,EAAGrN,KAAM,EAAGnJ,MAAO,EAAGC,OAAQ,GAC5D,IAAIxB,EAAQ,EACZ,MAAMya,EAAQjD,SAAS+B,aAAa7Z,GAC9B8Z,EAAQhC,SAAS+B,aAAaT,GAE9BpO,EAAOqO,EAAIuB,SAAWvB,EAAIwB,MAAQf,EAAMjY,MAAQiY,EAAMhY,OAEtDkZ,EAAaD,EAAMlZ,MAAQ,EAAMmJ,EAAO,EACxCiQ,EAAaF,EAAMjZ,OAAS,EAAMkJ,EAAO,EAiB/C,OAfA8O,EAAM9O,KAAOA,EACboO,EAAM3lB,MAAMgmB,SAAW,WAEnBJ,EAAIuB,SAAWvB,EAAIwB,OACtBzB,EAAM3lB,MAAMuJ,KAAO,KACnBoc,EAAM3lB,MAAM0kB,IAAM,MAClB7X,EAAQ+Y,EAAIuB,QAAU5P,GAAQ,EAAIA,EAClCoO,EAAM3lB,MAAM4mB,UAAY,aAAa/Z,QAAY2a,EAAY,SAE7D7B,EAAM3lB,MAAM0kB,IAAM,KAClBiB,EAAM3lB,MAAMuJ,KAAO,MACnBsD,EAAQ+Y,EAAIqB,MAAQ1P,GAAQ,EAAIA,EAChCoO,EAAM3lB,MAAM4mB,UAAY,aAAaW,QAAgB1a,QAG/CwZ,CACP,QAGA1mB,OAAOC,KAAKykB,UACZ9kB,WAAW8kB,SAAWA,QACtB,ECtSa,MAAMoD,eAAevuB,YAEnCC,UAAkB,kBAElBA,UAAiB,iBAEjBA,UAAiB,iBAEjBA,UAAiB,cAEjBA,UAAiB,cAEjBA,UAAqB,kBAErBA,UAAe,CAAC,UAAW,mBAG1BgL,eAAeC,OAAO,UAAWqjB,QACjC9nB,OAAOC,KAAK6nB,OACZ,CAED1kB,cACCC,QACAykB,OAAOC,SAAS9sB,KAChB,CAEDzB,gBAAgB2V,EAAKS,EAAU,WAC9B,OAAO5B,EAAM+Z,SAAS5Y,EAAKS,EAASkY,QAAOE,GAC3C,CAQDxuB,eAAegC,EAAIugB,GAAO,GACzB,IAAI5S,EAAM2e,OAAOG,YAAYzsB,GAC7B,MAAM0sB,EAASJ,OAAOK,QAAQ3sB,GACxB4sB,EAASN,OAAOO,UAAU7sB,GAC1B8sB,EAAOJ,GAAUnM,EAAO,WAAWqM,iBAAwB,GAC3DG,EAAMxc,OAAOpL,IAAInF,EAAI,eAAgB,IAC3C,OAAI2N,EAAY,gBAAgBmf,WAAcnf,aAAeof,qBAC7Dpf,EAAM3N,EAAGF,cAAc,YAChB6N,GAAKqJ,WAAa,GACzB,CAODhZ,oBAAoBuZ,GACnB,OAAK/E,EAAMhC,cAAc+G,GAClB9R,MAAMC,KAAK6R,EAAKxD,UAAUpO,QAAO3F,GAAoB,WAAdA,EAAGoU,UADV,EAEvC,CAODpW,gBAAgBgC,GACf,MAAO,CAACssB,OAAOU,eAAehtB,GAAKssB,OAAOW,cAAcjtB,GACxDssB,OAAOY,cAAcltB,GAAKssB,OAAOa,cAAcntB,GAC/CssB,OAAOc,cAAcptB,IAAKyI,KAAK,IAC/B,CAEDzK,sBAAsBgC,GACrB,MAAMmC,EAAImqB,OAAOe,WAAWrtB,GAC5B,OAAOmC,EAAI,GAAGmqB,QAAOgB,OAAanrB,KAAO,EACzC,CAEDnE,qBAAqBgC,GACpB,MAAMmC,EAAImqB,OAAOiB,UAAUvtB,GAC3B,OAAOmC,EAAI,GAAGmqB,QAAO7pB,OAAYN,KAAO,EACxC,CAEDnE,qBAAqBgC,GACpB,MAAMmC,EAAImqB,OAAOkB,UAAUxtB,GAC3B,OAAOmC,EAAI,GAAGmqB,QAAOnV,OAAYhV,KAAO,EACxC,CAEDnE,qBAAqBgC,GACpB,MAAMmC,EAAImqB,OAAOmB,UAAUztB,GAC3B,OAAOmC,EAAI,GAAGmqB,QAAOoB,OAAYvrB,KAAO,EACxC,CAEDnE,qBAAqBgC,GACpB,MAAMmC,EAAImqB,OAAOqB,UAAU3tB,GAC3B,OAAOmC,EAAI,GAAGmqB,QAAOsB,OAAYzrB,KAAO,EACxC,CAEDnE,yBAAyBgC,GACxB,MAAMmC,EAAImqB,OAAOuB,cAAc7tB,GAC/B,OAAOmC,EAAI,GAAK,GAAGmqB,QAAOwB,OAAgB3rB,IAC1C,CAEDnE,iBAAiBgC,GAChB,OAAOuQ,OAAOwd,UAAU/tB,EAAI,SAC5B,CAEDhC,iBAAiBgC,GAChB,OAAOuQ,OAAOpL,IAAInF,EAAI,SACtB,CAEDhC,kBAAkBgC,GACjB,OAAOuQ,OAAOpL,IAAInF,EAAI,UACtB,CAEDhC,iBAAiBgC,GAChB,OAAOuQ,OAAOpL,IAAInF,EAAI,SACtB,CAEDhC,iBAAiBgC,GAChB,OAAOuQ,OAAOpL,IAAInF,EAAI,SACtB,CAEDhC,iBAAiBgC,GAChB,OAAOuQ,OAAOpL,IAAInF,EAAI,SACtB,CAEDhC,eAAegC,GACd,OAAOuQ,OAAOpL,IAAInF,EAAI,OACtB,CAEDhC,qBAAqBgC,GACpB,OAAOuQ,OAAOwd,UAAU/tB,EAAI,cAAc,EAC1C,CAEDhC,iBAAiBgC,GAChB,OAAOuQ,OAAOpL,IAAInF,EAAI,SAAU,gBAChC,CAEDhC,eAAegC,GACd,OAAOuQ,OAAOwd,UAAU/tB,EAAI,QAAQ,EACpC,CAEDhC,eAAegC,GACd,OAAOuQ,OAAOpL,IAAInF,EAAI,OAAQ,GAC9B,CAEDhC,eAAegC,GACd,OAAOuQ,OAAOpL,IAAInF,EAAI,OAAQ,IAC9B,CAEDhC,gBAAgBgC,GACf,OAAOuQ,OAAOpL,IAAInF,EAAI,QACtB,CAEDhC,mBAAmBgC,GAClB,OAAOA,EAAG6D,aAAa,WACvB,CAED7F,cAAcgC,GACb,OAAOuQ,OAAOpL,IAAInF,EAAI,MAAO,GAC7B,CAEDhC,mBAAmBgC,GAClB,OAAOuQ,OAAOpL,IAAInF,EAAI,WAAY,GAClC,CAEGguB,kBACH,OAAO1B,OAAOU,eAAevtB,KAC7B,CAEGwuB,iBACH,OAAO3B,OAAOW,cAAcxtB,KAC5B,CAEGyuB,iBACH,OAAO5B,OAAOY,cAAcztB,KAC5B,CAEG0uB,iBACH,OAAO7B,OAAOa,cAAc1tB,KAC5B,CAEG2uB,iBACH,OAAO9B,OAAOc,cAAc3tB,KAC5B,CAEGiuB,aACH,OAAOpB,OAAOmB,UAAUhuB,KACxB,CAEG6tB,cACH,OAAOhB,OAAOe,WAAW5tB,KACzB,CAEGgD,aACH,OAAO6pB,OAAOiB,UAAU9tB,KACxB,CAEG0X,aACH,OAAOmV,OAAOkB,UAAU/tB,KACxB,CAEGmuB,aACH,OAAOtB,OAAOqB,UAAUluB,KACxB,CAEGquB,iBACH,OAAOxB,OAAOuB,cAAcpuB,KAC5B,CAEG8gB,WACH,OAAO+L,OAAOK,QAAQltB,KACtB,CAEGb,WACH,OAAO0tB,OAAO+B,QAAQ5uB,KACtB,CAEG4H,UACH,OAAOilB,OAAOgC,OAAO7uB,KACrB,CAEGiT,aACH,OAAO4Z,OAAOiC,UAAU9uB,KACxB,CAEG+uB,eACH,OAAOlC,OAAOG,YAAYhtB,KAC1B,CAEGyR,WACH,OAAOob,OAAOmC,QAAQhvB,KACtB,CAEG+D,WACH,OAAO8oB,OAAOoC,QAAQjvB,KACtB,CAEGkvB,YACH,OAAOrC,OAAOsC,SAASnvB,KACvB,CAEGovB,eACH,OAAOvC,OAAOwC,YAAYrvB,KAC1B,CAEG0T,WACH,MAAM3T,EAAKC,KACX,GAAKgM,EAAO0C,cAAc3O,EAAGmvB,OAAQ,OAAOnvB,EAAGZ,KAC/C,MAAMT,EAAKkN,KAAKlN,GAEhB,MAAO,cAAcA,MADXqB,EAAGqvB,SAAW,UAAY,yBACgBrvB,EAAGmvB,mCAAmCxwB,MAAOqB,EAAGZ,cACpG,ECtPa,MAAMmwB,gBAAgBhxB,YAEjC6J,cACIC,OACH,CAEDtI,oBACeE,KACHtB,IADGsB,KACIsJ,aAAa,KAAMsC,KAAKlN,GAC1C,CAEDuC,uBACI,MACMV,EAAKwS,EAAMqE,MAAMlY,SAASuS,KADrBzR,KAC8B6I,OACrCtI,GAAIA,EAAGD,QACd,CAMGuI,YACA,OAAOiI,OAAOpL,IAAI1F,KAAM,QAC3B,QAGGuJ,eAAeC,OAAO,WAAY8lB,SAClCvqB,OAAOC,KAAKsqB,QACf,EClBU,MAAMC,kBAAkBjxB,YAEtCkxB,KAAS,EACTC,KAAW,EACXC,IAAW,KACX1Q,IAAY,KAEZ2Q,KAAW,EACXC,IAAQ,KAGRznB,cACCC,OACA,CAED7J,yBAAyB+S,GACxB,OAAO+R,OAAOwM,YAAYve,EAAYie,UAAU9wB,mBAChD,CAMUA,gCACV,MAAO,CAAC,cAAe,KAAM,UAC7B,CAKG2W,gBACH,OAAOpV,KAAKmI,YAAYhJ,IACxB,CAWG4vB,eACH,OAAOje,OAAOpL,IAAI1F,KAAM,WAAY,GACpC,CAEG+uB,aAAS1lB,GACZyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EAC7B,CAKGymB,aACG,OAAO,CACV,CAOA7C,aACH,OAAOjhB,EAAO+jB,MAAQjf,OAAOwd,UAAUtuB,KAAM,OAC7C,CAKGgwB,cACH,OAAOhwB,MAAK2vB,EACZ,CAMG9mB,YACH,OAAOiI,OAAOpL,IAAI1F,KAAM,QACxB,CAUGiwB,kBACH,OAAOnf,OAAOpL,IAAI1F,KAAM,cAAe,GACvC,CAEGiwB,gBAAY5mB,GACfyH,OAAOvL,IAAIvF,KAAM,cAAeqJ,EAChC,CAMG6mB,SACH,OAAOpf,OAAOpL,IAAI1F,KAAM,KAAM,GAC9B,CAEGkwB,OAAG7mB,GACNyH,OAAOvL,IAAIvF,KAAM,KAAMqJ,EACvB,CAOI8mB,cACJ,OAAOrf,OAAOpL,IAAI1F,KAAM,UAAW,GACnC,CAEGmwB,YAAQ9mB,GACXyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EAC5B,CAOItH,eACJ,OAAO+O,OAAOpL,IAAI1F,KAAM,WAAY,GACpC,CAEG+B,aAASsH,GACZyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EAC7B,CASGkM,kBACH,OAAOzE,OAAOpL,IAAI1F,KAAM,cAAe,GACvC,CAEGuV,gBAAYlM,GACfyH,OAAOvL,IAAIvF,KAAM,cAAeqJ,EAChC,CAOG+mB,cACH,OAAOtf,OAAOpL,IAAI1F,KAAM,UAAW,GACnC,CAEGowB,YAAQ/mB,GACXyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EAC5B,CAOGgnB,yBACH,OAAOpS,cAAcoS,mBAAmBrwB,KAAKiwB,YAC7C,CAMGK,gBACH,OAAOrS,cAAcM,SAASve,KAAKkwB,GACnC,CAMGK,yBACH,OAAOtS,cAAcsS,mBAAmBvwB,KAAKuV,YAC7C,CAMGib,qBACH,OAAOvS,cAAcuS,eAAexwB,KAAKmwB,QACzC,CAMIM,sBACJ,OAAOxS,cAAcwS,gBAAgBzwB,KAAK+B,SAC1C,CAMGyO,YACH,OAAO+P,EAAaW,SAASlhB,KAC7B,CAMG8b,cACH,OAAO9b,MAAKyvB,EACZ,CAMGiB,aACH,OAAQ1wB,MAAKyvB,EACb,CAKGD,YACH,OAAOxvB,MAAKwvB,EACZ,CAQGrC,aACH,MACM3gB,EAAM,iBACZ,OAFWxM,KAED6I,MAAQ2D,EAAMsE,OAAOpL,IAAI1F,KAAM,SAAUwM,EACnD,CAMGwD,WACH,MAAMjQ,EAAKC,KAKX,OAAOD,EAAGiwB,SAAWjwB,GAAG2vB,cAAoBH,UAAYxvB,GAAG2vB,GAAS1f,KAAOjQ,GAAG2vB,EAC9E,CAKGiB,cACH,OAAO3wB,KAAKoE,aAAa,UACzB,CAKGusB,YAAQtnB,GAAM,GACjByH,OAAO8f,UAAU5wB,KAAM,UAAWqJ,EAClC,CAKDwnB,WACC,MAAM9wB,EAAKC,KACND,EAAGmT,aACRnT,EAAGmT,WAAWpN,mBAAqBZ,EAAca,OACjDgU,SAAS6B,KAAK1c,SAASuS,KAAM,OAAQ1R,EAAGmT,YACxC,CAMD4d,WACC,OAAOhgB,OAAOpL,IAAI1F,KAAM,QAAS,GACjC,CAKG+wB,cACH,MAAO,GAAG/wB,KAAK2U,WAAW3U,KAAKtB,KAAK2f,mBACpC,CAED2S,MACC,MAAMjxB,EAAKC,KACXkF,EAAcmC,WAAWtH,EAAGgxB,SAC5B7rB,EAAcuB,QAAQ1G,EAAGgxB,QAAShxB,EAAG+wB,WACrC,CAOD7Z,QAAQG,EAAQ,IACf,OAAOrE,EAAMkE,QAAQjX,KAAMoX,EAC3B,CAODb,QAAQa,EAAQ,IACf,OAAOrE,EAAMwD,QAAQvW,KAAMoX,EAC3B,CAODA,MAAMA,EAAQ,GAAIlM,GAAS,GAC1B,MAAMnL,EAAKC,KACLO,EAAKwS,EAAMqE,MAAMrX,EAAGiQ,KAAMoH,GAAO,GAAO,GAC9C,OAAIrX,EAAGiwB,SAAWzvB,EAAWA,EACtBwS,EAAMqE,MAAMrX,EAAIqX,GAAO,EAAOlM,EACrC,CAODmM,SAASD,EAAQ,GAAIlM,GAAS,GAC7B,MAAMnL,EAAKC,KACL2W,EAAO5D,EAAMsE,SAAStX,EAAGiQ,KAAMoH,GAAO,GAAO,GACnD,OAAIrX,EAAGiwB,SAAWrZ,EAAK7X,OAAS,EAAU6X,EACnC5D,EAAMsE,SAAStX,EAAIqX,GAAO,EAAOlM,EACxC,CAQD/G,kBAAkB4J,EAAM,IACvB,GAAIA,EAAK,OAAO0T,SAASuL,YAAYjf,GACrC,MAAMxN,EAAKP,KAAKoX,MAAM,YACtB,OAAO7W,EAAKA,EAAGgX,UAAY,EAC3B,CAMD0Z,KAAK1b,GAAc,GAClBxC,EAAMke,KAAKjxB,KAAMuV,EACjB,CAMD2b,KAAK3b,GAAc,GAClBxC,EAAMme,KAAKlxB,KAAMuV,EACjB,CAQDpR,gBAAgBhF,EAAO,IACtB,IAAKA,EAAM,MAAM,IAAI6N,MAAM,oBAC3B,MAAMjN,EAAKC,KACX,OAAO,IAAIS,SAAQ,CAACuO,EAAGhL,KACtBjE,EAAG+a,KAAK3b,GAAO+b,GAAQlM,EAAEkM,EAAIxb,SAAQ,GAEtC,CAODob,KAAK3b,EAAM+jB,GACV,OAAOljB,KAAKga,OAAO7a,EAAM+jB,GAAM,EAC/B,CAQD7Q,GAAGlT,EAAM+jB,EAAMpI,GAAO,GACrB,OAAO9a,KAAKga,OAAO7a,EAAM+jB,EAAMpI,EAC/B,CAQD0C,IAAIre,EAAM+jB,GACT,OAAOljB,KAAK6a,SAAS1b,EAAM+jB,EAC3B,CAQDlJ,OAAO7a,EAAM+jB,EAAMpI,GAAO,GACzB,OAAO9a,KAAKmxB,YAAYnxB,KAAMb,EAAM+jB,EAAMpI,EAC1C,CAQDD,SAAS1b,EAAM+jB,GACd,OAAOljB,KAAKoxB,YAAYpxB,KAAMb,EAAM+jB,EACpC,CAWDiO,YAAY5wB,EAAIpB,EAAO,GAAIqM,EAAIsP,GAAO,GACrC,OAAOf,SAASsX,OAAOrxB,KAAMO,EAAIpB,EAAMqM,EAAIsP,EAC3C,CASDsW,YAAY7wB,EAAIpB,EAAO,GAAIqM,GAC1B,OAAOuO,SAASzZ,OAAON,KAAMO,EAAIpB,EAAMqM,EACvC,CAKG8lB,oBACH,MAAMvxB,EAAKC,KACX,OAAOD,EAAGswB,oBAAsBtwB,EAAGywB,gBAAkBzwB,EAAGuwB,WAAavwB,EAAG0wB,eACxE,CAKD3wB,oBACC,MAAMC,EAAKC,KAEX,IAAID,GAAGwxB,KAAP,CAEA,IAAKxxB,EAAGuxB,cACP,OAAOvxB,EAAGO,SAGNP,EAAGrB,KAAIqB,EAAGrB,GAAKkN,KAAKlN,IACzBqB,GAAG6vB,GAAQ7vB,GAAGyxB,KACdzxB,GAAG4vB,GAAW5vB,GAAG6vB,GAAM6B,IACvBlR,EAAajb,MAAMvF,GACnBH,uBAAsB,IAAMG,GAAGS,MAVJ,CAW3B,CAKDS,uBACC,MAAMlB,EAAKC,KACXD,GAAG0vB,IAAW,EACd1vB,GAAGif,IAAWqB,aACdE,EAAajgB,OAAOP,GACpBga,SAAS2X,kBAAkB3xB,GAC3BmF,EAAcmC,WAAWtH,EAAGgxB,SAC5BhxB,GAAG4xB,KACH5xB,GAAGif,GAAY,KACfjf,GAAG2vB,GAAW,KACd3vB,GAAG6vB,GAAQ,IACX,CASDzuB,yBAAyBhC,EAAMiC,EAAUC,GACxC,MAAMtB,EAAKC,KACE,gBAATb,GAAwBY,GAAG6xB,KAClB,OAATzyB,IACHohB,EAAajgB,OAAOc,GACpBmf,EAAajb,MAAMvF,IAEP,YAATZ,GACH4T,EAAM6E,YAAY7X,EAAI,UAAwB,UAAbsB,GAE9BtB,GAAGyvB,IACNxjB,EAAOpM,uBAAsB,KAC5BG,EAAGuB,kBAAkBnC,EAAMiC,EAAUC,EAAS,GAGhD,CAQDC,kBAAkBnC,EAAMiC,EAAUC,GAEjC,CAMDwwB,UACC,MAAM9xB,EAAKC,KACX,GAAID,EAAG+b,QAAS,OAChB/b,GAAGyvB,IAAS,EACZ,MAAMhkB,EAAK0E,WAAWiT,cAAcpjB,EAAGqwB,SACvClgB,WAAWsK,aAAahP,GACxBuO,SAAS6B,KAAK7b,EAAI,QAAS,CAAE,GAC7Bga,SAAS6B,KAAK1c,SAASuS,KAAM,iBAAkB1R,EAC/C,CAKD6xB,IAAe5tB,GACd,MAAMjE,EAAKC,KACXgM,EAAOpM,uBAAsB,KACxBG,EAAG+b,UACP/b,EAAGwwB,mBAAqBxwB,EAAGmxB,MAAK,GAAQnxB,EAAGkxB,MAAK,GAAK,GAEtD,CAEDM,MACC,MACMO,EAAKvR,EAAaW,SADblhB,KAC0BuvB,WACrC,OAAOuC,GAAMA,EAAG9B,OAChB,CAED+B,MACC,MAAMhyB,EAAKC,KACXgM,EAAOpM,uBAAsB,KAC5BG,EAAG8wB,UAAU,GAEd,CAMG3lB,SACH,MAAMnL,EAAKC,KAMX,OALKD,EAAGmT,aACPnT,EAAGiyB,aAAa,CAAEC,KAAM,SACxBlyB,GAAGif,GAAYL,cAAcwB,OAAOpgB,GAAGmL,IACvCnL,EAAG8wB,YAEG9wB,EAAGmT,UACV,CAEGgf,SACH,MAAMnyB,EAAKC,KACX,OAAQD,GAAG4vB,IAAY5vB,EAAGktB,SAAYltB,GAAG4vB,EACzC,CAODxrB,WAEC,MAAMpE,EAAKC,KAEX,GAAID,EAAG+b,QAAS,OAEhB,MAAMqW,EAASpyB,GAAGmyB,GACZnnB,EAAMonB,QAAepyB,EAAGitB,YAAYjtB,EAAGgvB,UAAYhvB,EAAGqyB,gBAEtDrY,SAASsY,oBAAmB,KAEjC,GAAItyB,EAAG+b,QAAS,OAEhB/b,GAAGixB,KACH,MAAM7C,EAASpuB,GAAG6vB,GAElB,GAAI7vB,GAAG4vB,GAUN,OATIwC,EACHpyB,GAAG2vB,GAAW3vB,EAAG+vB,OAAS/c,EAAMuf,aAAavyB,EAAIgL,GAAK,GAAQgI,EAAMlF,MAAM9C,GAAK,IAE/EhL,GAAG2vB,GAAW3c,EAAMlF,MAAM9C,GAAK,GAC/BhL,GAAG2vB,GAAShxB,GAAKqB,EAAGrB,GACpBqB,EAAGrB,GAAKkN,KAAKlN,IAEdqU,EAAMyB,KAAKzU,EAAIA,GAAG2vB,SAClB3c,EAAMwf,eAAepE,EAAOnrB,OAAQjD,GAAG2vB,GAAUvB,EAAOhB,QAIzD,GAAIgB,EAAOnrB,SAAWjD,EAAtB,CAiBA,GAAIouB,EAAOnrB,SAAWjD,EAAG6W,cAGxB,OAFA7W,GAAG2vB,GAAW3vB,EAAGktB,OAASltB,EAAKA,GAAGmL,QAClC6H,EAAMyf,QAAQzyB,GAAG2vB,GAAU3kB,GAI5BhL,GAAG2vB,GAAW3c,EAAMuf,aAAavyB,EAAIgL,GAAK,GAC1CgI,EAAMyB,KAAKzU,EAAIA,GAAG2vB,IAClB3c,EAAMwf,eAAepE,EAAOnrB,OAAQjD,GAAG2vB,GAAUvB,EAAOhB,OAXvD,MAbA,GAAIptB,EAAGktB,OACN,GAAIliB,EAAK,CACR,MAAMmD,EAAM6E,EAAMuf,aAAavyB,EAAIgL,GAAK,GACxChL,GAAG2vB,GAAWxhB,EACd6E,EAAMwf,eAAepE,EAAOnrB,OAAQkL,EAAKigB,EAAOhB,OACtD,MACMptB,GAAG2vB,GAAW3vB,OAGfA,GAAG2vB,GAAW3vB,GAAGmL,GACjB6H,EAAMyf,QAAQzyB,GAAG2vB,GAAU3kB,EAckC,IAGhEhL,EAAG8wB,UACH,CAEDW,MAEC,MAAMzxB,EAAKC,KACLkO,EAAMnO,EAAGotB,OACTjJ,EAAMhW,EAAIhK,QAAQ,KAExB,IAAIipB,EAASjJ,EAAM,EAAIhW,EAAI1D,MAAM,EAAG0Z,GAAOhW,EACvClL,EAASkhB,EAAM,EAAIhW,EAAI1D,MAAM0Z,EAAM,GAAK,OAE7B,SAAXiJ,GAAgC,WAAXA,IACxBnqB,EAASA,GAAkBmqB,EAC3BA,EAAS,MAGVA,EAASnhB,EAAOgF,UAAUmc,EAAQ,aAClCnqB,EAASgJ,EAAOgF,UAAUhO,EAAQ,QAElC,IAAIzC,EAAK,KACT,OAAQyC,GACP,IAAK,OACJzC,EAAKR,EACL,MACD,IAAK,SACJQ,EAAKR,EAAG6W,cACR,MACD,QACCrW,EAAKwS,EAAMqE,MAAMrX,EAAGyQ,MAAOxN,IAAW+P,EAAMqE,MAAMlY,SAASkhB,gBAAiBpd,GAG9E,IAAKzC,EAAI,CACR,MAAM6K,EAAM,4CAA4CrL,EAAG4U,eAAe5U,EAAGrB,WAAWsE,IAExF,MADAmI,MAAM8I,MAAMlU,EAAIqL,GACV,IAAI4B,MAAM5B,EAChB,CAID,MAAO,CACN+hB,OAAQA,EACRnqB,OAAQzC,EACRkxB,MALalxB,IAAOR,GAAMQ,IAAOR,EAAG6W,eAOrC,CAED+a,MACC,MAAM5xB,EAAKC,KACPD,GAAG2vB,IAAY3vB,GAAG2vB,GAASpvB,SAC9BP,GAAG2vB,GAASpvB,SACZP,GAAG2vB,GAAW,KAEf,CAQDvrB,WACC,MAAMpE,EAAKC,WAELD,GAAG0yB,KACT,IACC,GAAI1yB,EAAG+b,QAAS,OAChB,IAAK/b,GAAGmyB,GAAc,OACjBnyB,EAAGktB,QAAQltB,EAAGoxB,YAAYjyB,SAAU,WAAYa,GAAGgyB,GAAatpB,KAAK1I,IAC1EA,EAAGoxB,YAAY1S,OAAOlJ,YAAa,SAAUxV,GAAG6xB,GAAenpB,KAAK1I,GAGpE,CAFS,QACTiM,EAAOpM,uBAAsB,IAAMG,EAAG8xB,WACtC,CACD,CASAtzB,cAAcY,EAAMuQ,EAAOiL,GAC3B,IAAIpR,eAAe7D,IAAIvG,GACvB,OAAIoK,eAAempB,SAAiBnpB,eAAempB,SAASvzB,EAAMuQ,EAAOiL,GAClEpR,eAAeC,OAAOrK,EAAMuQ,EAAOiL,EAC1C,QAGApR,eAAeC,OAAO,aAAc+lB,WAC/BhmB,eAAempB,WACnBnpB,eAAempB,SAAWnpB,eAAeC,OACzCD,eAAeC,OAAS+lB,UAAU/lB,OAClCzE,OAAO+C,OAAOyB,gBAEf,EC3vBa,MAAMopB,eAAer0B,YAEhCC,UAAe,WAEfA,WAAe,EACfiP,IAAa,IAAIrI,IAEjByX,GAAS,IAAIU,IACbsV,KAAW,EAEXC,IAAY,EACZC,KAAe,EACf5sB,IAAUlG,MAAK+yB,GAAUtqB,KAAKzI,MAC9BkI,GAAYlI,MAAKgzB,GAAYvqB,KAAKzI,aAG9BuJ,eAAeC,OAAO,UAAWmpB,QACjC5tB,OAAOC,KAAK2tB,QACZzzB,SAASuS,KAAK9G,iBAAiB,QAAS3G,IAChC2uB,OAAOM,SAASN,OAAOM,QAAQC,aAAalvB,EAAEtE,OAAO,GAEhE,CAEUjB,gCACP,MAAO,CAAC,OAAQ,OACnB,CAEUw0B,qBACP,OAAON,QAAOQ,EACjB,CAEDhrB,cACIC,OACH,CAEDtI,oBACI,MAAMC,EAAKC,KACXD,EAAGrB,GAAKqB,EAAGrB,GAAKqB,EAAGrB,GAAKkN,KAAKlN,GAC7BqB,GAAG+yB,KAAevS,EAAaI,KAAK3gB,KAAK2U,SACrC5U,GAAG+yB,KACPH,QAAOQ,GAAQpzB,EACfwgB,EAAajb,MAAMvF,GACnBA,GAAGqzB,KACN,CAEDnyB,uBACI,MAAMlB,EAAKC,KACX0I,cAAc3I,GAAG8yB,IACjBlU,cAAc0U,iBAAiBtzB,GAAGmG,GAASnG,GAAGmI,GAC9CqY,EAAajgB,OAAOP,GACpBA,GAAGyN,GAAWsP,QACd/c,GAAGyN,GAAa,KAChBzN,GAAGmI,EAAY,KACfnI,GAAGmG,GAAU,KACRnG,GAAG+yB,KAAcH,QAAOQ,GAAQ,KACxC,CAEDhyB,yBAAyBhC,EAAO,GAAIm0B,EAAS,GAAIC,EAAS,IACtDvzB,MAAKwzB,GAAkBr0B,EAAMm0B,EAAQC,EACxC,CAEDpvB,SAAwBhF,EAAO,GAAIm0B,EAAS,GAAIC,EAAS,IAErD,MAAMxzB,EAAKC,KAEE,SAATb,IACKY,GAAGyN,GAAWsQ,IAAIyV,UACbxzB,GAAG6iB,GAAM2Q,GAEnBxzB,EAAGmzB,aAAah0B,SAASkhB,gBAAiBrgB,EAAG0zB,OAGpC,SAATt0B,GACAY,GAAGqzB,IAEV,CAEDM,IAAiBnzB,GACb,QAAUA,aAAcozB,mBACjBpzB,aAAcoJ,kBACdpJ,aAAc0H,iBACd1H,aAAcqzB,iBACdrzB,aAAc4U,QACxB,CAED4d,IAAUxyB,GAEN,MACMmU,EAASnU,aAAc2U,KAE7B,GAAIR,GAA0C,GAAhCnU,EAAGiX,YAAY1Q,OAAOhI,OAAa,OAAO,EAExD,MAAMihB,EAAMrL,EAASnU,EAAGqW,cAAgBrW,EACxC,OANWP,MAMD0zB,GAAiB3T,IANhB/f,MAM2B6zB,GAAgB9T,EACzD,CAED8T,IAAgBtzB,GACZ,MAAuC,UAAhCuQ,OAAOpL,IAAInF,EAAI,YACzB,CAEDyyB,IAAYzyB,GACGP,MACR4c,EAAOnH,IAAIlV,EACjB,CAEDuzB,MACI,MAAM/zB,EAAKC,KACPD,GAAG6yB,IACgB,IAAnB7yB,GAAG6c,EAAOD,MACd/c,uBAAsB,KAClB,IACIoG,MAAMC,KAAKlG,GAAG6c,GAAQna,SAAQlC,IAC1BR,GAAG6c,EAAOjX,OAAOpF,GACjBR,GAAGg0B,GAAaxzB,EAAG,GAI1B,CAFC,MAAOyD,GAER,IAER,CAED+vB,IAAaxzB,GACT,MAAMR,EAAKC,KACX,GAAID,GAAG6yB,GAAW,EAAG,OAAO7yB,GAAG6c,EAAOnH,IAAIlV,GAC1C,GAAIA,IAAOrB,SAASkhB,gBAChBrgB,EAAGmzB,aAAa3yB,EAAIR,EAAG0zB,UACpB,CACalzB,aAAc2U,KACrBnV,GAAGi0B,GAAiBzzB,GAAMR,GAAGk0B,GAAkB1zB,EAC3D,CACGA,EAAG2S,YAAYnT,EAAGmzB,aAAa3yB,EAAG2S,WAAYnT,EAAG0zB,KACxD,CAEDQ,IAAkB1zB,GACd,MAAMR,EAAKC,KACXD,EAAG4W,KAAKlU,SAAQwO,GAAQlR,GAAGm0B,GAAiB3zB,EAAI0Q,IACnD,CAEDijB,IAAiB3zB,EAAIpB,GAEjB,MAEMg1B,EAAQ,eAAeh1B,IAE7B,IAAIi1B,EAAOtjB,OAAOpL,IAAInF,EAAI4zB,GACtB9qB,EAAMyH,OAAOpL,IAAInF,EAAIpB,GAErBi1B,EACA/qB,EAAM+qB,EACC/qB,GACPyH,OAAOvL,IAAIhF,EAAI4zB,EAAO9qB,GAGtBA,GAAKyH,OAAOvL,IAAIhF,EAAIpB,EAbba,KAasBq0B,UAAUhrB,GAC9C,CAED2qB,IAAiBzzB,GAEbA,EAAG+zB,OAAS/zB,EAAG+zB,QAAU/zB,EAAGiX,YAC5BjX,EAAGiX,YAFQxX,KAESq0B,UAAU9zB,EAAG+zB,OACpC,CAEDnwB,SAAYowB,EAAO,IAEf,MAAMx0B,EAAKC,KACL6iB,EAAU,CACZ,gBAAiB,WACjB2R,OAAU,YAGd,IAAItqB,EAAM,KACV,IACInK,GAAG6yB,KACH,MAAM3yB,EAAMwhB,SAASgB,aAAa,GAAG1iB,EAAGE,OAAOs0B,UAI/C,GAFArqB,QAAYuX,SAASmB,KAAK3iB,EAAK,MAAO4iB,GAAS,IAC1C3Y,GAAOqqB,EAAKrwB,QAAQ,KAAO,IAAGgG,QAAYnK,GAAG6iB,GAAM2R,EAAK3tB,MAAM,KAAK,MACnEsD,EAAK,OAAO,EACjBnK,GAAGuF,EAAOivB,EAAMrqB,EAInB,CAFS,QACNnK,GAAG6yB,IACN,CAID,OAFK7yB,EAAG0zB,MAAM1zB,GAAG+zB,MAEV,CACV,CAWDxuB,GAAOivB,EAAMn1B,GACT,IAAMA,IAAOm1B,EAAO,OAAO,EAC3B,MAAM1tB,EAAM7G,MAAKy0B,GAAaF,GAK9B,OAJAxvB,OAAOgC,QAAQ3H,GAAKqD,SAASuE,IACzB,MAAM0tB,EAAK9oB,KAAKxL,SAAS4G,EAAG,IAC5BH,EAAItB,IAAImvB,EAAI1tB,EAAG,GAAG,KAEf,CACV,CAODytB,IAAaprB,EAAM,IACf,MAAMtJ,EAAKC,KAKX,OAJKD,GAAGyN,GAAWsQ,IAAIzU,KACnBtJ,GAAGyN,GAAWjI,IAAI8D,EAAK,IAAIlE,KAC3BpF,GAAG6iB,GAAMvZ,IAENtJ,GAAGyN,GAAW9H,IAAI2D,EAC5B,CAED+pB,MACI,MAAMrzB,EAAKC,KACPD,EAAG0zB,MACH9U,cAAcgW,eAAe50B,GAAGmG,GAASnG,GAAGmI,GAC5CnI,GAAG8yB,GAAYtqB,YAAYxI,GAAG+zB,GAAYrrB,KAAK1I,GAAK,OAEpD4e,cAAc0U,iBAAiBtzB,GAAGmG,GAASnG,GAAGmI,GAC9CQ,cAAc3I,GAAG8yB,IAExB,CAQDK,aAAa3yB,EAAIkzB,GAAO,GAEpB,MAAM1zB,EAAKC,KAEPO,IAAOrB,SAASkhB,iBAAiBrgB,GAAG6c,EAAOnH,IAAIlV,GACnDyF,MAAMC,KAAK1F,EAAG8U,YACTnP,QAAO3F,GAAMR,GAAGgzB,GAAUxyB,KAC1BkC,SAAQlC,GAA8B,GAAxBA,EAAG8U,WAAWvW,OAAciB,GAAG6c,EAAOnH,IAAIlV,GAAMR,EAAGmzB,aAAa3yB,GAAI,KAElFkzB,GAAM1zB,GAAG+zB,IACjB,CAUDO,UAAUhrB,GAEN,GAAI2C,EAAO0C,cAAcrF,GAAM,OAAOA,EAEtC,MAAMtJ,EAAKC,KAEX,IAAI+f,EAAM1W,EACN8S,EAAM,KACNjS,EAAM,KACNuZ,EAAM,KAGV,IADAkP,QAAOiC,GAAMC,WAAa,EACgB,QAAlCpR,EAAMkP,QAAOiC,GAAM1U,KAAK7W,KAC5B8S,EAAMsH,EAAI,GACVvZ,EAAMnK,EAAG4gB,KAAKxE,EAAI3R,MAAM,GAAI,IAC5BuV,EAAMA,EAAI9d,QAAQka,EAAKjS,GAG3B,OAAO6V,CACV,CASDY,KAAKtX,GACD,MACMyrB,EAAKlpB,KAAKxL,SAASiJ,GACzB,OAFWrJ,MAEDy0B,GAFCz0B,KAEeu0B,MAAM7uB,IAAIovB,IAAOzrB,CAC9C,CAMGoqB,WACA,OAAO3iB,OAAOwd,UAAUtuB,KAAM,QAAQ,EACzC,CAEGyzB,SAAKpqB,EAAM,IACXyH,OAAO8f,UAAU5wB,KAAM,OAAQqJ,EAClC,CAKG4pB,cACA,OAAOniB,OAAOpL,IAAI1F,KAAM,UAAWd,SAASkhB,gBAAgBmU,MAAQ/yB,UAAU+L,SACjF,CAEG0lB,YAAQ5pB,EAAM,IACdyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EAC/B,CAKGkrB,WACA,OAAOzjB,OAAOpL,IAAI1F,KAAM,OAAQA,KAAKizB,QACxC,CAEGsB,SAAKlrB,EAAM,IACXyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAC5B,CAKGsN,WAEA,OADY7F,OAAOpL,IAAI1F,KAAM,OAAQ,iBAC1B4G,MAAM,IACpB,CAEG+P,SAAKtN,EAAM,IACXA,EAAMrD,MAAMyH,QAAQpE,GAAOA,EAAIL,KAAK,KAAOK,EAC3CyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAC5B,CAKGpJ,UACA,OAAO6Q,OAAOpL,IAAI1F,KAAM,MAAO,GAAGgC,SAASqB,eAC9C,CAEGpD,QAAIoJ,EAAM,IACVyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAC3B,ECrWU,MAAM0rB,WAEjBluB,GAAO,KAEPsB,YAAYwJ,GACR,IAAKoB,EAAMhC,cAAcY,GAAU,MAAM,IAAI3E,MAAM,kCACnDhN,MAAK6G,EAAO,IAAI2K,SAASG,EAC5B,CAEDyR,IAAQ4R,GACJ,OAAO9kB,WAAW6K,YAAY/a,MAAK6G,EAAMmuB,EAC5C,CAEDtvB,IAAIuvB,EAAQD,EAAUE,GAClB,MAAO,CAAC9yB,EAAOoK,KACX,MAAMzM,EAAKC,KACX,OAAIgM,EAAOyL,OAAOrV,GAAerC,GAAG8G,EAAKnB,IAAIsvB,GACzCj1B,GAAGqjB,GAAQ4R,GAAkBj1B,GAAG8G,EAAKmuB,GAAU5yB,EAAOoK,IAC1DyoB,EAAOD,GAAY5yB,EACZ8yB,EAAQ,CAEtB,CAED32B,YAAYoT,GACR,OAAO,IAAIwjB,MAAMxjB,EAAQvM,MAAO,IAAI2vB,WAAWpjB,GAClD,ECfU,MAAMyjB,QAEjBxtB,IAAO,KAEPO,YAAYwJ,GACH3L,MAAMyH,QAAQkE,KAAU3R,MAAK4H,GAAOmtB,WAAWxgB,KAAK5C,GAC5D,CAEDjM,IAAIuvB,EAAQD,GACR,MAAiB,QAAbA,EAA2Bh1B,MAAK4H,GACnB,UAAbotB,EACO,CAAC5yB,EAAOwQ,EAAK1H,KAChB,MAAM3K,EAAKwS,EAAMqE,MAAM6d,EAAQ7yB,EAAOwQ,EAAK1H,GAC3C,OAAOkqB,QAAQ7gB,KAAKhU,EAAG,EAGd,aAAby0B,EACO,CAAC5yB,EAAOwQ,EAAK1H,KAChB,MAAM3K,EAAKwS,EAAMsE,SAAS4d,EAAQ7yB,EAAOwQ,EAAK1H,GAC9C,OAAOkqB,QAAQ7gB,KAAKhU,EAAG,EAGxB00B,EAAOD,EACjB,CAEDzvB,IAAI0vB,EAAQD,EAAU5yB,GAClB,GACS,QADD4yB,EAEIhvB,MAAMyH,QAAQwnB,GACdA,EAAOxyB,SAAQkP,GAAWA,EAAQqjB,GAAY5yB,IAE9C2Q,EAAMnL,IAAIqtB,EAAQ7yB,QAItB6yB,EAAOD,GAAY5yB,EAE3B,OAAO,CACV,CAED7D,gBAAgB+X,GACZ,OAAO,IAAI6e,MAAM7e,EAAM,IAAI8e,QAAQ9e,GACtC,CAED/X,YAAY+X,GACR,OAAIvD,EAAMhC,cAAcuF,GAAc8e,QAAQC,SAAS/e,GAClDtQ,MAAMyH,QAAQ6I,IACnBA,EAAOA,EAAKzP,KAAI8K,GAAWyjB,QAAQC,SAAS1jB,KACrCyjB,QAAQC,SAAS/e,IAFSA,CAGpC,CAED/X,WAAW2V,EAAKiD,EAAKvE,EAAK1H,GACtB,OAAOkqB,QAAQ7gB,KAAKxB,EAAMsE,SAASnD,EAAKiD,EAAKvE,EAAK1H,GACrD,CAED3M,aAAa2V,EAAKiD,EAAKvE,EAAK1H,GACxB,OAAOkqB,QAAQ7gB,KAAKxB,EAAMqE,MAAMlD,EAAKiD,EAAKvE,EAAK1H,GAClD,QAGGnG,OAAO+C,OAAOstB,SACdzwB,WAAWywB,QAAUA,OACxB,EClEU,MAAME,gBAEpB/2B,cAAgB,IAAI4G,IAQpB5G,aAAaY,EAAM4vB,GAClB/uB,KAAKu1B,OAAOhwB,IAAIpG,EAAM4vB,EACtB,CAODxwB,cAAcY,GACb,OAAOa,KAAKu1B,OAAO5vB,OAAOxG,EAC1B,CAODZ,YAAYY,GACX,OAAOa,KAAKu1B,OAAO7vB,IAAIvG,EACvB,CASDZ,mBAAmBY,EAAM4vB,GACxB,MAAMhvB,EAAKu1B,gBACX,IAAI/0B,EAAKR,EAAG6iB,KAAKzjB,GACjB,OAAIoB,IACJA,EAAKR,EAAGogB,OAAO4O,GACfhvB,EAAGuF,MAAMnG,EAAMoB,GACRA,EACP,CAQDhC,cAAcwwB,GACb,MAAMxuB,EAAKrB,SAAS4L,cAAc,YAElC,OADAiI,EAAMyf,QAAQjyB,EAAIwuB,GACXxuB,CACP,CAQDhC,aAAawwB,GACZ,OAAOhc,EAAMyiB,kBAAkBzG,GAAYA,EAASW,QAAQ+F,WAAU,GAAQ,IAC9E,CAQDl3B,0BAA0B2P,GACzB,MAAM1C,EAAK0E,WAAWiT,cAAcjV,GACpC,QAAOgC,WAAWC,WAAW3E,IAAMA,CACnC,CAQDjN,sBAAsB2P,GACrB,MAAM7E,EAAM6E,EAAMA,EAAIpH,OAAS,GAE/B,QAAO,YAAYnF,KAAK0H,IAAO6E,CAC/B,CAQD3P,qBAAqB2P,GACpB,MAAM7E,EAAM6E,EAAMA,EAAIpH,OAAS,GAC/B,QAAO,gCAAgCnF,KAAK0H,IAAO6E,CACnD,CAUD3P,oBAAoBm3B,GAAS,EAAOv2B,EAAO,GAAI4vB,GAC9C,MAAMhvB,EAAKu1B,gBACX,OAAII,EAAe31B,EAAG41B,YAAYx2B,EAAM4vB,GACjChvB,EAAGogB,OAAO4O,EACjB,CAUDxwB,wBAAwBm3B,GAAS,EAAOv2B,EAAO,GAAI+O,GAClD,MAAMnO,EAAKu1B,gBACLxsB,EAAI/I,EAAG61B,eAAe1nB,GAC5B,OAAKpF,EACE/I,EAAG81B,aAAaH,EAAQv2B,EAAM2J,GADtBA,CAEf,CAWDvK,6BAA6Bm3B,GAAS,EAAOv2B,EAAO,GAAI+O,GACvD,MAAMnO,EAAKu1B,gBAGLxsB,EAAIoF,EACV,IACC,IAAI6gB,EAAW,KAEf,OADI2G,IAAQ3G,EAAWhvB,EAAG6iB,KAAK9Z,IAC3BimB,EAAiBA,GACrBA,QAAiBtN,SAASqU,aAAahtB,GAChC/I,EAAG81B,aAAaH,EAAQv2B,EAAM4vB,GAGrC,CAFC,MAAO/qB,GACRmH,MAAM8I,MAAMlU,EAAIiE,EAChB,CACD,OAAO,CACP,CAWDzF,kCAAkCm3B,GAAS,EAAOv2B,EAAO,GAAI+O,GAC5D,MAAMnO,EAAKu1B,gBACL9pB,EAAKzL,EAAGg2B,mBAAmB7nB,GACjC,IAAK1C,EAAI,OAAOA,EAChB,IACC,IAAIujB,EAAW,KAEf,OADIhvB,EAAG21B,SAAQ3G,EAAWhvB,EAAG6iB,KAAK9Z,IAC9BimB,EAAiBA,GACrBA,EAAW7e,WAAWS,gBAAgBnF,SAAYA,IAAOA,IAClDzL,EAAG81B,aAAaH,EAAQv2B,EAAM4vB,GAGrC,CAFC,MAAO/qB,GACRmH,MAAM8I,MAAMlU,EAAIiE,EAChB,CACD,OAAOwH,CACP,CAWDjN,0BAA0Bm3B,GAAS,EAAOv2B,EAAO,GAAI+O,GAEpD,IAAK/O,EAAM,OAAO,EAClB,IAAK+O,EAAK,OAAO,EAEjB,MAAMnO,EAAKu1B,gBAGX,IAAIvG,GAAW,EAoBf,OAlBwB,GAApB7gB,EAAIhK,QAAQ,OAEf6qB,EAAW7vB,SAAS82B,eAAe9nB,EAAI1D,MAAM,KAIzCukB,IACJA,EAAWhvB,EAAGk2B,iBAAiBP,EAAQv2B,EAAM+O,IAGzC6gB,IACJA,QAAiBhvB,EAAGm2B,qBAAqBR,EAAQv2B,EAAM+O,IAGnD6gB,IACJA,QAAiBhvB,EAAGo2B,gBAAgBT,EAAQv2B,EAAM+O,IAG5C6gB,CACP,ECtNa,MAAMqH,mBAAmB93B,YAEvC+3B,KAAa,EACb3G,IAAW,KACX1Q,IAAY,KAKDvgB,gCACV,MAAO,CAAC,OACR,CAED0J,cACCC,OACA,CAEG1J,SACH,OAAOoS,OAAOpL,IAAI1F,KAAM,KACxB,CAEGtB,OAAG2K,GACNyH,OAAOvL,IAAIvF,KAAM,KAAMqJ,EACvB,CAEGtF,WACH,OAAO+M,OAAOpL,IAAI1F,KAAM,OACxB,CAEG+D,SAAKsF,GACRyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EACzB,CAEG4jB,aACH,OAAOjhB,EAAO+jB,MAAQjf,OAAOwd,UAAUtuB,KAAM,QAAQ,EACrD,CAEGgQ,WACH,OAAOhQ,MAAK0vB,IAAY1vB,KAAKkT,UAC7B,CASG+c,kBACH,OAAOnf,OAAOpL,IAAI1F,KAAM,cAAe,GACvC,CAEGiwB,gBAAY5mB,GACfyH,OAAOvL,IAAIvF,KAAM,cAAeqJ,EAChC,CAKG6mB,SACH,OAAOpf,OAAOpL,IAAI1F,KAAM,KAAM,GAC9B,CAEGkwB,OAAG7mB,GACNyH,OAAOvL,IAAIvF,KAAM,KAAMqJ,EACvB,CAMG8mB,cACH,OAAOrf,OAAOpL,IAAI1F,KAAM,UAAW,GACnC,CAEGmwB,YAAQ9mB,GACXyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EAC5B,CAKDlI,yBAAyBhC,EAAMiC,EAAUC,GAC7BrB,MACJq2B,IAAuB,SAATl3B,GADVa,KAC8B81B,cACzC,CAKDh2B,oBACC,MAAMC,EAAKC,KACL8xB,EAAK/xB,EAAG6W,cACd,IAAIkb,GAAoB,WAAdA,EAAGnd,QAAb,CACA,KAAM5U,EAAGswB,oBAAsBtwB,EAAGywB,gBAAkBzwB,EAAGuwB,WACtD,OAAOvwB,EAAGO,SAENP,EAAGrB,KAAIqB,EAAGrB,GAAKkN,KAAKlN,IACzBqB,GAAGs2B,IAAa,EAChB9V,EAAajb,MAAMvF,GACnBA,EAAG+1B,cAPuC,CAQ1C,CAKD70B,uBACC,MAAMlB,EAAKC,KACXD,GAAGs2B,IAAa,EAChBt2B,GAAG4xB,KACC5xB,GAAGif,IAAWjf,GAAGif,GAAUqB,aAC/BE,EAAajgB,OAAOP,GACpBu1B,gBAAgBh1B,OAAOP,EAAGrB,GAC1B,CAEDizB,MACC,MAAM5xB,EAAKC,KACPD,GAAG2vB,KACN3vB,GAAG2vB,GAASpvB,SACZP,GAAG2vB,GAAW,KAEf,CAOGW,yBACH,OAAOpS,cAAcoS,mBAAmBrwB,KAAKiwB,YAC7C,CAMGK,gBACH,OAAOrS,cAAcM,SAASve,KAAKkwB,GACnC,CAMGM,qBACH,OAAOvS,cAAcuS,eAAexwB,KAAKmwB,QACzC,CAMGjlB,aACH,MAAMnL,EAAKC,KAKX,OAJKD,EAAGmT,YAAcnT,GAAGs2B,KACxBt2B,EAAGiyB,aAAa,CAAEC,KAAM,SACxBlyB,GAAGif,GAAYL,cAAcwB,OAAOpgB,EAAGmT,aAEjCnT,EAAGmT,UACV,CAQD/O,qBACC,MAAMpE,EAAKC,KACLkO,QAAYonB,gBAAgBQ,cAAa,EAAM/1B,EAAGrB,GAAIqB,EAAGgE,MAC/D,OAAKmK,EAIDnO,EAAG6W,yBAAyB0f,iBAC/Bvc,SAASU,cAAcvb,SAAU,cAAe,CAAER,GAAIqB,EAAGrB,GAAIqF,KAAMhE,EAAGgE,OAC/DmK,UAGF6L,SAASsY,oBAAmBluB,UACjC,GAAKpE,GAAGs2B,GAAR,CACA,GAAIt2B,EAAGktB,OAAQ,CACd,MAAMxb,EAAOsB,EAAMuf,aAAavyB,EAAImO,EAAIqJ,WACxCxX,GAAG2vB,GAAW3vB,EAAGe,sBAAsB,WAAY2Q,EACvD,MACI1R,EAAGmL,OAAOpF,mBAAqBZ,EAAca,OAC7CgN,EAAMyf,QAAQzyB,EAAGmL,OAAQgD,EAAIqJ,WAE9BwC,SAASU,cAAc1a,EAAI,gBAAiB,CAAErB,GAAIqB,EAAGrB,GAAIqF,KAAMhE,EAAGgE,OAAQ,GAAM,EARrD,CAQ0D,IAE/EmK,IAnBN/C,MAAM8I,MAAMjU,KAAM,8BAA8BD,EAAGrB,YAAYqB,EAAGgE,SAC3D,EAmBR,CAODwyB,cAAcxyB,EAAO,IAGpB,OADIA,IADO/D,KACE+D,KAAOA,GADT/D,KAEDw2B,UAAU,gBACpB,CAODA,UAAUr3B,EAAO,IAChB,MAAMY,EAAKC,KACX,OAAO,IAAIS,SAAQ,CAACuO,EAAGhL,KACtB,IAAK7E,EAAM,OAAO6E,EAAE,oBACpB+V,SAASe,KAAK/a,EAAI,KAAMZ,GAAO6E,GAAMgL,EAAEhL,EAAEtE,SAAS,CAAEob,MAAM,GAAO,GAElE,CAOD1D,MAAMjY,EAAO,IACZ,OAAO4T,EAAMqE,MAAMpX,KAAMb,EACzB,CAQDkY,SAASlY,EAAO,GAAIs3B,GAAU,GAC7B,OAAO1jB,EAAMsE,SAASrX,KAAMb,EAC5B,QAGAoK,eAAeC,OAAO,cAAe4sB,YACrCrxB,OAAOC,KAAKoxB,WACZ,EC5Pa,MAAMM,gBAEjBn4B,YAAc,CAAC,QAAS,QAAS,UAAW,YAAa,YAAa,cAEtEA,WAAiB,EAEjBA,SAAkByF,GAEd,MAAMkgB,EAAMwS,gBAAgBC,KAAKzyB,QAAQF,EAAEmW,MAC3C,GAAI+J,EAAM,EAAG,OAEb,MAAM0S,EAAU7jB,EAAMC,cACtB,IAAK4jB,EAAQ1kB,QAAQa,EAAM8jB,iBAAkB,OAE7C,GAAI3S,EAAM,EAAG,OAAOwS,gBAAgBnnB,MAAMqnB,EAAS5yB,GAGnD,GADiB,CAAC,QAAS,SAAU,YAAYE,QAAQ0yB,EAAQjiB,UAAY,IAC5D3Q,EAAE8yB,OAAQ,OAE3B/c,SAASE,QAAQjW,GAGjB,MAAM+yB,EAAML,gBAAgBM,SAAS9S,GAExBwS,iBAAgB5qB,GAAM8qB,EAASG,IACtCE,OAET,CAED14B,gBAAgB2lB,GACZ,OAAe,IAARA,GAAqB,IAARA,GAAa,EAAI,CACxC,CAOD3lB,aAAaq4B,EAAS1b,GAClB,GAAyB,WAArB0b,GAASjiB,QAAsB,OACnC,MAAMnV,EAAQ,IAAI+b,WAAW,QAAS,CAClC2b,KAAMxsB,OACNrL,SAAS,EACTE,YAAY,EACZ8a,SAAUa,EAAIb,SACdyc,OAAQ5b,EAAI4b,OACZ1c,QAASc,EAAId,UAEjB,OAAOwc,EAAQj3B,cAAcH,EAChC,CAQDjB,UAAaq4B,EAASG,GAClB,MAAMpgB,EAAO5D,EAAMsE,SAAStE,EAAM8jB,iBAAiB3wB,QAAO3F,GAAMwS,EAAMokB,UAAU52B,KAChF,IAAIxB,EAAI4X,EAAKzS,QAAQ0yB,GAAWG,EAGhC,OAFAh4B,EAAIA,GAAK4X,EAAK7X,OAAS,EAAIC,EAC3BA,EAAIA,EAAI,EAAI4X,EAAK7X,OAAS,EAAIC,EACvB4X,EAAK5X,EACf,CAEDR,eACI,IAAIm4B,iBAAgBzjB,GAGpB,OAFA8G,SAASC,OAAO9a,SAASuS,KAAM,KAAM,UAAWilB,iBAAgBxc,GAChEwc,iBAAgBzjB,IAAU,EACnByjB,iBAAgBzjB,EAC1B,CAED1U,cACI,GAAKm4B,iBAAgBzjB,GAGrB,OAFA8G,SAASc,SAAS3b,SAASuS,KAAM,KAAM,UAAWilB,iBAAgBxc,GAClEwc,iBAAgBzjB,IAAU,EACnByjB,iBAAgBzjB,EAC1B,CAEUA,oBACP,OAAOyjB,iBAAgBzjB,EAC1B,CAEUA,kBAAO5J,GACd,OAAO2C,EAAOkF,OAAO7H,GAAOqtB,gBAAgBU,QAAUV,gBAAgBW,MACzE,QAGGX,gBAAgBU,OACnB,EC/EU,MAAME,mBAAmBC,yBAGhChuB,eAAeC,OAAO,gBAAiB8tB,WAAY,CAAE7tB,QAAS,WAC9D1E,OAAOC,KAAKsyB,WACf,CAEDnvB,cACIC,OACH,CAEU3J,gCACP,MAAO,CAAC,OACX,CAED0C,yBAAyBhC,EAAMiC,EAAUC,GAExB,SAATlC,GAAiBa,KAAK4iB,KAAKvhB,EAClC,CAEDvB,oBACI,MAAMC,EAAKC,KACND,EAAGrB,IAAIqB,EAAGuJ,aAAa,KAAMsC,KAAKlN,IACvC6hB,EAAajb,MAAMvF,EACtB,CAEDkB,uBACIsf,EAAajgB,OAAON,KACvB,CAEGwQ,YACA,MAAM0D,EAAMqM,EAAaW,SAASlhB,MAClC,OAAO+S,EAAMgF,OAAO7D,EACvB,CAED/P,WAAWlE,EAAM,IACb,IAAKA,EAAK,OACV,MAAMyG,QAAa+a,SAASc,SAAStiB,EAAK,MAAO,MAAM,GACvDD,KAAK2X,MAAMjR,EACd,CAEDiR,MAAMjR,GAEF,IAAKV,MAAMyH,QAAQ/G,GAAO,OAAO,EAEjC,MAAM3G,EAAKC,KAWX,OATAJ,uBAAsB,KAElB,MAAM+W,EAAO,GACbjQ,EAAKjE,SAAQqG,IACT6N,EAAKW,KAAKvX,GAAGy3B,GAAW1uB,GAAG,IAG/BiK,EAAMyf,QAAQzyB,EAAI4W,EAAK3N,KAAK,MAAM,KAE/B,CACV,CAEDwuB,IAAW1uB,GACP,MAAM6Y,EAAM,CAAC,WAcb,OAZA5c,OAAOgC,QAAQ+B,GAAGrG,SAAQoS,IACtB,MAAMsH,EAAMtH,EAAG,GACTxL,EAAMwL,EAAG,GACf,GAAI,SAAWsH,EACf,MAAI,aAAeA,EAAYwF,EAAIrK,KAAK6E,QACxCwF,EAAIrK,KAAK,GAAG6E,MAAQ9S,KAAO,IAG/BsY,EAAIrK,KAAK,KACTqK,EAAIrK,KAAKxO,EAAEuB,MACXsX,EAAIrK,KAAK,aAEFqK,EAAI3Y,KAAK,IACnB,ECtEU,MAAMyuB,WAEjBl5B,UAAuB,yEACvBA,UAAwB,4CAGpBk5B,WAAW5Y,SACd,CAEDtgB,eAAeiS,GACXmO,cAAcgW,eAAe8C,YAAWC,GAAkBD,YAAWE,IAAkB,EAAOnnB,GAC9FmO,cAAcgW,eAAe8C,YAAWC,GAAkBD,YAAWG,IAAkB,EAAMpnB,EAChG,CAODjS,UAAwBgC,GACpB,OAAIwS,EAAMuC,YAAY/U,OACjBwS,EAAMhC,cAAcxQ,KACI,SAAzBA,EAAGG,QAAQm3B,YACXJ,YAAWK,GAAev3B,IAAKA,EAAGiV,UAAUC,IAAI,eAC7ClV,EAAGG,QAAQq3B,WACXx3B,EAAGG,QAAQs3B,UACXz3B,EAAGG,QAAQytB,SACrB,CAMD5vB,UAAwBgC,GACpBA,EAAG7B,GAAK6B,EAAG7B,IAAMkN,KAAKlN,GACtB6B,EAAGG,QAAQm3B,WAAY,EACvB9d,SAASsX,OAAO9wB,EAAIA,EAAI,QAASk3B,YAAWQ,GAASxvB,KAAKlI,GAC7D,CAMDhC,UAAwBgC,GACpBwZ,SAAS2X,kBAAkBnxB,EAC9B,CAODhC,UAAkBgC,GACd,GAAKA,EACL,OAAIA,EAAGG,SAASs3B,UACZz3B,EAAGG,SAASq3B,WACZx3B,EAAGG,SAASytB,OAFiB5tB,EAG1Bk3B,YAAWS,GAAW33B,EAAGqW,cACnC,CAMDrY,UAAgByF,GACZ,MAAMzD,EAAKk3B,YAAWS,GAAWl0B,EAAEhB,QAC7BmrB,EAAS5tB,GAAIG,SAASytB,OACtBN,EAAUttB,GAAIG,SAASq3B,UACvB/0B,EAASy0B,WAAW3J,UAAUvtB,GAC9BmX,EAASnX,GAAIG,SAASs3B,SAC5BP,YAAWU,GAAU53B,EAAIyC,EAAQ0U,GACjC+f,YAAWW,GAAW73B,EAAIyC,EAAQ6qB,GAClC4J,YAAWY,GAAU93B,EAAIyC,EAAQmrB,EACpC,CASD5vB,UAAmBgC,EAAIyC,EAAQiB,GAE3B,OAAQA,GACJ,IAAK,QAKL,IAAK,WAEL,IAAK,WAEL,IAAK,QAEL,IAAK,SAEL,IAAK,YAEL,IAAK,OAEL,IAAK,UAEL,IAAK,OAEL,IAAK,MACD,MApBJ,IAAK,SACD,IAAKjB,EAAQ,MAAO,CAAE2T,KAAM,CAACpW,GAAK+3B,MAAO,IACzC,MAmBJ,IAAK,UACD,MAAO,CAAE3hB,KAAM,GAAI2hB,MAAO,IAGlC,IAAIC,EAAKxlB,EAAMsE,SAASnY,SAASkhB,gBAAiB,MAAMnc,KACxD,MAAM2D,EAAM5E,GAAkB,IAAIiB,IAClC,GAAIjB,EACAu1B,EAAKA,EAAGryB,QAAO3F,GAAMA,EAAG2R,QAAQtK,UAGhC,GADArH,EAAKA,EAAGgW,QAAQ3O,GACR,CACJ,MAAM0wB,EAAQC,EAAGryB,QAAOsyB,GAAKA,EAAExoB,KAAKgE,oBAAsBzT,IAC1D,MAAO,CAAEoW,KAAuB,IAAjB2hB,EAAMx5B,OAAe,CAACyB,GAAM,GAAI+3B,MAAOA,EACzD,CAGL,MAAMG,EAAW1lB,EAAMsE,SAASnY,SAASkhB,gBAAiBxY,GAAK1B,QAAO3F,KAAQA,aAAcyU,uBAC5FujB,EAAKlV,OAAOwM,YAAY4I,EAASvyB,QAAO3F,GAAMA,aAAcgvB,YAAYgJ,GAIxE,MAAM3lB,EAAM6lB,EAASvyB,QAAO3F,GAAMg4B,EAAGr0B,QAAQ3D,GAAM,IAAG2F,QAAO3F,GAAiE,IAA3Dg4B,EAAGryB,QAAOsyB,GAAKA,EAAExoB,KAAKgE,oBAAsBzT,IAAIzB,SAEnH,MAAO,CAAE6X,KAAM3Q,MAAMC,KAAK,IAAIqX,IAAI1K,IAAO0lB,MAAOC,EACnD,CAEDh6B,UAAkBoY,EAAM1S,GACpB,OAAO0S,EAAKzQ,QAAO3F,GAAMk3B,YAAWiB,GAAQn4B,EAAI0D,IACnD,CAED1F,UAAkBoY,GACd,OAAOA,EAAKzQ,QAAO3F,GAAMk3B,YAAWkB,GAAUp4B,IACjD,CAEDhC,UAAmBoY,EAAMiiB,GACrB,OAAOjiB,EAAKzQ,QAAO3F,IAAOq4B,EAAOh2B,SAASrC,IAC7C,CAEDhC,UAAegC,EAAI0D,GACf,OAAOA,EAAK2C,MAAM,KAAKV,QAAOxD,GAAKA,EAAEoE,SAAQD,KAAInE,GAAW,WAANA,EAAiB,MAAQA,IAAGwD,QAAOqT,GAAKhZ,EAAGiV,UAAUqC,SAAS0B,KAAIza,OAAS,CACpI,CAEDP,UAAiBgC,GACb,GAAIA,EAAG2R,QAAQ,2BAA6B3R,EAAG2R,QAAQ,SAAU,OAAO,EAE9E,OADkBV,EAASY,qBAAqB7R,GACrC2R,QAAQ,UAAW,OAC3B,CAED3T,UAAsBgC,GAClB,OAAOA,EAAG2R,QAAQ,eAAiB3R,EAAG2R,QAAQ,sBACjD,CAED3T,UAAcgC,GACV,OAAOA,EAAG2R,QAAQ,QACrB,CAED3T,UAAagC,EAAIyqB,EAAK6N,GAClB9lB,EAAM6E,YAAYrX,EAAIyqB,GAAK,GAC3BjY,EAAM6E,YAAYrX,EAAIs4B,GAAK,EAC9B,CAEDt6B,UAAagC,GACT,MAAMqH,EAAM6vB,YAAWK,GAAev3B,GAAM,GAAK,OACjDk3B,YAAWqB,GAAMv4B,EAAIqH,EAAK,OAC7B,CAEDrJ,UAAagC,GACT,MAAMqH,EAAM6vB,YAAWK,GAAev3B,GAAM,SAAW,OACvDk3B,YAAWqB,GAAMv4B,EAAI,OAAQqH,EAChC,CAEDrJ,UAAea,EAAK6E,GAEhB7E,EAAIuX,KAAKzQ,QAAO3F,GAAMA,EAAGmX,SAAQjV,SAAQlC,GAAMA,EAAGmX,WAElDtY,EAAIuX,KAAOvX,EAAIuX,KAAKzQ,QAAO3F,IAAOA,EAAGmX,SACrC,MAAMf,EAAO8gB,YAAWsB,GAAW35B,EAAIuX,KAAM1S,GAEvC+0B,EAAQvB,YAAWwB,GAAWtiB,GACtB8gB,YAAWyB,GAAYviB,EAAMqiB,GAErCv2B,SAAQlC,GAAMk3B,YAAWxG,GAAM1wB,KACrCy4B,EAAMv2B,SAAQlC,GAAMk3B,YAAWvG,GAAM3wB,IACxC,CAEDhC,gBAAuBgC,GACnBwS,EAAM6E,YAAYrX,EAAI,QAAQ,GAC1Bk3B,YAAW0B,GAAO54B,UAAWyL,EAAOwD,QAAQuD,EAAMqmB,OACtD74B,EAAGD,QACN,CAED/B,UAAea,GACXA,EAAIuX,KAAKlU,SAAQlC,GAAMk3B,YAAW4B,GAAU94B,IAC/C,CAQDhC,UAAiBusB,EAAQ9nB,EAAQmrB,GAE7B,IAAKA,EAAQ,OAEb,MAAMmL,EAASnL,EAAO7rB,cAAciB,WAAW,OACzCoT,EAAO5D,EAAMsE,SAASnY,SAASkhB,gBAAiBpd,GAGhD0Q,EAAO4lB,EAAS,IAAInL,OAAYA,KAAY,sBAAsBA,aAF5DrD,GAAQpqB,SAASkH,KAAO,qBAIpC+O,EAAKlU,SAAQlC,GAAMwS,EAAMyf,QAAQjyB,EAAImT,IACxC,CAQDnV,UAAiBusB,EAAQ9nB,EAAQiB,GAE7B,IAAKwzB,YAAW8B,GAAUt1B,GAAO,OAEjC,MAAM7E,EAAMq4B,YAAW+B,GAAY1O,EAAQ9nB,EAAQiB,GAEnD7E,EAAIk5B,MAAMpyB,QAAO3F,GAAM2P,WAAWC,WAAW5P,EAAGmX,UAASjV,SAAQlC,GAAMA,EAAGmX,OAAOoT,KAEjF2M,YAAWgC,GAAgB3O,EAAQ9nB,EAAQiB,EAAM7E,GACjDq4B,YAAW/f,GAAQtY,EAAK6E,GACxBwzB,YAAWiC,GAAe5O,EAAQ9nB,EAAQiB,EAAM7E,EACnD,CAEDb,UAAuBusB,EAAQ9nB,EAAQiB,EAAM7E,GACzC,OAAOq4B,YAAWkC,GAAiB7O,EAAQ9nB,EAAQiB,EAAM7E,GAAK,EACjE,CAEDb,UAAsBusB,EAAQ9nB,EAAQiB,EAAM7E,GACxC,OAAOq4B,YAAWkC,GAAiB7O,EAAQ9nB,EAAQiB,EAAM7E,GAAK,EACjE,CAEDb,UAAwBusB,EAAQ9nB,EAAQiB,EAAM7E,EAAKw6B,GAC/C,OAAQ31B,GACJ,IAAK,SACD,MACJ,IAAK,WACG21B,EACAx6B,EAAIuX,KAAKzQ,QAAO3F,GAAMA,EAAGiV,UAAUqC,SAAS,wBAAuBpV,SAAQlC,IACvEyF,MAAMC,KAAK1F,EAAGgW,QAAQ,cAAc9L,iBAAiB,wBAChDvE,QAAO2zB,GAAOA,GAAOt5B,GAAMuQ,OAAOpL,IAAIm0B,EAAK,oBAC3Cp3B,SAAQo3B,GAAO9mB,EAAM6E,YAAYiiB,EAAK,QAAQ,IAAO,IAG9D9mB,EAAM6E,YAAYkT,EAAQ,YAAa,MAE3C,MACJ,IAAK,WACG8O,EACAx6B,EAAIuX,KAAOvX,EAAIuX,KAAK9P,KAAIiC,GAAKA,EAAEzI,cAAc,oBAAmB6F,QAAO4C,GAAU,MAALA,KAE5E1J,EAAIuX,KAAKlU,SAAQqG,GAAKA,EAAE0M,UAAUkC,OAAO,UACzCtY,EAAIuX,KAAKzQ,QAAO4C,GAAKA,EAAE0M,UAAUqC,SAAS,UAASpV,SAAQqG,GAAK2uB,YAAWqC,GAAShxB,MAoBnG,CAEDvK,UAAgBusB,GACZ/Q,SAASe,KAAKgQ,EAAQ,KAAM,cAAe9mB,GAAM8mB,EAAOtV,UAAUlV,OAAO,SAC5E,CAQD/B,UAAkBusB,EAAQ9nB,EAAQiB,GAE9B,IAAKwzB,YAAWsC,GAAW91B,GAAO,OAElC,MAAM7E,EAAMq4B,YAAW+B,GAAY1O,EAAQ9nB,EAAQiB,GAMnD,OAJA7E,EAAIk5B,MAAMpyB,QAAO3F,GAAM2P,WAAWC,WAAW5P,EAAGy5B,SAAQv3B,SAAQlC,GAAMA,EAAGy5B,UACzE56B,EAAIk5B,MAAMpyB,QAAO3F,GAAM2P,WAAWC,WAAW5P,EAAGstB,WAAUprB,SAAQlC,GAAMA,EAAGstB,YAGnE5pB,GACJ,IAAK,QACDwzB,YAAWn3B,GAAQlB,EAAK6E,GACxB,MACJ,IAAK,QACL,IAAK,YACL,IAAK,QACDwzB,YAAW/f,GAAQtY,EAAK6E,GAInC,CAED1F,UAAkB8K,GACd,OAAOA,GAAOouB,YAAWwC,GAAer3B,SAASyG,EACpD,CAED9K,UAAiB8K,GACb,OAAOA,GAAOouB,YAAWyC,GAAct3B,SAASyG,EACnD,CAOD9K,iBAAiBgC,GACb,MAAM45B,EAAM55B,GAAIG,SAAS05B,UAAYtpB,OAAOpL,IAAInF,EAAI,QACpD,MAAe,MAAR45B,EAAc,GAAKA,CAC7B,CAOD57B,kBAAkBgC,GACd,OAAOA,GAAIG,SAASq3B,WAAa,EACpC,CAODx5B,iBAAiBgC,GACb,OAAOA,GAAIG,SAASs3B,UAAY,EACnC,CAEDz5B,iBAAiBgC,GACb,OAAOA,GAAIG,SAASytB,QAAU,EACjC,CAOD5vB,iBAAiBgC,GACb,QAAOA,GAAIG,SAASq3B,SACvB,CAODx5B,gBAAgBgC,GACZ,QAAOA,GAAIG,SAASs3B,QACvB,EChYU,MAAMqC,sBAAsBC,2BAGnC/wB,eAAeC,OAAO,kBAAmB6wB,cAAe,CAAE5wB,QAAS,aACnE1E,OAAOC,KAAKq1B,cACf,CAEDlyB,cACIC,OACH,CAEU3J,gCACP,MAAO,CAAC,OACX,CAED0C,yBAAyBhC,EAAMiC,EAAUC,GAExB,SAATlC,GAAiBa,KAAK4iB,KAAKvhB,EAClC,CAEDvB,oBACI,MAAMC,EAAKC,KACND,EAAGrB,IAAIqB,EAAGuJ,aAAa,KAAMsC,KAAKlN,IACvC6hB,EAAajb,MAAMvF,EACtB,CAEDkB,uBACIsf,EAAajgB,OAAON,KACvB,CAEGwQ,YACA,MAAM0D,EAAMqM,EAAaW,SAASlhB,MAClC,OAAO+S,EAAMgF,OAAO7D,EACvB,CAED/P,WAAWlE,EAAM,IACb,IAAKA,EAAK,OACV,MAAMyG,QAAa+a,SAASc,SAAStiB,EAAK,MAAO,MAAM,GACvDD,KAAK2X,MAAMjR,EACd,CAEDiR,MAAMjR,GAEF,IAAKV,MAAMyH,QAAQ/G,GAAO,OAAO,EAEjC,MAAM3G,EAAKC,KAWX,OATAJ,uBAAsB,KAElB,MAAM+W,EAAO,GACbjQ,EAAKjE,SAAQqG,IACT6N,EAAKW,KAAKvX,GAAGy3B,GAAW1uB,GAAG,IAG/BiK,EAAMyf,QAAQzyB,EAAI4W,EAAK3N,KAAK,MAAM,KAE/B,CACV,CAEDwuB,IAAW1uB,GACP,MAAM6Y,EAAM,CAAC,WAab,OAXA5c,OAAOgC,QAAQ+B,GAAGrG,SAAQoS,IACtB,MAAMsH,EAAMtH,EAAG,GACTxL,EAAMwL,EAAG,GACf,GAAI,SAAWsH,EACf,MAAI,aAAeA,EAAYwF,EAAIrK,KAAK6E,QACxCwF,EAAIrK,KAAK,GAAG6E,MAAQ9S,KAAO,IAG/BsY,EAAIrK,KAAKxO,EAAEuB,MACXsX,EAAIrK,KAAK,KAEFqK,EAAI3Y,KAAK,IACnB,EC9EU,MAAMuxB,kBAAkBC,gBAEnCj8B,UAAkB,CAAC,KAAM,QAAS,iBAG9BgL,eAAeC,OAAO,cAAe+wB,UAAW,CAAE9wB,QAAS,SAC3D1E,OAAOC,KAAKu1B,WACZ5b,cAAcgW,eAAe4F,WAAU7C,GAAkB6C,WAAU5C,IACnEhZ,cAAcgW,eAAe4F,WAAU7C,GAAkB6C,WAAU3C,IAAkB,EACxF,CAEDr5B,UAAwBgC,GACpB,OAAOA,aAAci6B,iBAAoBj6B,aAAcg6B,YAAe,CACzE,CAEDh8B,UAAwBgC,GACpBg6B,WAAUE,GAAcl6B,EAC3B,CAEDhC,UAAwBgC,GACpBwZ,SAAS2X,kBAAkBnxB,EAC9B,CAED4H,cACIC,OACH,CAEU3J,gCACP,MAAO,CAAC,OACX,CAEDqB,oBACI,MAAMC,EAAKC,KACND,EAAGrB,IAAIqB,EAAGuJ,aAAa,KAAMsC,KAAKlN,IACvC67B,WAAUE,GAAc16B,EAE3B,CAEDkB,uBAGI8Y,SAAS2X,kBAFE1xB,KAGd,CAEDzB,UAAqBwB,GACjBga,SAASsX,OAAOtxB,EAAIA,EAAI,SAAUw6B,WAAUG,GAAUjyB,KAAK1I,IAC3Dga,SAASsX,OAAOtxB,EAAIA,EAAI,SAAUw6B,WAAUI,GAAUlyB,KAAK1I,IAC3Dga,SAASsX,OAAOtxB,EAAIA,EAAI,QAASw6B,WAAUI,GAAUlyB,KAAK1I,GAC7D,CAODxB,UAAiByF,GAEb,MAAMzD,EAAKyD,EAAE6c,eAAe5O,QACtBgc,EAAS1tB,GAAIG,QAAQutB,QAAUjqB,EAAEtE,OAAOuuB,QAAU1tB,GAAI0D,KAC5D,IAAKs2B,WAAUK,GAASh4B,SAASqrB,GAAS,OAE1ClU,SAASE,QAAQjW,GACjB,MAAMjE,EAAKC,KAEX,OAAQiuB,GACJ,IAAK,QACDluB,EAAG86B,QACH,MACJ,IAAK,KACL,IAAK,SACDN,WAAUG,GAAU12B,EAAGjE,GAGlC,CAMDxB,UAAiByF,EAAGkQ,GAChB6F,SAASE,QAAQjW,GACjB,MAAMjE,EAAKmU,GAAOlU,KACZoQ,EAAUrQ,EAAGqY,iBAAmBrY,EAAGqQ,QACzC,IAAKA,EAAS,OAAOrQ,EAAG+6B,iBACxB,MAEMp0B,EAAO,CAAEzC,KADFmM,EAAU,SAAW,UACP1J,KAFfqM,EAAMgoB,SAASh7B,GAEW+qB,OAAQ9mB,EAAGg3B,MAAO5qB,GACxD2J,SAAS6B,KAAK7b,EAAI,OAAQ2G,GAAM,GAAM,EACzC,CAEG0J,cACA,OAEyC,IAFlC2C,EAAMsE,SAASrX,KAAM,yBACvB6G,KAAItG,GAAMA,EAAG6X,kBACblS,QAAOxD,IAAW,IAANA,IAAa5D,MACjC,CAEGm8B,eACA,OAAOV,WAAUU,GAAUj7B,KAC9B,CAEGk7B,mBACA,OAAOX,WAAUW,GAAcl7B,KAClC,CAEGm7B,kBACA,OAAOZ,WAAUY,GAAan7B,KACjC,CAEDzB,UAAiB2V,GACb,OAAOnB,EAAMqE,MAAMlD,EAAK,wBAC3B,CAED3V,UAAqB2V,GACjB,OAAOqmB,WAAU5Z,GAAMzM,EAAK,SAC/B,CAED3V,UAAoB2V,GAChB,OAAOqmB,WAAU5Z,GAAMzM,EAAK,QAC/B,CAED3V,UAAa2V,EAAK/U,EAAO,IACrB,OAAO4T,EAAMqE,MAAMlD,EAAK,uBAAuB/U,MAClD,ECvHU,MAAMi8B,mBAAmBC,iBAEpC98B,UAAkB,gBAElBA,UAAmB,CACf2N,EAAG,SACHS,EAAG,eACHqd,EAAG,SACHtN,EAAG,SACH3D,EAAG,SACH,IAAK,YACL,IAAK,eACLuiB,EAAK,MAGTC,KAAa,EACbC,IAAS,UAGLjyB,eAAeC,OAAO,eAAgB4xB,WAAY,CAAE3xB,QAAS,UAC7D1E,OAAOC,KAAKo2B,WACf,CAEDjzB,cACIC,OACH,CAEU3J,gCACP,MAAO,CAAC,OAAQ,UACnB,CAEDqB,oBACI,MAAMC,EAAKC,KACND,EAAGrB,IAAIqB,EAAGuJ,aAAa,KAAMsC,KAAKlN,IACT,IAA1BqB,EAAG07B,YAAY38B,QACXiB,EAAG27B,OAAM37B,EAAG07B,YAAc17B,EAAG27B,MAErC37B,GAAG47B,KACH57B,GAAG06B,KACHla,EAAajb,MAAMvF,GACnBkP,YAAW,KACPlP,GAAG67B,IAAe,GACnB,IACN,CAED36B,uBAEIsf,EAAajgB,OADFN,MAEX+Z,SAAS2X,kBAFE1xB,KAGd,CAEDmB,yBAAyBhC,EAAMiC,EAAUC,GACxB,SAATlC,GAA4B,YAATA,GAAoBa,MAAK27B,IACnD,CAEGnrB,YACA,MAAM0D,EAAMqM,EAAaW,SAASlhB,MAClC,OAAO+S,EAAMgF,OAAO7D,EACvB,CAEGyC,WACA,MACMA,EAAO7F,OAAOpL,IADT1F,KACiB,QAC5B,OAAO+S,EAAMkE,QAFFjX,KAEawQ,MAAOmG,EAClC,CAEGzQ,aACA,MACMA,EAAS4K,OAAOpL,IADX1F,KACmB,eAC9B,OAAO+S,EAAMkE,QAFFjX,KAEawQ,MAAOtK,EAClC,CAEGw1B,WACA,OAAO5qB,OAAOpL,IAAI1F,KAAM,OAAQ,GACnC,CAEG67B,aACA,OAAO/qB,OAAOpL,IAAI1F,KAAM,SAAU,GACrC,CAEG87B,gBACA,MACMC,EADK/7B,KACM07B,KAAK90B,MAAM,IAEtB40B,EAAQ,GACd,IAAIQ,EAAM,EAUV,OATAD,EAAMt5B,SAAQ,CAACC,EAAG3D,KACd,GAAIy8B,EAAMA,EAAM18B,OAAS,KAAO4D,EAAG,OAAOs5B,IACtCA,EAAM,GAAGR,EAAMlkB,KAAK,MAAM0kB,MAC9BA,EAAM,EACFZ,YAAWa,GAAS/3B,QAAQxB,IAAM,GAAG84B,EAAMlkB,KAAK,MACpDkkB,EAAMlkB,KAAK5U,EAAE,IAEbs5B,EAAM,GAAGR,EAAMlkB,KAAK,MAAM0kB,MAEvBR,EAAMxyB,KAAK,GACrB,CAEGkzB,eACA,OAAOl8B,KAAKoE,aAAa,WAC5B,CAEG+3B,iBACA,OAAOn8B,KAAKoE,aAAa,aAC5B,CAKGg4B,aACA,OAAOp8B,KAAKoE,aAAa,SAC5B,CAEDu3B,MACI,MAAM57B,EAAKC,KACX,GAAID,EAAGkN,QAAQnO,OAAS,EAAG,OAC3B,GAAuB,IAAnBiB,EAAG27B,KAAK58B,OAAc,OAE1B,MAAMi9B,EAAQh8B,EAAG27B,KAAK90B,MAAM,IACtB40B,EAAQ,CAAC,KAEf,IAAIQ,EAAM,EACVD,EAAMt5B,SAAQ,CAACC,EAAG3D,KACd,MAAM2d,EAAI0e,YAAWiB,GAAU35B,EAAEJ,eACjC,OAAKoa,GAOLqf,EAAMh9B,GAAK,IAAI+D,OAAO4Z,EAAG,KAEJ,IAAjB8e,EAAM18B,OAAqB08B,EAAMlkB,KAAKoF,EAAEoO,QAExC0Q,EAAMA,EAAM18B,OAAS,KAAO4d,EAAEoO,OAAekR,KAE7CA,EAAM,GAAGR,EAAMlkB,KAAK,MAAM0kB,MAC9BA,EAAM,OACNR,EAAMlkB,KAAKoF,EAAEoO,WAdLkR,EAAM,GAAGR,EAAMlkB,KAAK,MAAM0kB,MAC9BA,EAAM,EACFZ,YAAWa,GAAS/3B,QAAQxB,IAAM,GAAG84B,EAAMlkB,KAAK,MAC7CkkB,EAAMlkB,KAAK5U,GAWF,IAEpBs5B,EAAM,GAAGR,EAAMlkB,KAAK,MAAM0kB,MAC9BR,EAAMlkB,KAAK,KAEXvX,GAAGy7B,GAASO,EACZh8B,EAAGkN,QAAUuuB,EAAMxyB,KAAK,IACxBjJ,EAAGu8B,UAAYv8B,EAAG27B,KAAK58B,MAC1B,CAED27B,MACI,MAAM16B,EAAKC,KACX+Z,SAASsX,OAAOtxB,EAAIA,EAAI,UAAWA,GAAGma,EAAWzR,KAAK1I,IACtDga,SAASsX,OAAOtxB,EAAIA,EAAI,QAASA,GAAGw8B,GAAS9zB,KAAK1I,IAClDga,SAASsX,OAAOtxB,EAAIA,EAAI,WAAYA,GAAGy8B,GAAY/zB,KAAK1I,IACxDga,SAASsX,OAAOtxB,EAAIA,EAAI,QAASA,GAAG08B,GAASh0B,KAAK1I,IAClDga,SAASsX,OAAOtxB,EAAIA,EAAI,SAAUA,GAAG28B,GAAUj0B,KAAK1I,IACpDga,SAASsX,OAAOtxB,EAAIA,EAAI,QAASA,GAAG48B,GAASl0B,KAAK1I,IAClDga,SAASsX,OAAOtxB,EAAIA,EAAI,OAAQA,GAAG68B,GAAQn0B,KAAK1I,IAChDga,SAASsX,OAAOtxB,EAAIA,EAAI,QAASA,GAAGk4B,GAASxvB,KAAK1I,IAClDH,uBAAsB,KACLG,EAAG4W,OAEhBoD,SAASsX,OAAOtxB,EAAIA,EAAI,SAAUA,GAAG67B,GAAcnzB,KAAK1I,IACxDga,SAASsX,OAAOtxB,EAAIA,EAAGmG,OAAQ,SAAUnG,GAAG88B,GAAWp0B,KAAK1I,IAAI,GAEvE,CAED+8B,IAASv8B,EAAI4b,EAAM,GAAI/Z,EAAQ,IAC3B,MAAMsE,EAAOoK,OAAOpL,IAAInF,EAAI,QAAQ4b,IAAO,IAAIvV,MAAM,SAC/Cm2B,EAAU36B,EAAMtD,OAAS,GAAK4H,EAAK9D,SAASR,GACpC2Q,EAAMiqB,cAAcz8B,EAAGoU,SAEjC7D,OAAO4G,OAAOnX,EAAI,YAAaw8B,GAE/BA,EAAUhqB,EAAMme,KAAK3wB,GAAMwS,EAAMke,KAAK1wB,GAE1CwS,EAAMsE,SAAS9W,EAAGgW,QAAQ,QAAS,yBAAyB9T,SAAQlC,GAAMuQ,OAAOvL,IAAIhF,EAAI,eAAew8B,GAAU,OACrH,CAEDE,WACI,MAAMl9B,EAAKC,KACL2W,EAAO5W,EAAG4W,KAChB,IAAKA,EAAM,OAAO,EAClB,IAAK5W,EAAG87B,OAAQ,OAAO,EACvB,IAAKllB,EAAKtW,cAAc,UAAW,OAAO,EAE1C,OAAc,MADFsW,EAAKtW,cAAc,iBAAiBN,EAAGqC,UAEtD,CAMDw5B,IAAc53B,GACV,MAAMjE,EAAKC,KACLkU,EAAMnU,EAAGyQ,MACf,IAAImK,EAAM5H,EAAMqE,MAAMrX,EAAG4W,KAAM,iBAAiB5W,EAAGqC,WAC/C86B,GAAQ,EACPviB,IACDA,EAAM5a,EAAG4W,MAAMtW,cAAc,UAC7B68B,GAAQ,GAGZ,MAAM99B,EAAMub,GAAKja,SAAU,GAC3BqE,OAAOgC,QAAQ3H,GAAKqD,SAAQ06B,IACxB,MAAM9zB,EAAM6zB,EAAQ,GAAKC,EAAE,GACrBhhB,EAAMghB,EAAE,GAEd,GADAp9B,EAAGuJ,aAAa,QAAQ6S,IAAOghB,EAAE,IACrB,OAARhhB,GAAwB,UAARA,EAAiB,OAErC,MAAMjW,EAAS,SAASiW,gBAAkBA,QAC9BnW,MAAMC,KAAK8M,EAAMsE,SAASnD,EAAKhO,IACvCA,QAAO3F,GAAqB,WAAfA,EAAGoU,UACfzO,QAAO3F,GAAMA,IAAOR,IACpBmG,QAAO3F,GAAwC,IAAlCuQ,OAAOpL,IAAInF,EAAI,QAAQzB,SACpC2D,SAAQlC,GAAMR,GAAG+8B,GAASv8B,EAAI4b,EAAK9S,IAAK,GAEpD,CAMDwzB,IAAW74B,GACP,MAAMjE,EAAKC,KACL2W,EAAO5W,EAAG4W,KAChB5W,EAAGqC,MAAQ,GACX,MAAMg7B,EAAYtsB,OAAOpL,IAAI3F,EAAGmG,OAAQ,cACxC6M,EAAMsE,SAASV,EAAM,UAAUlU,SAAQlC,GAAMuQ,OAAOvL,IAAIhF,EAAI,YAAY,KACxE,MAAM2F,EAASk3B,EAAY,sBAAsBA,MAAgB,mBAAmBp5B,EAAEhB,OAAOZ,UAC7F2Q,EAAMsE,SAASV,EAAMzQ,GAAQzD,SAAQlC,GAAMuQ,OAAOvL,IAAIhF,EAAI,aAC7D,CAED03B,IAASj0B,GACL,MAAMjE,EAAKC,KACPD,EAAGm8B,UAAU16B,UAAU67B,UAAUC,UAAUv9B,EAAGqC,OAC9CrC,EAAGo8B,YAAYp8B,EAAGw9B,QACzB,CAEDX,IAAQ54B,GACJ,MAAMjE,EAAKC,KACPD,EAAGy9B,UAAUz9B,EAAG+6B,iBACf/6B,EAAGk9B,YAAYljB,SAAS6B,KAAK7b,EAAI,SAAU,CAAEqK,IAAI,EAAO0gB,OAAQ9mB,GACxE,CAED24B,IAAS34B,GACL+V,SAASE,QAAQjW,GACjB,MAAMqF,EAAMrF,EAAEy5B,cAAcC,QAAQ,QACzB19B,KACRoC,MADQpC,KACG29B,WAAWt0B,EAC5B,CAEDu0B,IAAU55B,GACN,OAAOhE,KAAKo8B,QAAoB,UAAVp4B,EAAEmY,KAAmBnY,EAAE8yB,QAAU9yB,EAAEqW,UAA0B,aAAdra,KAAKiE,IAC7E,CAEDs4B,IAASv4B,GACL,MAAMjE,EAAKC,KACG,UAAVgE,EAAEmY,KAAmBpc,GAAGw7B,KACxBx7B,EAAGkE,KAAO,WAEjB,CAEDiW,GAAWlW,GAEP,MAAMjE,EAAKC,KAOX,GALID,GAAG69B,GAAU55B,KACbjE,GAAGw7B,IAAa,EAChBx7B,EAAGkE,KAAO,SAGTlE,EAAG27B,KAAM,OAEd,MAAM3b,EAAMhgB,EAAGqC,MAAMwE,MAAM,IAC3B,IAAIi3B,EAAO99B,EAAG+9B,eACVC,EAAOh+B,EAAGi+B,aAEVC,GAAS,EACTjT,EAAM6S,EAkBV,GAhBc,WAAV75B,EAAEmY,MACF8hB,GAAS,EACTle,EAAIiL,GAAOjrB,EAAG27B,KAAK1Q,IAGT,cAAVhnB,EAAEmY,MACF8hB,GAAS,EACLJ,IAASE,GACThe,EAAIiL,EAAM,GAAKjrB,EAAG27B,KAAK1Q,EAAM,GAC7BA,EAAM6S,EAAO,GAEb7S,EAAM6S,GAKVA,IAASE,GAAyB,IAAjB/5B,EAAEmY,IAAIrd,OAEvB,IADAm/B,GAAS,EACFJ,EAAOE,GACVhe,EAAI8d,GAAQ99B,EAAG27B,KAAKmC,GACpBA,IAIR,OAAKI,GAELl+B,EAAGqC,MAAQrC,EAAG49B,WAAW5d,EAAI/W,KAAK,KAClCjJ,EAAGm+B,kBAAkBlT,EAAKA,GACnBjR,SAASE,QAAQjW,SAJxB,CAMH,CAEDw4B,IAAYx4B,GACR,MAAMjE,EAAKC,KACX,IAAKD,EAAG27B,KAAM,OAEd,MAAM3b,EAAMhgB,EAAGqC,MAAMwE,MAAM,IAC3B,IAAIokB,EAAMjrB,EAAG+9B,eACTtC,EAAQz7B,GAAGy7B,GAAOhxB,MAAMwgB,GACxBmT,GAAW,EAEf3C,EAAM4C,OAAM1C,GACJA,aAAgB54B,QACZ44B,EAAK/5B,KAAKqC,EAAEmY,OACZ4D,EAAIiL,GAAOhnB,EAAEmY,IACbgiB,GAAW,GAEfpkB,SAASE,QAAQjW,IACV,IAEP+b,EAAIiL,GAAO0Q,EAEf1Q,KACO,KAGPmT,IAEJ3C,EAAQz7B,GAAGy7B,GAAOhxB,MAAMwgB,EAAM,GAC9BwQ,EAAM4C,OAAM1C,KACJA,aAAgB54B,UACpBkoB,KACO,KAIXjrB,EAAGqC,MAAQrC,EAAG49B,WAAW5d,EAAI/W,KAAK,KAClCjJ,EAAGm+B,kBAAkBlT,EAAM,EAAGA,EAAM,GACpCjR,SAASE,QAAQjW,GACpB,CAED04B,IAAU14B,GACN,MAAMjE,EAAKC,KACK,UAAZD,EAAGkE,OACPlE,EAAGs+B,MAAQt+B,EAAGqC,MACjB,CAEDq6B,IAASz4B,GACL,MAAMjE,EAAKC,KACX,MAAgB,WAAZD,EAAGkE,KAA0BlE,GAAGu+B,GAAet6B,GAC/CjE,EAAG27B,UAAP,EACgB,SAAZ37B,EAAGkE,KAAwBlE,GAAGw+B,GAAav6B,QAA/C,CACH,CAEDs6B,IAAet6B,GACX,MAAMjE,EAAKC,KACPD,EAAGu8B,UAAY,GAAKv8B,EAAGqC,MAAMtD,OAASiB,EAAGu8B,YACzCv8B,EAAGqC,MAAQrC,EAAGqC,MAAMo8B,UAAU,EAAGz+B,EAAGu8B,WAE3C,CAEDiC,IAAav6B,GACT,MAAMjE,EAAKC,KAEXD,EAAGqC,MAAQrC,GAAG0+B,GAAY1+B,EAAGqC,OAExBrC,EAAGqY,iBACJrY,EAAG+6B,gBAEV,CAED6C,WAAWv7B,EAAQ,IACf,MAAMrC,EAAKC,KACX,IAAKD,EAAG27B,KAAM,OAAOt5B,EAErB,MAAM25B,EAAQ35B,EAAMwE,MAAM,IAEpBmZ,EAAM,GAGZ,IAAIib,GAAQ,EAsBZ,OApBAj7B,EAAG27B,KAAK90B,MAAM,IAAIw3B,OAAM,CAAC17B,EAAG3D,KACxB,MAAM2/B,EAAM3+B,GAAGy7B,GAAOz8B,GAQtB,GANIiN,EAAOwC,SAASkwB,KAChB3e,EAAIzI,KAAKonB,GACL3C,EAAM,KAAO2C,GAAK3C,EAAM9pB,SAI5BysB,aAAe57B,OAAQ,CACvB47B,EAAI7J,UAAY,EAChB,MAAM2D,EAAIuD,EAAM9pB,QAChB+oB,EAAQxC,GAAKkG,EAAI/8B,KAAK62B,GACtBzY,EAAIzI,KAAK0jB,EAAQxC,EAAI91B,EAExB,CAED,OAAO,CAAI,IAGR3C,GAAG0+B,GAAY1e,EAAI/W,KAAK,IAClC,CAEDy1B,IAAYr8B,EAAQ,IAChB,MAAMyE,EAAM2K,EAASyG,WAAWjY,KAAM,kBAEtC,OADI6G,IAAKzE,EAAQ4J,EAAOkM,cAAcrR,EAAIzE,MAAOA,IAC1CA,CACV,ECpaU,MAAMu8B,qBAAqBC,kBAEtCrgC,sBAAwB,kBACxBA,wBAA0B,2BAGtBgL,eAAeC,OAAO,iBAAkBm1B,aAAc,CAAEl1B,QAAS,MACjE1E,OAAOC,KAAK25B,cACZhgB,cAAcgW,eAAegK,cAAajH,GAAkBiH,cAAahH,IACzEhZ,cAAcgW,eAAegK,cAAajH,GAAkBiH,cAAa/G,IAAkB,EAC9F,CAEDr5B,UAAwBgC,GACpB,IAAI6P,EAAU7P,aAAcjC,aAAwC,mBAAzBwS,OAAOpL,IAAInF,EAAI,MAC1D,GAAI6P,EAAS,CACT,MAAMyuB,EAAKt+B,EAAGiV,UACdpF,GAAW7P,EAAG6D,aAAa,YAAcy6B,EAAGhnB,SAAS,aAAegnB,EAAGhnB,SAAS,mBAEnF,CACD,OAAOzH,CACV,CAED7R,UAAwBgC,GACpBo+B,cAAalE,GAAcl6B,EAC9B,CAEDhC,UAAwBgC,GACpBwZ,SAAS2X,kBAAkBnxB,EAC9B,CAED4H,cACIC,OACH,CAEDtI,oBACI,MAAMC,EAAKC,KACND,EAAGrB,IAAIqB,EAAGuJ,aAAa,KAAMsC,KAAKlN,IACvCigC,cAAalE,GAAc16B,EAE9B,CAEDkB,uBAEI8Y,SAAS2X,kBAAkB1xB,KAC9B,CAEDzB,UAAqB2V,GACjB6F,SAASsX,OAAOnd,EAAKA,EAAK,QAASyqB,cAAa1G,GAASxvB,KAAKyL,IAC9D6F,SAASsX,OAAOnd,EAAKA,EAAK,UAAWyqB,cAAazkB,EAAWzR,KAAKyL,GACrE,CAED3V,SAAkByF,EAAGkQ,GACjB,OAAQlQ,EAAEmW,MACN,IAAK,QACL,IAAK,QACDwkB,cAAa1G,GAASj0B,EAAGhE,MAGpC,CAEDzB,UAAgByF,EAAGkQ,GACf,MAAMnU,EAAKmU,GAAOlU,KAElB,GADyC,UAA1BD,EAAGW,QAAQ2tB,WACd,OAAOsQ,cAAaG,GAAS96B,EAAGjE,GAC5C,MAAMg/B,EAAMJ,cAAaI,GAAKh/B,GACxB4W,EAAOgoB,cAAahoB,EAAM5W,GAC1Bi/B,EAAQL,cAAaK,GAAOj/B,GAC5Bk/B,EAAYN,cAAaM,GAAWl/B,GAC1CH,uBAAsB,KACd+W,GAAMA,EAAKlM,iBAAiB,oBAAoBhI,SAAQlC,GAAMwS,EAAM6E,YAAYrX,EAAI,UAAU,KAC9Fw+B,GAAKA,EAAIt0B,iBAAiB,aAAahI,SAAQlC,GAAMwS,EAAM6E,YAAYrX,EAAI,UAAU,KACrFy+B,GAAOA,EAAMv0B,iBAAiB,aAAahI,SAAQlC,GAAMwS,EAAM6E,YAAYrX,EAAI,eAAe,KAClGwS,EAAM6E,YAAY7X,EAAI,UAAU,GAChCgT,EAAM6E,YAAYqnB,EAAW,eAAe,GAC5CN,cAAaG,GAAS96B,EAAGjE,EAAG,GAGnC,CAEDxB,UAAgByF,EAAGzD,GACf,MAAM2T,EAAMyqB,cAAanuB,GAAOjQ,GAC1BnB,EAAM,CAAE6E,KAAM,SAAUyC,KAAMnG,EAAGG,QAASoqB,OAAQ9mB,GACxD+V,SAAS6B,KAAK1H,EAAK,SAAU9U,GAAK,GAAM,GAAM,EACjD,CAEDb,SAAa2V,GACT,OAAOA,EAAIqC,QAAQ,cACtB,CAEDhY,UAAY2V,GACR,OAAOA,EAAIqC,QAAQ,OACtB,CAEDhY,UAAc2V,GACV,MAAMgrB,EAAOP,cAAaM,GAAW/qB,GACrC,OAAOgrB,EAAOA,EAAK3oB,QAAQ,gBAAkB,IAChD,CAEDhY,UAAkB2V,GACd,MAAM6qB,EAAMJ,cAAaI,GAAK7qB,GACxBirB,EAAQjrB,GAAKxT,QAAQ05B,SAC3B,OAAO+E,EAAQR,cAAanuB,GAAOuuB,GAAK1+B,cAAc8+B,GAAS,IAClE,CAED5gC,UAAc2V,GACV,MAAMkC,EAASmK,EAAaW,SAAShN,GACrC,OAAOnB,EAAMgF,OAAO3B,EACvB,ECpHU,MAAMgpB,mBAAmBC,iBAEpCv/B,oBACI,MAAMC,EAAKC,KACND,EAAGrB,KAAIqB,EAAGrB,GAAKkN,KAAKlN,IACzBqb,SAASsX,OAAOtxB,EAAIA,EAAI,UAAWA,GAAGma,EAAWzR,KAAK1I,GACzD,CAEDkB,uBACI8Y,SAAS2X,kBAAkB1xB,KAC9B,CAEDka,GAAWlW,GAEP,MAAMkgB,EAAMwS,gBAAgBC,KAAKzyB,QAAQF,EAAEmW,MAC3C,GAAI+J,EAAM,EAAG,OACbnK,SAASE,QAAQjW,GAEjB,MAAMjE,EAAKC,KAEX,IAAIO,EAAKR,GAAGm/B,GACZ,OAAK3+B,EAED2jB,EAAM,EAAUwS,gBAAgBnnB,MAAMxP,GAAGiD,GAAQzC,GAAKyD,QAEtDjE,GAAGu/B,GAAW/+B,EAAI2jB,KAGtB3jB,EAAKR,GAAG+L,GAAMvL,EAAI2jB,GAClBnkB,GAAGiD,GAAQzC,IAAK02B,eARhB,CAUH,CAEDj0B,IAAQzC,GACJ,OAAOA,GAAIF,cAAc0S,EAAM8jB,gBAClC,CAED/qB,IAAMvL,EAAI2jB,GACN,MAAM6S,EAAML,gBAAgBM,SAAS9S,GAC/BvN,EAAO3Q,MAAMC,KAAKjG,KAAKsU,UAAUpO,QAAO3F,GAAMA,EAAG2R,QAAQ,iCAC/D,IAAInT,EAAI4X,EAAKzS,QAAQ3D,GAAMw2B,EAG3B,OAFAh4B,EAAIA,GAAK4X,EAAK7X,OAAS,EAAIC,EAC3BA,EAAIA,EAAI,EAAI4X,EAAK7X,OAAS,EAAIC,EACvB4X,EAAK5X,EACf,CAEGmgC,SACA,MAAM3+B,EAAKwS,EAAMC,cACjB,MAAuB,OAAfzS,EAAGoU,QAAoBpU,EAAKA,EAAGgW,QAAQ,KAClD,CAEGgpB,gBACA,OAAOv/B,KAAKkS,QAAQ,WACvB,CAEDotB,IAAW/+B,EAAI2jB,GACX,GAAIA,EAAM,EAAG,OAAO,EACpB,MAAM6S,EAAML,gBAAgBM,SAAS9S,GACrC,IAAIsb,EAAUj/B,EAAGF,cAAc,aAAeL,KAC9C,IAAKw/B,EAAQttB,QAAQ,YAAa,OAAO,EACzC,MAAMklB,EAAQprB,OAAOkF,OAAOsuB,EAAQ9+B,QAAQ02B,OACtCqI,EAAMzzB,OAAOkF,OAAOsuB,EAAQ9+B,QAAQ++B,KACpCC,EAAQtI,GAASL,EAAM,GAAO0I,GAAO1I,EAAM,EAIjD,OAHAhkB,EAAM6E,YAAY4nB,EAAS,OAAQE,GACnCF,EAAUE,EAAOF,EAAUA,EAAQ5oB,cACnC4oB,EAAQn/B,cAAc0S,EAAM8jB,kBAAkBI,SACvC,CACV,QAGG1tB,eAAeC,OAAO,YAAa41B,WAAY,CAAE31B,QAAS,OAC1D1E,OAAOC,KAAKo6B,WACf,ECjEU,MAAMO,qBAAqBpQ,UAEtC7wB,GAAM,EAEKD,gCACP,MAAO,CAAC,WACX,CAED+0B,iBAAiBr0B,EAAO,GAAIm0B,EAAS,GAAIC,EAAS,IAC9C,MAAMxzB,EAAKC,KACXD,EAAGs3B,OACHt3B,EAAGq3B,QACHr3B,GAAG6/B,IACN,CAED/N,UACIzpB,MAAMypB,UACK7xB,MACR4/B,KADQ5/B,KAERo3B,OACN,CAEDn2B,uBACIjB,KAAKq3B,MACR,CAEDuI,MACI,MAAM7/B,EAAKC,KACLkoB,EAAO,IAAIrkB,KACXkH,EAAMmd,EAAK2X,mBAAmB9/B,EAAGuN,QAGvC,OAFAyF,EAAMyf,QAAQzyB,EAAGiQ,KAAMjF,GACvBgP,SAAS6B,KAAK7b,EAAI,OAAQ,CAAEmoB,SAAQ,GAAM,GACnC,CACV,CAEDkP,QACI,MAAMr3B,EAAKC,KACXD,GAAGrB,EAAMqB,EAAG8yB,SAAW,EAAItqB,YAAYxI,GAAG6/B,GAAQn3B,KAAK1I,GAAmB,IAAdA,EAAG8yB,UAAmB9yB,GAAG6/B,IACxF,CAEDvI,OACI3uB,cAAc1I,MAAKtB,EACtB,CAEGuuB,aACA,OAAO,CACV,CAEG4F,eACA,OAAO/hB,OAAOgvB,SAAS9/B,KAAM,WAAY,EAC5C,CAEG6yB,aAASxpB,EAAM,IACf,OAAOyH,OAAOivB,SAAS//B,KAAM,WAAYqJ,EAC5C,CAEGiE,aACA,OAAOwD,OAAOpL,IAAI1F,KAAM,SAAUgM,EAAOsB,OAC5C,CAEGA,WAAOjE,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACrC,QAGGE,eAAeC,OAAO,iBAAkBm2B,cACxC56B,OAAOC,KAAK26B,aACf,EC9CU,MAAMK,qBAAqB1hC,YAEtCC,0BAA4B,CAAC,QAAS,SAAU,UAEhDG,GAAM,EAENoB,oBACIE,MAAK4/B,IACR,CAEDz+B,yBAAyBhC,EAAO,GAAIm0B,EAAS,GAAIC,EAAS,IACtDvzB,MAAK4/B,IACR,CAEDA,MACI,MAAM7/B,EAAKC,KACPD,GAAGrB,EAAM,IACbqB,GAAGrB,EAAMuQ,YAAW,KAChB8D,EAAMyf,QAAQzyB,EAAIA,EAAGghB,QACrBhhB,GAAGrB,EAAM,CAAC,GACX,IACN,CAEGqiB,aACA,MAAMhhB,EAAKC,KACLqJ,EAAMtJ,EAAGqC,MACf,OAAIrC,EAAGiO,OAAe3E,EAAI2E,OAAOjO,EAAGiO,QAC7B,IAAI2a,KAAKsX,eAAelgC,EAAGuN,OAAQvN,EAAGW,SAASsN,OAAO3E,EAChE,CAEG2E,aACA,OAAO8C,OAAOpL,IAAI1F,KAAM,SAC3B,CAEGgO,WAAO3E,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACrC,CAEGjH,YACA,MACM0G,EAAIjF,KAAKgK,MAAMiD,OAAOpL,IADjB1F,KACyB,QAAS,IAAI6D,OAC3CqkB,EAAO,IAAItD,OAAO9b,GAExB,OADAof,EAAK5a,OAHMtN,KAGMsN,OACV4a,CACV,CAEG9lB,UAAMiH,EAAM,IACZyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EAC7B,CAEGiE,aACA,OAAOwD,OAAOpL,IAAI1F,KAAM,SAAUwB,UAAU8L,OAC/C,CAEGA,WAAOjE,EAAM,IACbyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EAC9B,QAGGE,eAAeC,OAAO,iBAAkBw2B,cACxCj7B,OAAOC,KAAKg7B,aACf,ECtFU,MAAME,qBAAqB5hC,YAEtCC,0BAA4B,CAAC,UAE7BuB,oBACIE,MAAK4/B,IACR,CAEDz+B,yBAAyBhC,EAAO,GAAIm0B,EAAS,GAAIC,EAAS,IACtDvzB,MAAK4/B,IACR,CAEDA,MACI7sB,EAAMyf,QAAQxyB,KAAMA,KAAKoC,MAC5B,CAEGA,YACA,OAAOpC,KAAKmgC,QAAUngC,KAAK0oB,MAC9B,CAEGyX,cACA,OAAO,IAAIt8B,MAAO4hB,aACrB,CAEGiD,aACA,OAAO5X,OAAOgvB,SAAS9/B,KAAM,SAAU,EAC1C,CAEG0oB,WAAOrf,EAAM,KACbyH,OAAOivB,SAAS//B,KAAM,SAAUqJ,EACnC,QAGGE,eAAeC,OAAO,iBAAkB02B,cACxCn7B,OAAOC,KAAKk7B,aACf,EC/BU,MAAME,yBAAyB9hC,YAE1CC,0BAA4B,CAAC,QAAS,SAAU,YAEhDG,GAAM,EAENoB,oBACIE,MAAK4/B,IACR,CAEDz+B,yBAAyBhC,EAAO,GAAIm0B,EAAS,GAAIC,EAAS,IACtDvzB,MAAK4/B,IACR,CAEDA,MACI,MAAM7/B,EAAKC,KACPD,GAAGrB,EAAM,IACbqB,GAAGrB,EAAMuQ,YAAW,KAChB8D,EAAMyf,QAAQzyB,EAAIA,EAAGiO,QACrBjO,GAAGrB,EAAM,CAAC,GACX,IACN,CAEG2hC,SAEA,OAAOt7B,OAAO4S,MADH3X,KACYU,QAAS,CAAE0E,MAAO,WAAYk7B,SAD1CtgC,KACuDsgC,UACrE,CAEGtyB,aACA,MAAMjO,EAAKC,KACX,OAAO,IAAI2oB,KAAK4X,aAAaxgC,EAAGuN,OAAQvN,GAAGsgC,IAAUryB,OAAOjO,EAAGqC,MAClE,CAEGA,YACA,OAAO0O,OAAOgvB,SAAS9/B,KAAM,QAAS,EACzC,CAEGoC,UAAMiH,EAAM,IACZyH,OAAOivB,SAAS//B,KAAM,QAASqJ,EAClC,CAEGiE,aACA,OAAOwD,OAAOpL,IAAI1F,KAAM,SAAUwB,UAAU+L,SAC/C,CAEGD,WAAOjE,EAAM,IACbyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EAC9B,CAEGi3B,eACA,OAAOxvB,OAAOpL,IAAI1F,KAAM,WAAY,GACvC,CAEGsgC,aAASj3B,EAAM,IACfyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EAChC,QAGGE,eAAeC,OAAO,qBAAsB42B,kBAC5Cr7B,OAAOC,KAAKo7B,iBACf,ECxDU,MAAMI,oBAAoBjR,iBAGrChmB,eAAeC,OAAO,eAAgBg3B,aACtCz7B,OAAOC,KAAKw7B,YACb,CAEU/hC,gCAET,OAAO8wB,UAAUkR,kBADH,CAAC,MAAO,WAAY,aAAc,WAAY,QAE7D,CAEDn/B,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAErD,MAAMtB,EAAKC,KAEX,GAAa,SAATb,EAAiB,OAAOY,EAAG6iB,KAAKvhB,GAGpC,IAAIuG,EAAM,KAEV,OAAQzI,GACN,IAAK,MACHyI,EAAM,aACN,MACF,IAAK,WACHA,EAAM,kBACN,MACF,IAAK,WACHA,EAAM,oBACN,MACF,IAAK,WACHA,EAAM,sBAINA,GACF7H,EAAGsX,SAASzP,GAAKnF,SAAQlC,IACvBwS,EAAM6E,YAAYrX,EAAIa,GAAU,GAChC2R,EAAM6E,YAAYrX,EAAIc,GAAU,EAAK,GAG1C,CAED8C,kBAAkBkF,EAAM,IACtB,MACM3K,EAAKkN,KAAKlN,GACVgV,QAFK1T,MAEWQ,GAAQ9B,GAC9B,MAAO,yBAHIsB,KAGwB4H,aAAalJ,MAAOgV,SACxD,CAEDvP,SAAczF,GACZ,MAAMqB,EAAKC,KACL2W,EAAOkW,OAAO6T,aAAa3gC,GAAI8G,KAAItG,GAAMR,GAAG2T,GAAMhV,EAAI6B,KAE5D,aADmBE,QAAQmS,IAAI+D,IACnB3N,KAAK,GAClB,CAEGpB,UACF,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,GAChC,CAEG4H,QAAIyB,EAAM,IACZyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EACzB,CAEGs3B,cACF,OAAO7vB,OAAOpL,IAAI1F,KAAM,WAAY,GACrC,CAEG2gC,YAAQt3B,EAAM,IAChByH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EAC9B,CAEGu3B,cACF,OAAO9vB,OAAOpL,IAAI1F,KAAM,WACzB,CAEG4gC,YAAQv3B,EAAM,IAChB,OAAOyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EACrC,CAEGw3B,cACF,OAAO/vB,OAAOpL,IAAI1F,KAAM,WACzB,CAEG6gC,YAAQx3B,EAAM,IAChB,OAAOyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EACrC,CAEDlF,SAAYzF,EAAI6B,GACd,MAAMR,EAAKC,KACL8gC,EAASl1B,KAAKlN,GACdwP,EAAM2e,OAAOmC,QAAQzuB,GACrB89B,EAAQt+B,GAAGghC,GAAUxgC,GACrBygC,EAAUjhC,GAAGkhC,GAAY1gC,GACzB2gC,EAAYnhC,GAAGohC,GAAc5gC,GAAM,mBAAmB7B,IAAO,GAC7Dy4B,EAAYp3B,GAAGo3B,GAAW52B,GAChC,MAAO,uCACyBR,EAAG4gC,yIAGU5gC,EAAG6gC,WAAWzJ,EAAY,GAAK,yEAAyE2J,yBACtIzC,yGAGoCt+B,EAAG8gC,WAAW1J,EAAY,OAAS,WAAW2J,MAAWI,uEAE3FhzB,GAAO8yB,2FAMzB,CAEDD,IAAUxgC,GACR,OAAOuQ,OAAOpL,IAAInF,EAAI,QACvB,CAED0gC,IAAY1gC,GACV,OAAOuQ,OAAOpL,IAAInF,EAAI,UACvB,CAED42B,IAAW52B,GACT,OAAOuQ,OAAOwd,UAAU/tB,EAAI,WAAW,EACxC,CAED4gC,IAAc5gC,GACZ,OAAOuQ,OAAOwd,UAAU/tB,EAAI,aAAa,EAC1C,CASD4D,WAAWkF,EAAM,IACf,MAAM3C,QAAa+a,SAAS2f,SAAS/3B,GACrC,IAAK2C,EAAO2B,WAAWjH,GAAO,OAC9B,MAAM3G,EAAKC,KACX+Z,SAAS2X,kBAAkB3xB,GAC3B,MAAMgL,EAAMgI,EAAM6F,iBAAiBlS,GAGnC,OAFAqM,EAAMyf,QAAQzyB,EAAIgL,GAClBhL,EAAGD,oBACI4G,CACR,ECvJY,MAAM26B,gBAAgB9R,UAEjC+R,IAAc,+FACdC,KAAS,SAGLh4B,eAAeC,OAAO,WAAY63B,SAClCt8B,OAAOC,KAAKq8B,QACf,CAEU5iC,gCAEP,OAAO8wB,UAAUkR,kBADH,CAAC,MAAO,UAAW,UAEpC,CAEDt4B,cACIC,OACH,CAED6vB,IAASj0B,GAEL+V,SAAS6B,KADE5b,KACO,SAAU,CAAEiE,KAAM,QAAS6mB,OAAQ9mB,IAAK,GAD/ChE,KAER6tB,SACN,CAEDgE,UACI,MAAM9xB,EAAKC,KACLwhC,EAAMzhC,EAAGqX,MAAM,cACrBrX,EAAGoxB,YAAYqQ,EAAK,QAASzhC,GAAGk4B,GAASxvB,KAAK1I,IAC9CqI,MAAMypB,SACT,CAEDvwB,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACnD,MAAMtB,EAAKC,KACLO,EAAKR,EAAGiU,kBAEF,WAAR7U,GAAmB4T,EAAMyf,QAAQjyB,EAAIR,EAAGihC,SAEhC,OAAR7hC,IACA4T,EAAM6E,YAAYrX,EAAIa,GAAU,GAChC2R,EAAM6E,YAAYrX,EAAIc,GAAU,IAGxB,UAARlC,GAAkB4T,EAAM6E,YAAYrX,EAAIkhC,WAAY1hC,GAAGwhC,GAC9D,CAEGxS,eACA,MAAMhvB,EAAKC,KACX,MAAO,+BACaD,EAAG6H,OAAO5H,KAAK+wB,yBAAyB/wB,KAAK+wB,6CACrDhxB,EAAGihC,+BACTjhC,EAAG2hC,YAAc3hC,GAAGuhC,GAAc,sBAE3C,CAEG15B,UACA,MAAMmY,EAAM/f,KAAK0hC,YAAc,8BAAgC,GAC/D,OAAO5wB,OAAOpL,IAAI1F,KAAM,OAAS,IAAI+f,GACxC,CAEGnY,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAEGo4B,gBACA,OAAO3wB,OAAOpL,IAAI1F,KAAM,aAAc,SACzC,CAEGyhC,cAAUp4B,EAAM,IAChB,OAAOyH,OAAOpL,IAAI1F,KAAM,aAAcqJ,EACzC,CAEG23B,cACA,OAAOlwB,OAAOpL,IAAI1F,KAAM,UAC3B,CAEGghC,YAAQ33B,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EACtC,CAEGq4B,kBACA,OAAO5wB,OAAOwd,UAAUtuB,KAAM,eAAe,EAChD,CAEG0hC,gBAAYr4B,EAAM,IAClB,OAAOyH,OAAOvL,IAAIvF,KAAM,cAAegM,EAAOkF,OAAO7H,GACxD,CAEDlF,WAII,OAFA4O,EAAM6E,YADK5X,KACUoX,MAAM,UAAW,QAAQ,SACxCpL,EAAOwD,QAAQuD,EAAMqmB,OAFhBp5B,KAGDM,QACb,CAEDutB,UACI,OAAO7tB,MAAK6tB,IACf,CAEDnW,SACI1X,KAAKiT,QAAUjT,KAAKiT,MACvB,CAKGga,aACA,OAAOnc,OAAOwd,UAAUtuB,KAAM,QAAQ,EACzC,CAEGmtB,aACA,MAAO,MACV,EC/GU,MAAMwU,iBAAiBpS,UAGlCgS,KAAS,SAGLh4B,eAAeC,OAAO,YAAam4B,UACnC58B,OAAOC,KAAK28B,SACf,CAEUljC,gCAEP,OAAO8wB,UAAUkR,kBADH,CAAC,MAAO,UAAW,SAAU,SAAU,QAAS,SAAU,WAE3E,CAEDt4B,cACIC,OACH,CAED6vB,IAASj0B,GACL,MAAMjE,EAAKC,KACX,GAAID,EAAG6hC,QAAS,OAAO,EACvB7nB,SAAS6B,KAAK7b,EAAI,SAAU,CAAEkE,KAAM,SAAUgqB,OAAQluB,EAAGkuB,OAAQnD,OAAQ9mB,IAAK,GAAM,GAAM,GACtFjE,EAAGkT,SACHlT,GAAGwhC,IAAUxhC,GAAGwhC,GAChBxuB,EAAM6E,YAAY7X,EAAGiU,kBAAmB,SAAUjU,GAAGwhC,KAEpDxhC,EAAGw9B,QAAQx9B,GAAG8hC,IAASC,MAC/B,CAEDjQ,UACI,MAAM9xB,EAAKC,KACXD,EAAGoxB,YAAYpxB,GAAG8hC,GAAS,QAAS9hC,GAAGk4B,GAASxvB,KAAK1I,IACrDqI,MAAMypB,SACT,CAEDvwB,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACnD,MACMd,EADKP,KACGgU,kBADHhU,MAER4/B,GAAQzgC,EAAMiC,EAAUC,GAC3ByP,OAAOvL,IAAIhF,EAAI,WAAWpB,IAAQkC,EACrC,CAEGwgC,SACA,OAAO7hC,KAAKoX,MAAM,SACrB,CAEDwoB,IAAQzgC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAEzC,MAAMtB,EAAKC,KACLO,EAAKR,EAAGiU,kBAEd,MAAY,SAAR7U,EAAwB4T,EAAMyf,QAAQjyB,EAAIR,EAAGs+B,QAErC,OAARl/B,IACA4T,EAAM6E,YAAYrX,EAAIa,GAAU,GAChC2R,EAAM6E,YAAYrX,EAAIc,GAAU,IAGxB,UAARlC,EAAyB4T,EAAM6E,YAAYrX,EAAI,SAAUR,GAAGwhC,IACpD,WAARpiC,EAA0B2R,OAAOvL,IAAIxF,EAAGiU,kBAAmB,WAAYhI,EAAOkF,OAAO7P,GAAYA,EAAW,WAAhH,EACH,CAEG0tB,eACA,MAAMhvB,EAAKC,KACL8J,EAAW/J,EAAG6hC,QAAU,WAAa,GAGrClS,EAAU,GAFH3vB,EAAGgiC,KAAO,aAAahiC,EAAGgiC,aAAe,MAE3BhiC,EAAGs+B,QACxBpQ,EAASpB,OAAOa,cAAc3tB,GAC9BiiC,EAAUnV,OAAOU,eAAextB,GAChCiD,EAAS6pB,OAAOW,cAAcztB,GAC9B2X,EAASmV,OAAOY,cAAc1tB,GACpC,MAAO,iBAAiBA,EAAGkE,oBAAoBlE,EAAG6H,QAAQqmB,KAAUvW,KAAU1U,KAAUg/B,KAAWl4B,YAAmB/J,EAAGkiC,2BAA2BvS,YACvJ,CAEG9nB,UACA,MAAMqL,EAASjT,MAAKuhC,GAAS,SAAW,GACxC,OAAOzwB,OAAOpL,IAAI1F,KAAM,OAAS,IAAIiT,GACxC,CAEGrL,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAEG4kB,aACA,OAAOnd,OAAOpL,IAAI1F,KAAM,SAC3B,CAEGiuB,WAAO5kB,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACrC,CAEGwkB,cACA,OAAO/c,OAAOpL,IAAI1F,KAAM,UAC3B,CAEG6tB,YAAQxkB,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EACtC,CAEG04B,WACA,OAAOjxB,OAAOpL,IAAI1F,KAAM,OAC3B,CAEG+hC,SAAK14B,EAAM,IACX,OAAOyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EACnC,CAEGrG,aACA,OAAO8N,OAAOpL,IAAI1F,KAAM,SAC3B,CAEGgD,WAAOqG,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACrC,CAEGqO,aACA,OAAO5G,OAAOpL,IAAI1F,KAAM,SAC3B,CAEG0X,WAAOrO,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACrC,CAEG44B,cACA,OAAOnxB,OAAOpL,IAAI1F,KAAM,UAC3B,CAEGiiC,YAAQ54B,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EACtC,CAEGg1B,YACA,OAAOvtB,OAAOpL,IAAI1F,KAAM,QAC3B,CAEGq+B,UAAMh1B,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EACpC,CAEG4J,aACA,OAAOnC,OAAOwd,UAAUtuB,KAAM,UAAU,EAC3C,CAEGiT,WAAO5J,EAAM,IAEb,OADArJ,MAAKuhC,GAASv1B,EAAOkF,OAAO7H,GACrByH,OAAOvL,IAAIvF,KAAM,SAAUA,MAAKuhC,GAC1C,CAEGK,cACA,OAAO9wB,OAAOwd,UAAUtuB,KAAM,WAAW,EAC5C,CAEG4hC,YAAQv4B,EAAM,IACd,OAAOyH,OAAOwd,UAAUtuB,KAAM,UAAWqJ,EAC5C,CAEGk0B,aACA,OAAOzsB,OAAOwd,UAAUtuB,KAAM,UAAU,EAC3C,CAEGu9B,WAAOl0B,EAAM,IACb,OAAOyH,OAAO8f,UAAU5wB,KAAM,SAAUqJ,EAC3C,CAEGpF,WACA,OAAO6M,OAAOpL,IAAI1F,KAAM,OAAQ,SACnC,CAEGiE,SAAKoF,EAAM,IACX,OAAOyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EACnC,CAEDqO,SACI1X,KAAKiT,QAAUjT,KAAKiT,MACvB,CAKGga,aACA,OAAO,CACV,CAEGE,aACA,MAAO,MACV,EC5LU,MAAM+U,mBAAmB3S,UAEpCrH,IAAQ,YAGJ3e,eAAeC,OAAO,cAAe04B,YACrCn9B,OAAOC,KAAKk9B,WACf,CAEUzjC,gCAEP,OAAO8wB,UAAUkR,kBADH,CAAC,SAAU,SAAU,QAEtC,CAEDt4B,cACIC,QACApI,MAAKkoB,GAAQ,IAAItD,OACjB5kB,MAAKkoB,GAAM5a,OAAStN,KAAKsN,MAC5B,CAEDkmB,iBAAiBr0B,EAAO,GAAIm0B,EAAS,GAAIC,EAAS,IAC9C,MAAMxzB,EAAKC,KACE,WAATb,IACAY,GAAGmoB,GAAM5a,OAASvN,EAAGuN,QAEZ,SAATnO,IACAY,GAAGmoB,GAAQ,IAAItD,OAAO2O,GACtBxzB,GAAGmoB,GAAM5a,OAASvN,EAAGuN,QAEZ,WAATnO,IACAY,GAAGmoB,GAAMla,OAASulB,GAEtBxzB,GAAG6/B,IACN,CAED9/B,oBACIsI,MAAMtI,mBACT,CAEDmB,uBACImH,MAAMnH,sBACT,CAED4wB,UACI,MAAM9xB,EAAKC,KACXD,GAAG6/B,KACH7/B,EAAGoxB,YAAYpxB,EAAGqX,MAAM,WAAY,QAASrX,GAAGoiC,GAAS15B,KAAK1I,IAC9DA,EAAGoxB,YAAYpxB,EAAGqX,MAAM,OAAQ,QAASrX,GAAGqiC,GAAO35B,KAAK1I,IACxDA,EAAGoxB,YAAYpxB,EAAGqX,MAAO,SAAUrX,GAAGsiC,GAAQ55B,KAAK1I,IACnDA,EAAGoxB,YAAYpxB,EAAGuiC,QAAS,SAAUviC,GAAGwiC,GAAS95B,KAAK1I,IACtDqI,MAAMypB,SACT,CAED1tB,kBAAkBkF,EAAM,IACpB,OAAOrJ,MAAKwiC,IACf,CAEGta,WACA,OAAOpX,OAAOpL,IAAI1F,KAAM,OAAQA,MAAKkoB,GAAMua,cAC9C,CAEGva,SAAK7e,EAAM,IACXyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAC5B,CAEGrG,aACA,OAAO8N,OAAOpL,IAAI1F,KAAM,SAC3B,CAEGgD,WAAOqG,EAAM,IACbyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EAC9B,CAEG2E,aACA,OAAO8C,OAAOpL,IAAI1F,KAAM,SAC3B,CAEGgO,WAAO3E,EAAM,IACbyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EAC9B,CAEGiE,aACA,OAAOwD,OAAOpL,IAAI1F,KAAM,SAAUgM,EAAOsB,OAC5C,CAEGA,WAAOjE,EAAM,IACbyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EAC9B,CAEGzB,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAC3B,CAEG4H,QAAIyB,EAAM,IACVyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAC3B,CAEGq5B,gBACA,OAAO5xB,OAAOpL,IAAI1F,KAAM,aAC3B,CAEG0iC,cAAUr5B,EAAM,IAChByH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EAClC,CAEGs5B,eACA,OAAO7xB,OAAOpL,IAAI1F,KAAM,YAAa,yDACxC,CAEG2iC,aAASt5B,EAAM,IACfyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACjC,CAEGu5B,cACA,OAAO9xB,OAAOpL,IAAI1F,KAAM,WAAY,yDACvC,CAEG4iC,YAAQv5B,EAAM,IACdyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EAChC,CAEGw5B,aACA,OAAO/xB,OAAOpL,IAAI1F,KAAM,UAAW,YACtC,CAEG6iC,WAAOx5B,EAAM,IACbyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EAC/B,CAEGy5B,eACA,OAAOhyB,OAAOpL,IAAI1F,KAAM,YAAa,uBACxC,CAEG8iC,aAASz5B,EAAM,IACfyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACjC,CAEG05B,cACA,OAAOjyB,OAAOpL,IAAI1F,KAAM,WAC3B,CAEG+iC,YAAQ15B,EAAM,IACdyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EAChC,CAEG25B,kBACA,OAAOlyB,OAAOpL,IAAI1F,KAAM,eAAgB,cAC3C,CAEGgjC,gBAAY35B,EAAM,IAClByH,OAAOvL,IAAIvF,KAAM,eAAgBqJ,EACpC,CAEG45B,eACA,OAAOnyB,OAAOpL,IAAI1F,KAAM,YAAa,gBACxC,CAEGijC,aAAS55B,EAAM,IACfyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACjC,CAEGi5B,cACA,OAAOtiC,KAAKoX,MAAM,SACrB,CAEG8rB,aACA,OAAOljC,KAAKoX,MAAM,QACrB,CAEG+rB,aACA,OAAOnjC,KAAKoX,MAAM,QACrB,CAEGgsB,aACA,OAAOpjC,KAAKoX,MAAM,QACrB,CAEGisB,eACA,OAAOrjC,KAAKoX,MAAM,SACrB,CAEGksB,gBACA,OAAOxyB,OAAOpL,IAAI1F,KAAM,aAAc,WACzC,CAEGsjC,cAAUj6B,GACV,OAAOyH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EACzC,CAEGk6B,gBACA,OAAOzyB,OAAOpL,IAAI1F,KAAM,aAAc,WACzC,CAEGujC,cAAUl6B,GACV,OAAOyH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EACzC,CAEGm6B,cACA,OAAO1yB,OAAOgvB,SAAS9/B,KAAM,WAAY,OAC5C,CAEGwjC,YAAQn6B,GACR,OAAOyH,OAAOivB,SAAS//B,KAAM,WAAYqJ,EAC5C,CAEGo6B,cACA,OAAO3yB,OAAOgvB,SAAS9/B,KAAM,WAAY,OAC5C,CAEGyjC,YAAQp6B,GACR,OAAOyH,OAAOivB,SAAS//B,KAAM,WAAYqJ,EAC5C,CAEDq6B,UAAUxb,GACN,MAAMnoB,EAAKC,KACX,OAAQkoB,GAAQnoB,GAAGmoB,IAAOla,OAAOjO,EAAGiO,OAAQjO,EAAGuN,OAClD,CAED+0B,IAAQr+B,GACJ,MAAMjE,EAAKC,KACXD,GAAGmoB,GAAM1C,KAAOzlB,EAAGmjC,OAAO9gC,MAC1BrC,GAAG6/B,IACN,CAED2C,IAASv+B,GACL,MAAMjE,EAAKC,KACXD,GAAGmoB,GAAMvC,MAAQ5lB,EAAGuiC,QAAQqB,cAC5B5jC,GAAG6/B,IACN,CAEDwC,IAAOp+B,GACH,MAAMjE,EAAKC,KACLwhC,EAAMx9B,EAAE6c,eAAe5O,QAC7B,IAAKc,EAAM6wB,SAASpC,EAAK,OAAQ,OACjC,MAAM1b,EAAM9Z,EAAOmF,MAAMqwB,EAAIqC,UAAU/8B,QACvClH,uBAAsB,KAClBG,EAAGsX,SAAS,QAAQ5U,SAAQlC,GAAMwS,EAAM6E,YAAYrX,EAAIR,EAAGijC,aAAa,KACxEjwB,EAAM6E,YAAY4pB,EAAKzhC,EAAGijC,aAAa,EAAK,IAEhD,MAAM9a,EAAO,IAAItD,OAAO7kB,GAAGmoB,IAC3BA,EAAKpC,IAAMA,EACX/L,SAAS6B,KAAK7b,EAAI,OAAQ,CAAEkE,KAAM,WAAYikB,KAAMA,EAAM7e,IAAKtJ,EAAG2jC,UAAUxb,KAAS,GAAM,GAC3FnoB,GAAG+jC,GAAc5b,EACpB,CAEDia,IAASn+B,GACL,MAAMjE,EAAKC,KACLwhC,EAAMx9B,EAAE6c,eAAe5O,QAC7B,IAAKc,EAAM6wB,SAASpC,EAAK,SAAU,OACnCA,EAAIM,OACW/uB,EAAM6wB,SAASpC,EAAK,QAC1BzhC,GAAGmoB,GAAMvC,QAAU5lB,GAAGmoB,GAAMvC,QACrC5lB,GAAG6/B,IACN,CAEDkE,IAAc5b,GACV,MAAMnoB,EAAKC,KACX,IAAKD,EAAGiD,OAAQ,OAChB,MAAMm3B,EAAMpnB,EAAMqE,MAAMlY,SAASkhB,gBAAiBrgB,EAAGiD,QACrD,OAAKm3B,EAEDA,aAAekB,iBACE,SAAblB,EAAIl2B,KAAwBk2B,EAAI4J,YAAc7b,EAC3CiS,EAAI/3B,MAAQrC,EAAG2jC,UAAUxb,QAEpCnV,EAAMyf,QAAQ2H,EAAKp6B,EAAG2jC,UAAUxb,SANhC,CAOH,CAED0X,MACI,MAAM7/B,EAAKC,KACXD,EAAGsX,SAAS,SAAS5U,SAAQlC,GAAMA,EAAGD,WACtCP,EAAGqX,MAAM,UAAU4sB,mBAAmB,WAAYjkC,GAAGkkC,MACrDlkC,EAAGuiC,QAAQqB,cAAgB5jC,GAAGmoB,GAAMvC,MACpC5lB,EAAGmjC,OAAO9gC,MAAQrC,GAAGmoB,GAAMzC,aAC9B,CAEDye,IAASxhC,EAAGwlB,GACR,MAAMnoB,EAAKC,KACX,OAAO0C,GAAKsJ,EAAOmF,MAAMzO,KAAO3C,GAAGmoB,GAAMpC,KAAOoC,EAAKvC,QAAU5lB,GAAGmoB,GAAMvC,OAAS5lB,GAAGmoB,GAAM1C,OAAS0C,EAAK1C,IAC3G,CAEDye,MACI,MAAMlkC,EAAKC,KACLmkC,EAAQ,IAAIvf,OAClBuf,EAAM72B,OAASvN,EAAGuN,OAClB,MACMoG,EADO3T,GAAGmoB,GAAMlD,MAAMjlB,EAAGuN,QAE1BzG,KAAInE,GAEM,wBADGA,EAAI,0BAA0B3C,GAAGmkC,GAASxhC,EAAGyhC,GAASpkC,EAAGkjC,SAAW,WAAWvgC,QAAU,aAGtGmE,KAAI,CAACnE,EAAG3D,KACL,GAAU,IAANA,EAAS,MAAO,yBAAyB2D,IAE7C,OADgB3D,EAAI,GAAK,EACR,+BAA+B2D,IAAMA,CAAC,IAG/D,OADAgR,EAAK4D,KAAK,UACH5D,EAAK1K,KAAK,GACpB,CAGDo7B,MACI,MAAMrkC,EAAKC,KACLmgC,EAAUpgC,GAAGmoB,GAAMmc,UACnB1tB,EAAOiO,OAAO0f,WAAU,EAAOvkC,EAAGuN,QAAQzG,KAAI,CAACnE,EAAG3D,IAE7C,kBAAkBA,MADbohC,GAAWz9B,EAAI,WAAa,MACFA,eACvCsG,KAAK,MACR,MAAO,wBAAwBjJ,EAAG4iC,oBAAoBxC,4BACxCxpB,8BAEjB,CAED4tB,MACI,MAAMxkC,EAAKC,KACX,MAAO,sBAAsBD,EAAG6iC,mBAAmB7iC,GAAGmoB,GAAMzC,qCAAqC1lB,EAAGyjC,iBAAiBzjC,EAAG0jC,WAC3H,CAEDjB,MACI,MAAMziC,EAAKC,KACLwkC,EAAO5f,OAAO6f,SAAQ,EAAM1kC,EAAGuN,QAAQzG,KAAInE,GAAK,oBAAoBA,YAAWsG,KAAK,IACpF07B,EAAS3kC,GAAGqkC,KACZ5e,EAAOzlB,GAAGwkC,KAEhB,MAAO,8ZAU2CxkC,EAAG6H,6DACR7H,EAAG2iC,kHAEP3iC,EAAG8iC,sBAAsB9iC,EAAGwjC,+JAInDmB,8BACAlf,0KAIuBzlB,EAAG8iC,sBAAsB9iC,EAAGujC,4GAGrCvjC,EAAG+iC,aAAa0B,8CACpCviC,QAAQ,MAAO,GAC9B,ECnWU,MAAM0iC,iBAAiBpV,iBAGhChmB,eAAeC,OAAO,YAAam7B,UACnC5/B,OAAOC,KAAK2/B,SACd,CAEUlmC,gCAER,OAAO8wB,UAAUkR,kBADH,CAAC,OAEjB,CAEDn/B,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAEpD,GAAa,QAATlC,EAAgB,CACjB,MAAMoB,EAFEP,KAEMoX,MAAM,OACpBrE,EAAM6E,YAAYrX,EAAIa,GAAU,GAChC2R,EAAM6E,YAAYrX,EAAIc,GAAU,EAClC,CACH,CAED8C,oBACG,MAAO,kEAAkEnE,KAAK4H,OAAO5H,KAAK+wB,0BAA0B/wB,KAAK+wB,8BAC3H,CAEGnpB,UACD,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,GACjC,CAEG4H,QAAIyB,EAAM,IACX,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAO4kC,IACjC,ECzBW,MAAMC,eAAezF,WAElC0F,IAAU,KACVC,IAAU,SAGRx7B,eAAeC,OAAO,UAAWq7B,OAAQ,CAAEp7B,QAAS,OACpD1E,OAAOC,KAAK6/B,OACb,CAED18B,cACEC,QAEA2K,EAAM+Z,SADK9sB,UACW2U,QAAS,KAChC,CAED7U,oBACEsI,MAAMtI,oBACN,MAAMC,EAAKC,KACX+S,EAAM6E,YAAY7X,EAAIA,EAAGrB,IAAI,GAC7BqB,GAAGilC,KACHjlC,GAAGklC,KACHllC,GAAGmlC,KACHnlC,EAAGoxB,YAAYjyB,SAAU,UAAWa,GAAGma,EAAWzR,KAAK1I,GACxD,CAEDkB,uBACE,MAAMlB,EAAKC,KAGX,IAFA+Z,SAAS2X,kBAAkB3xB,GAC3BmF,EAAcmC,WAAWtH,EAAGrB,IACtBqB,GAAGglC,IAAS,GAChB7/B,EAAcmC,WAAW,GAAGtH,EAAGrB,MAAMqB,GAAGglC,QAE1C38B,MAAMnH,sBACP,CAWFkwB,YAAY5wB,EAAIpB,EAAO,GAAIqM,EAAIsP,GAAO,GACrC,OAAOf,SAASsX,OAAOrxB,KAAMO,EAAIpB,EAAMqM,EAAIsP,EAC3C,CASDsW,YAAY7wB,EAAIpB,EAAO,GAAIqM,GAC1B,OAAOuO,SAASzZ,OAAON,KAAMO,EAAIpB,EAAMqM,EACvC,CAKImlB,cACF,OAAO3wB,KAAKkS,QAAQ,QACrB,CAKGqtB,gBACF,OAAOv/B,KAAKkS,QAAQ,WACrB,CAKGizB,eAEF,OAAOn5B,EAAOkF,OADHlR,KACaU,QAAQykC,WADrBnlC,KACqCu/B,SACjD,CASD6F,MAAMz4B,EAAI,EAAGqd,EAAI,EAAG8a,GAClB,MAAM/kC,EAAKC,KACLwc,EAAM,CAAC6oB,QAAS14B,EAAE04B,SAAW14B,EAAG24B,QAAS34B,EAAE24B,SAAWtb,EAAGhnB,OAAQ2J,EAAE3J,QAAU8hC,GACnFllC,uBAAsB,KACpB,MAAMwF,EAAQ,CACZgmB,SAAW,QACXtB,IAAM,MACNnb,KAAO,MACPqd,UAAY,aAAaxP,EAAI6oB,cAAc7oB,EAAI8oB,cAEjDpgC,EAAcuB,QAAQ1G,EAAGrB,GAAI0G,GAC7BrF,EAAG2/B,KAAKljB,EAAI,GAGf,CAEDwd,MAAMh2B,GACJ+V,SAASE,QAAQjW,GACjB,MAAMjE,EAAKC,KACX,IAAKD,EAAGolC,SAAU,OAAO,EACzB,IAAKplC,EAAG4wB,QAAS,OAAO,EACxB5wB,GAAGwlC,KACHxyB,EAAM6E,YAAY7X,EAAI,QAAQ,GAK9BmF,EAAcuB,QAAQ1G,EAAGrB,GAJX,CACZiQ,KAAO,GACPmb,IAAM,KAGR/pB,GAAG+kC,IAAS7N,QACZl3B,GAAG+kC,GAAU,KACb/qB,SAAS6B,KAAK7b,EAAI,QACnB,CAED2/B,KAAK17B,GACH,MAAMjE,EAAKC,KACXD,GAAG+kC,GAAU9gC,GAAGhB,OAChB+P,EAAM6E,YAAY7X,EAAI,QAAQ,GAC9BA,GAAGmlC,KACHnlC,GAAGylC,GAAgBxhC,GACnB+O,EAAMqE,MAAMrX,EAAI,2BAA2Bk3B,QAC3Cld,SAAS6B,KAAK7b,EAAI,OACnB,CAED2X,OAAO1T,GACL,MAAMjE,EAAKC,KACXD,EAAG4wB,QAAU5wB,EAAGi6B,MAAMh2B,GAAKjE,EAAG2/B,KAAK17B,EACpC,CAEGwU,SACF,OAAOzF,EAAMsE,SAASrX,KAAM,iBAC7B,CAEGylC,SACF,OAAO1yB,EAAMsE,SAASrX,KAAM,WAC7B,CAEDulC,MACEvlC,MAAKylC,GAAUhjC,SAAQlC,GAAMwS,EAAM6E,YAAYrX,EAAI,QAAQ,IAC5D,CAED2kC,MACE,MAAMnlC,EAAKC,KACLsT,EAAOvT,EAAGwT,wBAChB,IAAKD,EAAM,OACX,MAAMoyB,EAAIpyB,EAAKE,MACT3U,EAAIyU,EAAK3E,KACTg3B,EAAKC,SAASl7B,OAAOm7B,WAAY,IAEjCtsB,EAAIjG,EAAKwW,IACTlrB,EAAI0U,EAAKG,OACTqyB,EAAKF,SAASl7B,OAAOq7B,YAAa,IAClCC,EAAKjmC,GAAGisB,GACdpsB,uBAAsB,KACpB,IAAIwF,EAAQ,KACZ,GAAIvG,EAAI6mC,EAAIC,EAAI,CACd,IAAIh3B,EAAO9P,GAAMA,EAAI6mC,EAAKC,GACtBK,IAAIr3B,GAAcq3B,EAAGr5B,EAAEvK,OAC3BgD,EAAQ,CAAEuJ,KAAO,GAAGA,MACrB,CACD,GAAI4K,EAAI3a,EAAIknC,EAAI,CACd,IAAIhc,EAAMvQ,GAAMA,EAAI3a,EAAKknC,GACrBE,IAAIlc,GAAYkc,EAAGhc,EAAE5nB,OACzBgD,EAAQ,CAAC0kB,IAAM,GAAGA,MACnB,CACD5kB,EAAcuB,QAAQ1G,EAAGrB,GAAI0G,EAAM,GAEtC,CAEG4mB,SACF,OAAKrnB,WAAWshC,aACTjgC,MAAMC,KAAKuL,EAASyG,WAAWjY,KAAM,cAAckG,QAAOxD,GAAKA,aAAaujC,eAAc7/B,MAD5D,IAEtC,CAED8/B,IAAe3lC,GACb,MAAMR,EAAKC,KACNO,EAAGG,QAAQyqB,QACd5qB,EAAGG,QAAQyqB,MAAQ,GAAGprB,EAAGrB,QAAQqB,GAAGglC,KACpCxkC,EAAGiV,UAAUC,IAAIlV,EAAGG,QAAQyqB,OAE/B,CAEDqa,IAAgBxhC,GACd,MAAMjE,EAAKC,KAEXJ,uBAAsB,KACpB,MAAM0T,EAAOvT,EAAGwT,wBAChB,IAAKD,EAAM,OACX,IAAI3G,EAAI3I,GAAGqhC,SAAW/xB,EAAK3E,KAAMqb,EAAIhmB,GAAGshC,SAAWhyB,EAAKwW,IACxD,MAAMqc,EAAYx5B,EAAI2G,EAAKE,MAAQ,EAAI9I,OAAOm7B,WACxCO,EAAYpc,EAAI1W,EAAKG,OAAS,EAAI/I,OAAOq7B,YAC3CI,IAAWx5B,EAAIjC,OAAOm7B,WAAavyB,EAAKE,OACxC4yB,IAAWpc,EAAItf,OAAOq7B,YAAczyB,EAAKG,QAC7C1T,GAAG0lC,GAAUhjC,SAAQlC,IACnBR,GAAGmmC,GAAe3lC,GAClB,IAAIk/B,GAAM,EACV,MAAMr6B,EAAQ,CACZgmB,SAAW,WACXzc,KAAO,UACPC,MAAQ,UACRkb,IAAM,WAEJqc,GACF/gC,EAAMwJ,MAAQ,OACd6wB,GAAM,IAENr6B,EAAMuJ,KAAO,OACb8wB,GAAM,GAERv6B,EAAcuB,QAAQlG,EAAGG,QAAQyqB,MAAO/lB,GACxC7E,EAAGG,QAAQ++B,IAAMA,EACjBl/B,EAAGG,QAAQ02B,OAASqI,EACpB1sB,EAAM6E,YAAY7X,EAAI,aAAc0/B,GACpC1sB,EAAM6E,YAAY7X,EAAI,UAAW0/B,EAAI,GACrC,GAEL,CAEDuF,MACE,MAAMjlC,EAAKC,KACXD,GAAGyY,GAAOtS,QAAOs7B,GAAOA,EAAI9gC,QAAQutB,SACjCxrB,SAAQ++B,GAAOzhC,EAAGoxB,YAAYqQ,EAAK,QAASzhC,GAAGk4B,GAASxvB,KAAK1I,KACjE,CAEDklC,MACE,MAAMllC,EAAKC,KACPD,EAAGw/B,YACPx/B,GAAGyY,GAAO/V,SAAQlC,GAAMR,EAAGoxB,YAAY5wB,EAAI,YAAaR,GAAGu/B,GAAW72B,KAAK1I,MAC3EA,EAAGoxB,YAAYpxB,EAAI,aAAcA,EAAGi6B,MAAMvxB,KAAK1I,IAChD,CAEDma,GAAWlW,GACT,MAAMjE,EAAKC,KACX,GAEO,WAFCgE,EAAEmY,IAGNpC,SAASE,QAAQjW,GACjBjE,EAAGi6B,OAGR,CAED71B,SAAeH,GACb,MAAMjE,EAAKC,KACX+Z,SAASE,QAAQjW,GACjBjE,EAAGi6B,QACHj6B,GAAGwlC,KACHxlC,GAAGsmC,GAAariC,GAChB,MAAM0C,EAAO1C,EAAEhB,OAAOtC,QAChBia,EAAM,CAAE1W,KAAM,OAAQqiC,OAAQtiC,EAAEhB,OAAQ8hC,OAAQ/kC,GAAG+kC,GAASp+B,KAAMA,GACxEqT,SAASwsB,YAAY,EAAGxmC,EAAI,SAAU4a,GAAK,GAAM,GAAM,EACxD,CAED0rB,IAAariC,GACX,MAAMwiC,EAAMxiC,GAAGhB,QAAQyjC,gBACvB,KAAMD,aAAenL,kBAAmB,OAExCtoB,EAAMsE,SADKrX,KACQ,eAAewmC,EAAIrnC,UAAUsD,SAAQlC,GAAMA,EAAGyX,SAAU,IAC3EwuB,EAAIxuB,SAAU,CACf,CAODsnB,IAAWt7B,GACT+V,SAASE,QAAQjW,GACjB,MAAMjE,EAAKC,KACL0mC,EAAK3zB,EAAMwD,QAAQvS,EAAEhB,OAAQ,MAC7B2jC,EAAK5zB,EAAMwD,QAAQmwB,EAAI,MACvB5tB,EAAM/F,EAAMqE,MAAMsvB,EAAI,YAC5B9mC,uBAAsB,KAEpB,GADAmT,EAAMsE,SAASsvB,EAAI,YAAYlkC,SAAQlC,GAAMwS,EAAM6E,YAAYrX,EAAG,QAAQ,KACtEuY,EAAK,CACP/Y,GAAGmmC,GAAeptB,GAClB,MAAM1T,EAAQ,CAAC0kB,IAAM,GAAGhR,EAAIlC,cAAcgwB,eAC1C1hC,EAAcuB,QAAQqS,EAAIpY,QAAQyqB,MAAO/lB,GACzC2N,EAAM6E,YAAYkB,EAAK,QAAQ,EAChC,IAEJ,CAQDva,gBAAgBia,EAAQ,GAAI5Q,GAE1B,MAAMgoB,EAAO,GAqBb,OApBApX,EAAM/V,SAAQoS,IACZ,GAAW,MAAPA,EAAY,OAAO+a,EAAKtY,KAAK,2CACjC,MAAMuvB,EAAa7gC,MAAMyH,QAAQoH,EAAGiyB,MASpC,GARAlX,EAAKtY,KAAK,QACVsY,EAAKtY,KAAK,sCAENzC,EAAGwpB,OAAOzO,EAAKtY,KAAK,WAAWzC,EAAGwpB,WACtCzO,EAAKtY,KAAK,KACVsY,EAAKtY,KAAK,GAAGzC,EAAG1V,QAAQ0nC,EAAa,UAAY,MACjDjX,EAAKtY,KAAK,QAENuvB,EAAY,CACd,MAAM/tB,EAAM+rB,OAAOkC,SAASlyB,EAAGiyB,KAAMl/B,GACrCgoB,EAAKtY,KAAK,mDAAmD1P,OAC7DgoB,EAAKtY,KAAKwB,EAAI9P,KAAK,OACnB4mB,EAAKtY,KAAK,QACX,CACDsY,EAAKtY,KAAK,QAAQ,IAGbsY,CACR,CAGDrxB,eAAe+V,EAAU8N,EAAQ,EAAGxa,EAAM,GAAIu9B,GAAW,GAEvD,MAAMplC,EAAK8kC,OACLluB,EAAO,GAEPmC,EAAgB,IAAVsJ,EAAc,yBAA2B,UAC/C4kB,EAAe,IAAV5kB,EAAc,UAAY,YAYrC,OAXAzL,EAAKW,KAAK,WAAW0vB,qBAAsB7B,aAAoBrsB,mBAAqBlR,QAEpF5B,MAAMC,KAAKqO,GAAU7R,SAAQlC,IAC3B,MAAM0mC,EAAQ1mC,EAAG2mC,kBAAoB,EACjCD,GAAOtwB,EAAKW,KAAKvX,GAAGonC,GAAW5mC,IACnC,MAAMmT,EAAOuzB,EAAQlnC,EAAGqnC,QAAQ7mC,EAAG+T,WAAY8N,EAAOxa,EAAKu9B,GAAYplC,GAAGsnC,GAAa9mC,GACvFoW,EAAKW,KAAK5D,GACNoF,GAAKnC,EAAKW,KAAK,QAAQ,IAG7BX,EAAKW,KAAK,SACHX,EAAK3N,KAAK,GAClB,CAEDzK,UAAkBgC,GAChB,MAAMpB,EAAO2R,OAAOpL,IAAInF,EAAI,QAE5B,MAAO,2FADOA,GAAI89B,MAAQ,WAAW99B,EAAG89B,SAAS,MAC0Dl/B,aAC5G,CAEDZ,UAAoBgC,GAClB,MAAM+mC,EAASx2B,OAAOpL,IAAInF,EAAI,UAC9B,GAAI+mC,EAAQ,MAAO,sDAAsDA,cACzE,IAAK/mC,EAAGpB,KAAM,MAAO,4DACrB,MAAMk/B,EAAQ99B,EAAG89B,MAAQ,WAAW99B,EAAG89B,SAAS,GAChD,GAAI99B,EAAG0tB,OAAQ,MAAO,sDAAsD1tB,EAAG0tB,WAAWoQ,KAAS99B,EAAGmT,gBACtG,GAAInT,EAAGmX,OAAQ,MAAO,yDAAyDnX,EAAGmX,2BAA2BnX,EAAGyC,WAAWq7B,KAAS99B,EAAGpB,gBACvI,GAAIoB,EAAG4tB,OAAQ,MAAO,sDAAsD5tB,EAAG4tB,2BAA2B5tB,EAAGyC,WAAWq7B,KAAS99B,EAAGpB,gBACpI,GAAIoB,EAAGwD,KAAM,MAAO,sCAAsCxD,EAAGwD,iBAAiBxD,EAAGyC,WAAWq7B,KAAS99B,EAAGpB,gBACxG,MAAMooC,EAAQ1a,OAAO2a,SAASjnC,GAAIuG,OAClC,OAAOygC,EAAQ,yCAAyCA,MAAUhnC,EAAGpB,gBAAkB,EACxF,ECzWY,MAAMsoC,kBAAkBlY,UAErCmB,KAAU,EACVlB,KAAS,EACTkY,KAAY,SAGVn+B,eAAeC,OAAO,aAAci+B,WACpC1iC,OAAOC,KAAKyiC,UACb,CAEUhpC,gCAET,OAAO8wB,UAAUkR,kBADH,CAAC,QAAS,MAAO,QAEhC,CAEDt4B,cACEC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC5B,CAEDrT,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAGrD,GAAa,SAATlC,EAAiB,OAAOa,KAAK4iB,KAAKvhB,EAEvC,CAED8C,kBAAkBkF,EAAM,IAEtB,OAAKA,GADMrJ,KACIknC,kBAAoB,EADxBlnC,MACqC2nC,KACzCv/B,MAAM4kB,YAAY3jB,EAC1B,CAEDvJ,oBACEsI,MAAMtI,oBACKE,MACR0wB,IAAU,CACd,CAEDzvB,uBACajB,MACR0wB,IAAU,EACbtoB,MAAMnH,sBACP,CAED4wB,UACE,MAAM9xB,EAAKC,KACPD,GAAGyvB,KACPzvB,GAAGyvB,IAAS,EACZzvB,EAAGi6B,QACHj6B,EAAGoxB,YAAYjyB,SAAU,eAAgBa,GAAG6nC,GAAcn/B,KAAK1I,IAE/DA,EAAGoxB,YAAYpxB,GAAG+mC,GAAO,SAAU/mC,GAAGk4B,GAASxvB,KAAK1I,IACpDA,EAAGoxB,YAAYpxB,GAAG+mC,GAAO,QAAQ9iC,GAAK+V,SAAS6B,KAAK7b,EAAI,UACxDA,EAAGoxB,YAAYpxB,GAAG+mC,GAAO,SAAS9iC,GAAK+V,SAAS6B,KAAK7b,EAAI,WACzDA,EAAGoxB,YAAYzmB,OAAQ,SAAU3K,GAAG8nC,GAAUp/B,KAAK1I,IACnDA,GAAG6nC,KACHx/B,MAAMypB,UACP,CAEDiW,WACE,MAAM/nC,EAAKC,KACXD,GAAG2nC,IAAY,EACf3nC,EAAGqxB,YAAYlyB,SAAU,eACzB6T,EAAMsE,SAASnY,SAASkhB,gBAAiBrgB,EAAGiD,QAAQP,SAAQO,GAAUjD,EAAGqxB,YAAYpuB,EAAQ,iBAC7FjD,GAAG6nC,IACJ,CAEG3a,aACF,OAAOjtB,KAAK4W,gBAAkB1X,SAASuS,IACxC,CAMG0b,aACF,MAAO,gBACR,CAEGrjB,eACF,OAAO9J,KAAKoE,aAAa,WAC1B,CAEG0F,aAAST,GACX,OAAOyH,OAAO4G,OAAO1X,KAAM,WAAYgM,EAAOkF,OAAO7H,GACtD,CAEG0+B,WACF,OAAOj3B,OAAOwd,UAAUtuB,KAAM,OAC/B,CAEGgD,aACF,OAAO8N,OAAOpL,IAAI1F,KAAM,SACzB,CAEDg6B,MAAMh2B,GACJ+V,SAASE,QAAQjW,GACNhE,MACR8mC,IAAO9M,OACX,CAED0F,OACE1/B,MAAK8mC,IAAOpH,MACb,CAEDhoB,SAEE,OADW1X,KACD8J,UADC9J,MACqB8mC,IAAOpvB,QACxC,CAQD0tB,MAAMz4B,EAAI,EAAGqd,EAAI,EAAG8a,GAElB,OADW9kC,KACD8J,UADC9J,MACqB8mC,IAAO1B,MAAMz4B,EAAGqd,EAAG8a,EACpD,CAQDkD,WAAWxvB,EAAQ,IACjB,IAAKxS,MAAMyH,QAAQ+K,GAAQ,OAAO,EAClC,GAAqB,IAAjBA,EAAM1Z,OAAc,OAAO,EAC/B,MACMipC,EADK/nC,KACK+nC,KAAO,qBAAuB,GACxCnY,EAAOiV,OAAOkC,SAASvuB,EAAOuvB,GAEpC,OADAh1B,EAAMyf,QAHKxyB,MAGM8mC,GAAOlX,EAAK5mB,KAAK,MAC3B,CACR,CAED2+B,MACE,MACM//B,EADK5H,KACI+nC,KAAO,qBAAuB,GAC7C,OAAOlD,OAAOuC,QAFHpnC,KAEcsU,SAAU,EAAG1M,GAAK,EAC5C,CAEGk/B,SACF,OAAO9mC,KAAKoX,MAAM,iBACnB,CAEDywB,IAAU7jC,GACRhE,KAAKg6B,OACN,CAEDj3B,IAAOiB,GACL,MAAMjE,EAAKC,KACX,OAAOgE,EAAE6c,eAAe3a,QAAO3F,GAAMA,EAAG2R,UAC1BhM,QAAO3F,GAAMA,EAAG2R,QAAQnS,EAAGiD,SAC1C,CAEDmB,SAAeH,GAGb,GAAoB,IAFThE,MACK+C,GAAOiB,GACdlF,OAGT,OAFAib,SAASE,QAAQjW,GAHNhE,KAIRolC,MAAMphC,IACF,CACR,CAQDG,WACE,MAAMpE,EAAKC,KACX,IAAKD,EAAGiD,OAAQ,OAChB,GAAIjD,GAAG2nC,GAAW,OAClB,IAAK3nC,EAAGiD,OAAQ,OAChB,MAAMilC,EAAUl1B,EAAMsE,SAASnY,SAASkhB,gBAAiBrgB,EAAGiD,QACrC,IAAnBilC,EAAQnpC,QASZiB,GAAG2nC,IAAY,EACfO,EAAQxlC,SAAQO,IACdjD,EAAGoxB,YAAYnuB,EAAQ,cAAejD,GAAGmoC,GAASz/B,KAAK1I,GAAI,IAE7DA,EAAGqxB,YAAYlyB,SAAU,iBACzBa,EAAGoxB,YAAYjyB,SAAU,cAAea,EAAGi6B,MAAMvxB,KAAK1I,KAbhDA,GAAG2wB,WACC1kB,EAAOwD,QAAQ,KACrB5P,uBAAsB,KACpBG,GAAG6nC,IAAe,IAWzB,CAYDzjC,WAAWkF,EAAM,IACf,MAAM3C,QAAa+a,SAAS2f,SAAS/3B,GACrC,IAAK2C,EAAO2B,WAAWjH,GAAO,OAC9B,MAAM3G,EAAKC,KACXD,GAAGyvB,IAAS,EACZzvB,GAAG2nC,IAAY,EACf3tB,SAAS2X,kBAAkB3xB,GAC3B,MAAMgL,EAAMgI,EAAM6F,iBAAiBlS,GAGnC,OAFAqM,EAAMyf,QAAQzyB,EAAIgL,GAClBhL,EAAGD,oBACI4G,CACR,CAEDvC,SAAeH,GACb+V,SAASE,QAAQjW,GACjB,MACM0C,EAAO1C,EAAEtE,aADJM,MAEU26B,GAAUj0B,EAAKA,MAAMunB,UAE1CvnB,EAAKzC,KAAO,cACZ8V,SAAS6B,KALE5b,KAKO,SAAU0G,GAAM,GAAM,GAAM,GAC/C,CAEDvC,SAAgB8pB,GACd,IAAI1rB,GAAM,EACV,IAAK0rB,EAAQ,OAAO1rB,EACpB,MAAMxC,EAAKC,KACX,IAEE,MAAMwL,EAAKzL,EADXkuB,EAASjiB,EAAO8F,eAAemc,IAE/B1rB,EAAM2N,WAAWC,WAAW3E,GAC5BjJ,EAAMA,IAAQ2N,WAAWQ,iBAAiBlF,GACtCjJ,IACE2N,WAAWS,gBAAgBnF,SACvBzL,EAAGkuB,KAETluB,EAAGkuB,KAKR,CAFC,MAAOjqB,GACPjE,EAAGooC,QAAQnkC,EACZ,CACD,OAAOzB,CACR,CAED4lC,QAAQnkC,GAEP,ECpQY,MAAMokC,iBAAiB7Y,UAEpChxB,WAAa,oBACbA,kBAAoB,MACpBA,iBAAmB,0BAEnBA,UAAkB,CAAC,KAAM,UAEzBA,UAAgB,UAGdgL,eAAeC,OAAO,YAAa4+B,UACnCrjC,OAAOC,KAAKojC,SACb,CAEU3pC,gCAET,OAAO8wB,UAAUkR,kBADH,CAAC,aAAc,WAAY,QAAS,UAAW,YAAa,iBAE3E,CAEU3W,iBACT,OAAkC,IAA3Bse,UAASC,GAAOvpC,OAAe,KAAOspC,UAASC,GAAOD,UAASC,GAAOvpC,OAAO,EACrF,CAEDwC,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACrD,MAAMtB,EAAKC,KACXD,GAAG6/B,KACU,YAATzgC,IACEY,EAAG4wB,SACA5wB,GAAGuoC,GAAQ5I,OACd3/B,GAAGuoC,GAAQC,YACXH,UAASC,GAAO/wB,KAAKvX,IAEvBA,EAAGyoC,aAAavR,UAEhBl3B,GAAGuoC,GAAQtO,QACXoO,UAASC,GAAOjiC,OAElB2T,SAAS6B,KAAK7b,EAAI,UAAW,CAAEkE,KAAM,SAAUmG,GAAIrK,EAAG4wB,UAAW,GAAM,GAE1E,CAEDkB,UACE,MAAM9xB,EAAKC,KACXD,EAAGoxB,YAAYpxB,EAAI,QAASA,GAAGk4B,GAASxvB,KAAK1I,IAC7CA,EAAGoxB,YAAYpxB,EAAI,SAAUA,GAAGk4B,GAASxvB,KAAK1I,IAC9CA,EAAGoxB,YAAYpxB,EAAI,OAAQA,GAAG0oC,GAAQhgC,KAAK1I,IAC3CA,EAAGoxB,YAAYpxB,GAAGuoC,GAAS,UAAWvoC,GAAG2oC,GAAUjgC,KAAK1I,IACxDA,EAAGoxB,YAAYpxB,GAAGuoC,GAAS,QAASvoC,GAAG4oC,GAASlgC,KAAK1I,IACrDA,EAAGoxB,YAAYpxB,GAAGuoC,GAAS,SAAUvoC,GAAG6oC,GAAUngC,KAAK1I,IACvDqI,MAAMypB,UACF9xB,EAAG4wB,SAAS5wB,EAAG2/B,MACpB,CAED+I,IAAQzkC,GAEN+V,SAASE,QAAQjW,GACL+V,SAAS6B,KAFV5b,KAEmB,OAAQ,CAAEiE,KAAM,SAAUyC,KAAM1C,EAAEtE,OAAOgH,KAAMwU,IAAKlX,IAAK,GAAM,GAAM,IAFxFhE,KAGCg6B,OACb,CAED0O,IAAU1kC,GACR,MAAMjE,EAAKC,KACG,WAAVgE,EAAEmY,MACDpc,EAAGR,YAAaQ,EAAGi6B,QACtBjgB,SAASE,QAAQjW,GAEpB,CAED2kC,IAAS3kC,GACIhE,KACR2wB,SAAU,CACd,CAEDiY,IAAU5kC,GACGhE,KACR2wB,SAAU,CACd,CAEDsH,IAASj0B,GAEP,MAAMjE,EAAKC,KACLiuB,EAASluB,GAAG8oC,GAAkB7kC,GACpC,IAAKiqB,EAAQ,OAEb,MAAM6a,EAAkB,OAAX7a,EACP8a,EAAQh2B,EAAMsE,SAAStX,EAAI,QAGjC,GAFqB+oC,GAAQC,EAAMjqC,OAAS,EAE1B,CAChB,MAAMgX,EAAUizB,EAAM7iC,QAAO8iC,GAAgC,GAAxBA,EAAK5wB,kBAC1CtC,EAAQrT,SAAQumC,GAAQjpC,GAAGkpC,GAAYD,KAChB,IAAnBlzB,EAAQhX,QAAciqC,EAAMtmC,SAAQumC,GAAQjpC,GAAGmpC,GAAYF,KAE/D,MAAMxoB,EAAM1K,EAAQjP,KAAImiC,GAAQj2B,EAAMsE,SAAS2xB,EAAM,2BAA2B9iC,QAAO3F,GAA4B,GAAtBA,EAAG6X,oBAEhG,YADIoI,EAAI1hB,OAAS,GAAGib,SAAS6B,KAAK7b,EAAI,QAAS,CAAEkE,KAAM,SAAUyC,KAAM8Z,IAAO,GAAM,GAAM,GAE3F,CAED,IAAIje,GAAM,EACV,IACEA,EAAMwX,SAAS6B,KAAK7b,EAAI,SAAU,CAAEkE,KAAM,SAAUmG,GAAI0+B,EAAM5tB,IAAKlX,IAAK,GAAM,GAAM,EAGrF,CAFS,QACJzB,GAAKxC,EAAGi6B,MAAM,KAAM8O,EACzB,CACF,CAEDI,IAAYF,GACV,IACEjvB,SAAS6B,KAAKotB,EAAM,SAAU,CAAE/a,OAAQ,UAGzC,CAFC,MAAOjqB,GAER,CACF,CAEDilC,IAAYD,GACV,IACEA,EAAKlO,gBAGN,CAFC,MAAO92B,GAER,CACF,CAEDgqB,IAAWhqB,GACT,MAAMzD,EAAKyD,EAAE6c,eAAe5O,QAC5B,OAAO1R,GAAIG,SAASutB,QAAUjqB,EAAEtE,OAAOuuB,QAAU1tB,GAAI0D,IACtD,CAED4kC,IAAkB7kC,GAChB,MAAMiqB,EAASjuB,MAAKguB,GAAWhqB,GACzB8kC,EAAOV,UAASxN,GAASh4B,SAASqrB,GAExC,OADI6a,GAAM/uB,SAASE,QAAQjW,GACpB8kC,EAAO7a,EAAS,IACxB,CAUDkb,KAAK9K,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO5lC,GAAa,GAC5D,MAAMQ,EAAKC,KAMX,GALAD,EAAGs+B,MAAQA,EACXt+B,EAAG0R,KAAOuvB,EACVjhC,EAAGR,WAAaA,EAChBQ,EAAGolC,SAAWA,EACdplC,EAAG2/B,OACCyF,GAAY5lC,EAAY,OAAOQ,EAAGy2B,UAAU,SACjD,CAED4S,QAAQ/K,EAAQ,GAAI2C,EAAU,IAE5B,OADWhhC,KACDmpC,KAAK9K,EAAO2C,GAAS,GAAM,EACtC,CAEDqI,OAAOhL,EAAQ,GAAI2C,EAAU,IAE3B,OADWhhC,KACDmpC,KAAK9K,EAAO2C,GAAS,GAAM,EACtC,CAKDtB,KAAK17B,GACH+V,SAASE,QAAQjW,GAEL+V,SAAS6B,KADV5b,KACmB,OAAQ,CAAEiE,KAAM,WAAY,GAAM,GAAM,KAD3DjE,KAEC2wB,SAAU,EACvB,CAKDqJ,MAAMh2B,EAAGoG,GAAK,GACZ2P,SAASE,QAAQjW,GAEL+V,SAAS6B,KADV5b,KACmB,QAAS,CAAEiE,KAAM,SAAU6kC,KAAM1+B,IAAM,GAAM,GAAM,KADtEpK,KAEC2wB,SAAU,EACvB,CAKDjZ,SACa1X,KACR2wB,SADQ3wB,KACM2wB,OAClB,CAMD6X,YACE,MAAMzoC,EAAKC,KACLgpC,EAAOjpC,EAAGsX,SAAStE,EAAMu2B,aAAa,GAAMpjC,QAAO3F,GAAMwS,EAAMokB,UAAU52B,KAAK0R,QACpF,OAAI+2B,IACAjpC,EAAGR,WAAmBQ,GAAGwpC,GACzBxpC,EAAGolC,SAAiBplC,GAAGypC,GACpBzpC,EACR,CAEGypC,SACF,OAAOxpC,KAAKoX,MAAM,aACnB,CAEGmyB,SACF,OAAOvpC,KAAKoX,MAAM,iBACnB,CAEDwoB,MACE,MAAM7/B,EAAKC,KACX+S,EAAM2E,OAAO3X,GAAGypC,GAAazpC,EAAGolC,UAChCpyB,EAAM2E,OAAO3X,GAAGwpC,GAAiBxpC,EAAGR,YACpC,MAAMqI,EAAM,mBAAmB7H,EAAG0pC,QAC5BC,EAAS3pC,EAAGqX,MAAM,gBACxBrE,EAAM6E,YAAY8xB,EAAQ9hC,GAAK,GAC3B7H,GAAGypC,KAAazpC,GAAGypC,GAAY3F,UAAY9jC,EAAG4pC,UAC9C5pC,GAAGwpC,KAAiBxpC,GAAGwpC,GAAgB1F,UAAY9jC,EAAGm7B,aAC3D,CAQD0O,IAAczqC,EAAO,GAAIgY,EAAM,IAE7B,IAAI5W,EAAKpB,EADEa,KACQgQ,KAAK3P,cAAc,cAAclB,OAAY,KAEhE,OADKoB,IAAIA,EAFEP,KAEMgQ,KAAK3P,cAAc8W,IAC7B5W,CACR,CAKDspC,QAEC,CAKDC,QAEC,CAEGxB,SACF,OAAOtoC,KAAKoX,MAAM,SACnB,CAEGinB,YAGF,OAAOr+B,KAAKoX,MAAM,qBACnB,CAEGinB,UAAMh1B,EAAM,IACd0J,EAAMyf,QAAQxyB,KAAKq+B,MAAOh1B,EAC3B,CAEGoI,WAEF,OAAOzR,KAAKoX,MAAM,aACnB,CAEG3F,SAAKpI,EAAM,IACb0J,EAAMyf,QAAQxyB,KAAKyR,KAAMpI,EAC1B,CAEGsnB,cACF,OAAO7f,OAAOwd,UAAUtuB,KAAM,WAAW,EAC1C,CAEG2wB,YAAQtnB,GAAM,GAChByH,OAAO8f,UAAU5wB,KAAM,UAAWqJ,EACnC,CAEG87B,eACF,OAAOr0B,OAAOwd,UAAUtuB,KAAM,YAAY,EAC3C,CAEGmlC,aAAS97B,GAAM,GACjByH,OAAO8f,UAAU5wB,KAAM,WAAYqJ,GACnCrJ,MAAK4/B,IACN,CAEGrgC,iBACF,OAAOuR,OAAOwd,UAAUtuB,KAAM,cAAc,EAC7C,CAEGT,eAAW8J,GAAM,GACnByH,OAAO8f,UAAU5wB,KAAM,aAAcqJ,GACrCrJ,MAAK4/B,IACN,CAKG6J,YACF,OAAO34B,OAAOpL,IAAI1F,KAAM,eAAgB,MACzC,CAEGypC,UAAMpgC,EAAM,OACdyH,OAAOvL,IAAIvF,KAAM,eAAgBqJ,GACjCrJ,MAAK4/B,IACN,CAEG+J,eACF,OAAO74B,OAAOpL,IAAI1F,KAAM,YAAa,KACtC,CAEG2pC,aAAStgC,EAAM,MACjByH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EAC/B,CAEG6xB,mBACF,OAAOpqB,OAAOpL,IAAI1F,KAAM,gBAAiB,SAC1C,CAEGk7B,iBAAa7xB,EAAM,UACrByH,OAAOvL,IAAIvF,KAAM,gBAAiBqJ,EACnC,CAEG0gC,kBACF,OAAOj5B,OAAOpL,IAAI1F,KAAM,gBAAiB,cAC1C,CAEGgqC,sBACF,OAAOl5B,OAAOpL,IAAI1F,KAAM,oBAAqB,gBAC9C,CAEG4H,UACF,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAOooC,SAAS6B,IACzC,CAEGC,iBACF,OAAOp5B,OAAOpL,IAAI1F,KAAM,cAAe,GACxC,CAEG0iC,gBACF,OAAO5xB,OAAOpL,IAAI1F,KAAM,aAAcooC,SAAS+B,WAChD,CAEGC,eACF,OAAOt5B,OAAOpL,IAAI1F,KAAM,YAAaooC,SAASiC,UAC/C,CAEGxJ,cACF,OAAO/vB,OAAOpL,IAAI1F,KAAM,WAAY,MACrC,CAEGsqC,gBACF,OAAOx5B,OAAOpL,IAAI1F,KAAM,aAAc,GACvC,CAEG4H,QAAIyB,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAChC,CAEG6gC,eAAW7gC,EAAM,IACnB,OAAOyH,OAAOvL,IAAIvF,KAAM,cAAeqJ,EACxC,CAEGq5B,cAAUr5B,EAAM,IAClB,OAAOyH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EACvC,CAEG+gC,aAAS/gC,EAAM,IACjB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACtC,CAEGw3B,YAAQx3B,EAAM,IAChB,OAAOyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EACrC,CAEGihC,cAAUjhC,EAAM,IAClB,OAAOyH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EACvC,CAGDlF,kBAAkBkF,EAAM,IACtB,GAAIA,EAAK,OAAOjB,MAAM4kB,YAAY3jB,GAClC,MAAMtJ,EAAKC,KACX,MAAO,6EAEiBD,EAAG6H,+DACwB7H,EAAG2iC,qDACnB3iC,EAAGqqC,uIAINrqC,EAAG8gC,uJAGuC9gC,EAAG0pC,SAAS1pC,EAAGuqC,iDAC1DvqC,EAAGiqC,uDAAuDjqC,EAAGm7B,iFAE7Dn7B,EAAGgqC,2CAA2ChqC,EAAG4pC,gMAOjF,ECnZY,MAAMY,mBAAmBhb,UAEtCC,KAAS,SAGPjmB,eAAeC,OAAO,cAAe+gC,YACrCxlC,OAAOC,KAAKulC,WACb,CAEU9rC,gCAET,OAAO8wB,UAAUkR,kBADH,CAAC,QAAS,MAAO,QAEhC,CAEDt4B,cACEC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC5B,CAEDrT,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAErD,MAAMtB,EAAKC,KAEX,GAAa,SAATb,EAAiB,OAAOa,KAAK4iB,KAAKvhB,GAEzB,QAATlC,IACF4T,EAAM6E,YAAY7X,GAAG8hC,GAASzgC,GAAU,GACxC2R,EAAM6E,YAAY7X,GAAG8hC,GAASxgC,GAAU,IAG7B,YAATlC,IACGY,EAAG4wB,SAAS5wB,EAAGi6B,SAGT,UAAT76B,GAAoBY,GAAG8hC,IACzB9uB,EAAMyf,QAAQzyB,GAAG8hC,GAASxgC,EAE7B,CAED8C,kBAAkBkF,EAAM,IAEtB,OAAKA,GADMrJ,KACIknC,kBAAoB,EADxBlnC,MACqC2nC,KACzCv/B,MAAM4kB,YAAY3jB,EAC1B,CAEDwoB,UACE,MAAM9xB,EAAKC,KACPD,GAAGyvB,KACPzvB,GAAGyvB,IAAS,EACZzvB,EAAGi6B,QACHj6B,EAAGoxB,YAAYpxB,GAAG+mC,GAAO,SAAU/mC,GAAGk4B,GAASxvB,KAAK1I,IACpDqI,MAAMypB,UACP,CAEGjqB,UACF,OAAOkJ,OAAOpL,IAAI1F,KAAM,MACzB,CAEG4H,QAAIyB,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAChC,CAEGg1B,YACF,OAAOvtB,OAAOpL,IAAI1F,KAAM,QACzB,CAEGq+B,UAAMh1B,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EAClC,CAEG0+B,WACF,OAAOj3B,OAAOwd,UAAUtuB,KAAM,OAC/B,CAEGitB,aAEF,OAAOnc,OAAOwd,UADHtuB,KACiB,QADjBA,KAC4Bq+B,MACxC,CAEGlR,aACF,MAAO,eACR,CAED6M,QACEh6B,MAAK8mC,IAAO9M,OACb,CAED0F,OACE1/B,MAAK8mC,IAAOpH,MACb,CAEDhoB,SACE1X,MAAK8mC,IAAOpvB,QACb,CAQDswB,WAAWxvB,EAAQ,IACjB,IAAKxS,MAAMyH,QAAQ+K,GAAQ,OAAO,EAClC,GAAqB,IAAjBA,EAAM1Z,OAAc,OAAO,EAC/B,MACMipC,EADK/nC,KACK+nC,KAAO,qBAAuB,GACxCnY,EAAOiV,OAAOkC,SAASvuB,EAAOuvB,GAEpC,OADAh1B,EAAMyf,QAHKxyB,MAGM8mC,GAAOlX,EAAK5mB,KAAK,MAC3B,CACR,CAEG89B,SACF,OAAO9mC,KAAKoX,MAAM,iBACnB,CAEGyqB,SACF,OAAO7hC,KAAKoX,MAAM,mBACnB,CAEDuwB,IAAerzB,GAEb,MAAMvU,EAAKC,KACXsU,EAAWA,GAAYvU,EAAGuU,SAC1B,MAAMqC,EAAO,GAET5W,EAAGs+B,QACL1nB,EAAKW,KAAK,0BACVX,EAAKW,KAAK,sCAAsCvX,EAAG6H,iDACnD+O,EAAKW,KAAKvX,EAAGs+B,OACb1nB,EAAKW,KAAK,cAGZ,MAAM1P,EAAM7H,EAAGgoC,KAAO,qBAAuB,GACvCr0B,EAAOmxB,OAAOuC,QAAQ9yB,EAAU,EAAG1M,GAAK,GAI9C,OAHA+O,EAAKW,KAAK5D,GAEN3T,EAAGs+B,OAAO1nB,EAAKW,KAAK,UACjBX,EAAK3N,KAAK,GAClB,CAYD7E,WAAWkF,EAAM,IACf,MAAM3C,QAAa+a,SAAS2f,SAAS/3B,GACrC,IAAK2C,EAAO2B,WAAWjH,GAAO,OAC9B,MAAM3G,EAAKC,KACX+Z,SAAS2X,kBAAkB3xB,GAC3B,MAAMgL,EAAMgI,EAAM6F,iBAAiBlS,GAGnC,OAFAqM,EAAMyf,QAAQzyB,EAAIgL,GAClBhL,EAAGD,oBACI4G,CACR,CAEDvC,SAAeH,GACb+V,SAASE,QAAQjW,GACjB,MACM0C,EAAO1C,EAAEtE,aADJM,MAEU26B,GAAUj0B,EAAKunB,QAAUvnB,EAAKA,MAAMunB,UAEzDvnB,EAAKzC,KAAO,WACZ8V,SAAS6B,KALE5b,KAKO,SAAU0G,GAAMA,MAAQA,GAAM,GAAM,GAAM,GAC7D,CAEDvC,SAAgB8pB,GACd,IAAI1rB,GAAM,EACV,IAAK0rB,EAAQ,OAAO1rB,EACpB,MAAMxC,EAAKC,KACX,IAEE,MAAMwL,EAAKzL,EADXkuB,EAASjiB,EAAO8F,eAAemc,IAE/B1rB,EAAM2N,WAAWC,WAAW3E,GAC5BjJ,EAAMA,IAAQ2N,WAAWQ,iBAAiBlF,GACtCjJ,IACE2N,WAAWS,gBAAgBnF,SACvBzL,EAAGkuB,KAETluB,EAAGkuB,KAKR,CAFC,MAAOjqB,GACPjE,EAAGooC,QAAQnkC,EACZ,CACD,OAAOzB,CACR,CAED4lC,QAAQnkC,GAEP,ECxMY,MAAMwmC,oBAAoBjb,UAEtChxB,sBAAwB,wCACxBA,iBAAmB,oDACnBA,gBAAkB,uDAGfgL,eAAeC,OAAO,gBAAiBghC,aACvCzlC,OAAOC,KAAKwlC,YACd,CAEU/rC,gCAER,OAAO8wB,UAAUkR,kBADH,CAAC,QAAS,QAAS,YAEnC,CAEDt4B,cACGC,QACApI,MAAKyqC,IACR,CAEDnpC,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACnD,MAAMtB,EAAKC,KACE,UAATb,IAAkBY,GAAG2qC,GAASnzB,UAAYlW,GACjC,UAATlC,IAAkBY,GAAG4qC,GAASvoC,MAAQf,GAC7B,aAATlC,IAAqBY,GAAG4qC,GAAS7gC,UAAYkC,EAAOyL,OAAOpW,GACjE,CAEFopC,MACI,MAAM1qC,EAAKC,KACX,IAAI2W,EAAO3Q,MAAMC,KAAKlG,EAAGuU,UAAUpO,QAAO3F,GAAMA,EAAGkU,MAAoB,SAAZlU,EAAGkU,OAC9D,GAAIkC,EAAK7X,OAAS,EAAG,MAAM,IAAIkO,MAAM,yEAAyEjN,EAAG4U,gBAAgB5U,EAAGrB,MACpIiY,EAAO3Q,MAAMC,KAAKlG,EAAGuU,UAAUpO,QAAO3F,IAAOA,EAAGkU,OAChD,MAAMm2B,EAAU,CAAC,YAEjB,IADgB73B,MAAM8G,UAAUlD,EAAMi0B,GACxB,MAAM,IAAI59B,MAAM+F,MAAM+G,kBAAkB/Z,EAAI6qC,GAC7D,CAEI3d,aAED,OADWjtB,KACDoE,aAAa,SAAUgE,MAAM6kB,MACzC,CAED9oB,oBACG,MAAMpE,EAAKC,KACX,OAAQD,EAAG8qC,QACR,IAAK,WAAY,OAAO9qC,GAAG+qC,KAC3B,IAAK,WAAY,OAAO/qC,GAAGgrC,KAC3B,QAAS,OAAOhrC,GAAGirC,KAExB,CAEDF,MACG,MAAM/qC,EAAKC,KACX,MAAO,2BACWD,EAAG6H,6CACU7H,GAAGkrC,MAAalrC,EAAGmrC,4BAC1CnrC,GAAGorC,mBACHprC,GAAGqrC,iCAENrrC,GAAGopC,kBAEV,CAED4B,MACG,MAAMhrC,EAAKC,KACX,MAAO,2BACWD,EAAG6H,oDAEb7H,GAAGqrC,4CAEMrrC,GAAGkrC,MAAalrC,EAAGmrC,4BAC5BnrC,GAAGorC,iCAENprC,GAAGopC,mCAGV,CAED6B,MACG,MAAMjrC,EAAKC,KACX,MAAO,sCACsBD,EAAG6H,mBAC3B7H,GAAGsrC,gBACHtrC,GAAGurC,gBACHvrC,GAAGopC,kBAEV,CAEGwB,SACD,OAAO3qC,KAAKoX,MAAM,QACpB,CAEGszB,SACD,OAAO1qC,KAAKoX,MAAM,QACpB,CAEG+zB,SACD,MAAMprC,EAAKC,KACLkO,EAAMnO,EAAGqX,MAAM,YACrB,GAAIlJ,EAAK,OAAOA,EAAIqJ,UACpB,MAAMg0B,EAASxrC,EAAGyrC,OAAS,OAAOzrC,EAAGZ,QAAU,GAC/C,MAAO,mCAAmCY,GAAG0rC,MAAa1rC,EAAG0rC,8BAClDF,WAAgBxrC,EAAGZ,eAAeY,GAAGkE,OAAUlE,GAAG07B,sBAClD17B,GAAGm8B,MAAan8B,GAAGo8B,sBACnBp8B,GAAG2rC,MAAiB3rC,GAAG4rC,MAAmB5rC,GAAG6rC,MAAa7rC,GAAGiY,sBAC7DjY,GAAG27B,MAAS37B,GAAGkN,MAAYlN,GAAGqC,MAAUrC,GAAG4W,KAAS5W,GAAG8rC,sBACvD9rC,GAAG+rC,MAAS/rC,GAAGgsC,MAAQhsC,GAAGisC,MAAQjsC,GAAGqC,uBACrCrC,GAAGksC,MAAclsC,GAAGmsC,aAAqBnsC,EAAGosC,gCAC5CpsC,GAAGqsC,MAAarsC,GAAGy9B,MAAaz9B,GAAG+J,MAAa/J,GAAGq8B,sBAEhE,CAEGgP,SACD,MAAMrrC,EAAKC,KACX,MAAO,iBAAiBD,GAAGssC,MAAatsC,EAAGssC,mCAAmCtsC,EAAGZ,SAASY,EAAGqrC,eAC/F,CAEGC,SAED,MAAO,eADIrrC,KACcssC,cADdtsC,MAC+BorC,kBAC5C,CAEGK,SAED,OADWzrC,MACJusC,GAAqB,wBADjBvsC,MAEJwsC,GAAiB,aACjB,cACT,CAEGH,SACD,MAAMtsC,EAAKC,KACX,OAAID,GAAGwsC,GAAqB,mBACV,aAAdxsC,EAAG8qC,OAA8B,OAC9B9qC,GAAG0sC,GAAc,aAAe,EACzC,CAEGxB,SACD,MAAMlrC,EAAKC,KACX,OAAID,GAAGwsC,GACGxsC,GAAG2sC,GAAY,mCAAqC,aAEvD,EACT,CAEGpB,SACD,MAAMvrC,EAAKC,KACX,MAAO,uBACOD,GAAGkrC,MAAalrC,EAAGmrC,sDAE5BnrC,GAAGorC,6CAGV,CAEGhC,SACD,MAAMppC,EAAKC,KACX,OAAKD,GAAG4sC,IACH5sC,GAAG6sC,GACJ7sC,EAAG8sC,QAAgB,4CAElB9sC,GAAG6sC,gBACH7sC,GAAGgiC,mBAEDhiC,GAAG6sC,GAPkB,EAQ9B,CAEG1Q,SACD,OAAOl8B,KAAKk8B,SAAW,WAAa,EACtC,CAEGC,SACD,OAAOn8B,KAAKm8B,WAAa,WAAa,EACxC,CAEG0Q,cACD,MAAoC,UAA7B/7B,OAAOpL,IAAI1F,KAAM,OAC1B,CAEG+hC,SAED,OADW/hC,KACD6sC,QAAU,aADT7sC,KACyB+hC,aAAe,EACrD,CAEG99B,SAED,OADWjE,MACD0sC,GAAY,WADX1sC,KAC2BiE,IACxC,CAEGsoC,SACD,MAAMxsC,EAAKC,KACX,OAAOD,GAAG+sC,IAAc/sC,GAAGgtC,IAAYhtC,GAAG2sC,EAC5C,CAEGC,SACD,OAAOpjC,eAAe7D,IAAI,aAC5B,CAEGknC,SACD,MAAM7sC,EAAKC,KACLm6B,EAAMp6B,EAAG8sC,QAAU,GAAK,WAAW9sC,EAAGZ,QAC5C,OAAOY,EAAGosC,YAAYrlC,OAAS,0BAA0B/G,EAAGmW,qBAAqBnW,EAAGosC,gBAAgBhS,kBAAsB,EAC5H,CAEGsB,SACD,OAAOz7B,KAAKy7B,YAAc,gBAAgBz7B,KAAKy7B,eAAiB,EAClE,CAEGxuB,SACD,MAAMlN,EAAKC,KACX,OAAOD,GAAG2U,IAAW3U,EAAGkN,QAAU,YAAYlN,EAAGkN,WAAa,EAChE,CAEGyuB,SACD,MAAM37B,EAAKC,KACX,OAAOD,GAAG2U,IAAW3U,EAAG27B,KAAO,SAAS37B,EAAG27B,QAAU,EACvD,CAEGU,SACD,OAAOp8B,KAAKo8B,OAAS,SAAW,EAClC,CAEGtyB,SACD,OAAO9J,KAAK8J,SAAW,WAAa,EACtC,CAEGkO,SAED,OADWhY,MACDusC,IADCvsC,KACkBgY,QAAU,UAAY,EACrD,CAEGy0B,SACD,MAAuB,aAAhBzsC,KAAK6qC,MACd,CAEGiC,SACD,MAAqB,aAAd9sC,KAAKiE,IACd,CAEG8oC,SACD,MAAqB,UAAd/sC,KAAKiE,IACd,CAEGyoC,SACD,MAAqB,WAAd1sC,KAAKiE,IACd,CAEGwI,SACD,MAAqB,WAAdzM,KAAKiE,IACd,CAEGuoC,SACD,MAAqB,UAAdxsC,KAAKiE,IACd,CAEGyQ,SACD,MAAqB,SAAd1U,KAAKiE,IACd,CAEG+oC,SACD,MAAqB,cAAdhtC,KAAKiE,IACd,CAEGgpC,SACD,MAAqB,UAAdjtC,KAAKiE,IACd,CAEGipC,SACD,MAAqB,QAAdltC,KAAKiE,IACd,CAEGie,SACD,MAAqB,SAAdliB,KAAKiE,IACd,CAEG2nC,SACD,OAAO5rC,KAAK4rC,SAAW,WAAa,EACtC,CAEGQ,SACD,OAAOpsC,KAAKosC,SAAW,WAAa,EACtC,CAEG5O,SACD,OAAOx9B,KAAKw9B,SAAW,WAAa,EACtC,CAEGqO,SACD,MAAM9rC,EAAKC,KACX,OAAOD,GAAGmiB,IAAWniB,EAAG8rC,OAAS,WAAW9rC,EAAG8rC,UAAY,EAC7D,CAEGF,SACD,OAAO3rC,KAAK2rC,eAAiB,mBAAmB3rC,KAAK2rC,kBAAoB,EAC3E,CAEGD,SACD,OAAO1rC,KAAK0rC,aAAe,iBAAiB1rC,KAAK0rC,gBAAkB,EACrE,CAEGtpC,SACD,OAAOpC,KAAKoC,MAAQ,UAAUpC,KAAKoC,SAAW,EAChD,CAEGuU,QACD,OAAO3W,KAAK2W,KAAO,SAAS3W,KAAK2W,QAAU,EAC7C,CAEGq1B,SAED,OAAO7/B,MADInM,KACKgsC,KAAO,GAAK,QADjBhsC,KAC4BgsC,MACzC,CAEGD,SAED,OAAO5/B,MADInM,KACK+rC,KAAO,GAAK,QADjB/rC,KAC4B+rC,MACzC,CAEGG,SAED,OAAO//B,MADInM,KACKksC,WAAa,GAAK,cADvBlsC,KACwCksC,YACrD,CAEGD,SAED,OAAO9/B,MADInM,KACKisC,WAAa,GAAK,cADvBjsC,KACwCisC,YACrD,CAEGH,SAED,OAAO3/B,MADInM,KACK8rC,MAAQ,GAAK,SADlB9rC,KAC8B8rC,OAC3C,CAEGlkC,UACD,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,GACjC,CAEG4H,QAAIyB,EAAM,IACX,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EACjC,CAEGijC,gBACD,OAAOx7B,OAAOpL,IAAI1F,KAAM,aAAcwqC,YAAY2C,eACpD,CAEGb,cAAUjjC,EAAM,IACjB,OAAOyH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EACxC,CAEG6hC,gBACD,MACM7hC,EAAqB,eADhBrJ,KACK6qC,OAA2B,IAAM,KACjD,OAAO/5B,OAAOpL,IAFH1F,KAEW,aAAc,UAAUqJ,YAAcA,aAC9D,CAEG6hC,cAAU7hC,EAAM,IACjB,OAAOyH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EACxC,CAEGgjC,eACD,OAAOv7B,OAAOpL,IAAI1F,KAAM,YAAawqC,YAAY4C,UACnD,CAEGf,aAAShjC,EAAM,IAChB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACvC,CAEGoiC,eAGD,OAFWzrC,KACK07B,MAAM50B,OAAOhI,OAAS,EAAI,mBAAqB,IACjDgS,OAAOpL,IAAI1F,KAAM,YAAa,GAC9C,CAEGyrC,aAASpiC,EAAM,IAChB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACvC,CAKGwhC,aACD,OAAO/5B,OAAOpL,IAAI1F,KAAM,SAAU,aACpC,CAEG6qC,WAAOxhC,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACpC,CAEG8iC,kBACD,OAAOr7B,OAAOpL,IAAI1F,KAAM,cAAe,GACzC,CAEGmsC,gBAAY9iC,EAAM,IACnB,OAAOyH,OAAOvL,IAAIvF,KAAM,cAAeqJ,EACzC,CAEG6M,gBACD,MACM1J,EADKxM,KACI6sC,QAAU,QAAU,MACnC,OAAO/7B,OAAOpL,IAAI1F,KAAM,YAAawM,EACvC,CAEG0J,cAAU7M,EAAM,IACjB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACvC,CAEG04B,WACD,OAAOjxB,OAAOpL,IAAI1F,KAAM,OAAQwqC,YAAY6C,SAC9C,CAEGtL,SAAK14B,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAClC,CAEG+hC,YACD,OAAOt6B,OAAOpL,IAAI1F,KAAM,QAAS,GACnC,CAEGorC,UAAM/hC,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EACnC,CAEGoyB,kBACD,OAAO3qB,OAAOpL,IAAI1F,KAAM,cAAe,GACzC,CAEGy7B,gBAAYpyB,EAAM,IACnB,OAAOyH,OAAOvL,IAAIvF,KAAM,cAAeqJ,EACzC,CAEGlK,WACD,OAAO2R,OAAOpL,IAAI1F,KAAM,OAAQ,GAClC,CAEGb,SAAKkK,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAClC,CAEGpF,WACD,OAAO6M,OAAOpL,IAAI1F,KAAM,OAAQ,OAClC,CAEGiE,SAAKoF,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAClC,CAEG4D,cACD,OAAO6D,OAAOpL,IAAI1F,KAAM,UAAW,GACrC,CAEGiN,YAAQ5D,EAAM,IACf,OAAOyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EACrC,CAEGqyB,WACD,OAAO5qB,OAAOpL,IAAI1F,KAAM,OAAQ,GAClC,CAEG07B,SAAKryB,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAClC,CAEG+yB,aACD,OAAOp8B,KAAKoE,aAAa,SAC3B,CAEGg4B,WAAO/yB,EAAM,IACd,OAAOyH,OAAO4G,OAAO1X,KAAM,SAAUgM,EAAOkF,OAAO7H,GACrD,CAEGS,eACD,OAAO9J,KAAKoE,aAAa,WAC3B,CAEG0F,aAAST,EAAM,IAChB,OAAOyH,OAAO4G,OAAO1X,KAAM,WAAYgM,EAAOkF,OAAO7H,GACvD,CAEG2O,cACD,OAAOhY,KAAKoE,aAAa,UAC3B,CAEG4T,YAAQ3O,EAAM,IACf,OAAOyH,OAAO4G,OAAO1X,KAAM,UAAWgM,EAAOkF,OAAO7H,GACtD,CAEGuiC,eACD,OAAO5rC,KAAKoE,aAAa,WAC3B,CAEGwnC,aAASviC,EAAM,IAChB,OAAOyH,OAAO4G,OAAO1X,KAAM,WAAYgM,EAAOkF,OAAO7H,GACvD,CAEG+iC,eACD,OAAOpsC,KAAKoE,aAAa,WAC3B,CAEGgoC,aAAS/iC,EAAM,IAChB,OAAOyH,OAAO4G,OAAO1X,KAAM,WAAYgM,EAAOkF,OAAO7H,GACvD,CAEGm0B,eACD,OAAOx9B,KAAKoE,aAAa,WAC3B,CAEGo5B,aAASn0B,EAAM,IAChB,OAAOyH,OAAO4G,OAAO1X,KAAM,WAAYgM,EAAOkF,OAAO7H,GACvD,CAEGwiC,aACD,OAAO/6B,OAAOpL,IAAI1F,KAAM,SAAU,GACpC,CAEG6rC,WAAOxiC,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACpC,CAEG6yB,eACD,OAAOl8B,KAAKoE,aAAa,WAC5B,CAEG+3B,iBACA,OAAOn8B,KAAKoE,aAAa,aAC5B,CAEIunC,qBACD,OAAO76B,OAAOpL,IAAI1F,KAAM,iBAAkB,GAC5C,CAEG2rC,mBAAetiC,EAAM,IACtB,OAAOyH,OAAOvL,IAAIvF,KAAM,iBAAkBqJ,EAC5C,CAEGqiC,mBACD,OAAO56B,OAAOpL,IAAI1F,KAAM,eAAgB,GAC1C,CAEG0rC,iBAAariC,EAAM,IACpB,OAAOyH,OAAOvL,IAAIvF,KAAM,eAAgBqJ,EAC1C,CAEGjH,YACD,OAAO0O,OAAOpL,IAAI1F,KAAM,QAAS,GACnC,CAEGoC,UAAMiH,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EACnC,CAEGsN,WACD,OAAO7F,OAAOpL,IAAI1F,KAAM,OAAQ,GAClC,CAEG2W,SAAKtN,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAClC,CAEG6iC,gBACD,OAAOp7B,OAAOgvB,SAAS9/B,KAAM,YAAaoR,IAC5C,CAEG86B,cAAU7iC,EAAM,IACjB,OAAOyH,OAAOivB,SAAS//B,KAAM,YAAaqJ,EAC5C,CAEG4iC,gBACD,OAAOn7B,OAAOgvB,SAAS9/B,KAAM,YAAaoR,IAC5C,CAEG66B,cAAU5iC,EAAM,IACjB,OAAOyH,OAAOivB,SAAS//B,KAAM,YAAaqJ,EAC5C,CAEG2iC,UACD,OAAOl7B,OAAOpL,IAAI1F,KAAM,MAAOoR,IACjC,CAEG46B,QAAI3iC,EAAM,IACX,OAAOyH,OAAOivB,SAAS//B,KAAM,MAAOqJ,EACtC,CAEG0iC,UACD,OAAOj7B,OAAOpL,IAAI1F,KAAM,MAAOoR,IACjC,CAEG26B,QAAI1iC,EAAM,IACX,OAAOyH,OAAOivB,SAAS//B,KAAM,MAAOqJ,EACtC,CAEGyiC,WACD,OAAOh7B,OAAOgvB,SAAS9/B,KAAM,OAAQoR,IACvC,CAEG06B,SAAKziC,EAAM,IACZ,OAAOyH,OAAOivB,SAAS//B,KAAM,OAAQqJ,EACvC,CAEGmiC,aACD,OAAOxrC,KAAKoE,aAAa,SAC3B,ECvlBW,MAAMkpC,iBAAiB/d,iBAG9BhmB,eAAeC,OAAO,YAAa8jC,UACnCvoC,OAAOC,KAAKsoC,SACf,CAEDnlC,cACIC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC9B,CAED1T,uBACI4rB,OAAO6T,aAAa1gC,MAAMyC,SAAQlC,GAAO2E,cAAcmC,WAAW9G,EAAGG,QAAQyqB,SAC7E/iB,MAAMnH,sBACT,CAEDkD,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KACL2W,EAAOkW,OAAO6T,aAAa3gC,GAAI8G,KAAI,CAACtG,EAAI2jB,IAAQnkB,GAAGwtC,GAAchtC,EAAI2jB,KACrExQ,QAAajT,QAAQmS,IAAI+D,GACzB1S,EAAOlE,EAAG0sC,WAAa,cAAgB,WAE7C,MAAO,eADK1sC,EAAGktB,OAAS,GAAK,6BACiBhpB,KAAQlE,EAAG6H,QAAQ7H,EAAGgxB,0BAA0BhxB,EAAGgxB,YAAYrd,EAAK1K,KAAK,WAC1H,CAOGikB,aACA,MAAMltB,EAAKC,KACX,GAAID,EAAGyQ,iBAAiB88B,SAAU,OAAO,EAEzC,MAAM/sC,EAAKR,EAAGwW,QAAQ,aACtB,GAAIhW,GAAMA,IAAOR,EAAI,OAAO,EAE5B,MAAMqW,EAASmK,aAAaW,SAASnhB,GAC/B6H,EAAM4J,EAASY,qBAAqBgE,GAC1C,OAAOxO,EAAIsK,QAAQ,UAAW,UAAYtK,EAAIsK,QAAQ,WAAY,IACrE,CAEGib,aACA,MAAO,eACV,CAUDhpB,SAAoB5D,EAAI2jB,GACpB,MAAMnkB,EAAKC,KACXO,EAAGG,QAAQyqB,MAAQ,GAAGprB,EAAGrB,MAAMwlB,IAC/B,MAAMha,EAAMnK,GAAGytC,GAAWjtC,GAEpB7B,EAAKoS,OAAOpL,IAAInF,EAAI,MACpBpB,EAAO2R,OAAOpL,IAAInF,EAAI,QACtB2N,EAAM2e,OAAOmC,QAAQzuB,EAAIR,EAAGktB,QAE5B7nB,EAAQrF,GAAG0tC,GAAeltC,GAChC2E,cAAcuB,QAAQlG,EAAGG,QAAQyqB,MAAO/lB,GAExC,MAAMsoC,EAAQtoC,EAAMtG,OAAS,GAGvB4X,EAAQ,eAFF3W,GAAG4tC,GAAeptC,EAAImtC,MAEEntC,EAAGG,QAAQyqB,uBAAuB5qB,EAAGG,QAAQyqB,cAAchsB,GAAQyM,KAAKE,WAAWoC,UAEvH,GAAIhE,EAAK,CACL,MAAM8gB,EAAMjrB,GAAG6tC,GAAUrtC,GACzB,GAAW,GAAPyqB,EAAU,OAAOtU,EACrB,IAAIm3B,EAAS,GAETA,EADA7iB,EAAM,EACGjrB,EAAG0sC,WAAa,MAAQ,QAExB1sC,EAAG0sC,WAAa,SAAW,MAExC,MAAM7lC,EAAQ,wBAAwBinC,aAAkB9tC,EAAG0sC,WAAa,aAAe,mBAAmB/tC,oBAC1G,OAAc,GAAPssB,EAAW,CAACtU,EAAO9P,GAAOoC,KAAK,IAAM,CAACpC,EAAO8P,GAAO1N,KAAK,GACnE,CAED,OAAO0N,CACV,CAOD+2B,IAAeltC,GACX,MACMutC,EADK9tC,KACIysC,WAAa,SAAW,QACjCT,EAAMl7B,OAAOgvB,SAASv/B,EAAI,MAAO,GACjCwrC,EAAMj7B,OAAOgvB,SAASv/B,EAAI,MAAO,GASvC,MAAO,CAFMyrC,EAAM,EAAI,OAAO8B,MAAQ9B,OAAW,GACpCD,EAAM,EAAI,OAAO+B,MAAQ/B,OAAW,IAC7B/iC,KAAK,GAC5B,CAOD2kC,IAAeptC,EAAImtC,GAAQ,GACvB,MACMxjC,EADKlK,MACIwtC,GAAWjtC,GAEpBqH,EAAMkJ,OAAOpL,IAAInF,EAAI,OAC3B,IAAIwtC,EAAOj9B,OAAOpL,IAAInF,EAAI,SACtBytC,EAAOl9B,OAAOpL,IAAInF,EAAI,SAE1BytC,EAAOA,EAAO,mBAAmBA,IAAS,GAC1CD,EAAOA,EAAO,eAAeA,IAAS,GAEtC,MAAMzgB,EAAM,CAAC,SAAU0gB,EAAMD,GAK7B,OAJW,GAAP7jC,GAAyB,GAATwjC,GAAgBpgB,EAAIhW,KAAK,aAE7CgW,EAAIhW,KAAK1P,GAEF0lB,EAAItkB,KAAK,IACnB,CAOD4kC,IAAUrtC,GACN,MACM62B,EAAQ72B,EAAG0tC,uBACXxO,EAAMl/B,EAAGyV,mBACf,OAAKypB,GAAQrI,EACRqI,EACArI,GALMp3B,MAOHwtC,GAAW/N,GAPRz/B,MAQHwtC,GAAWpW,GAEZ,GAF4B,EAHhB,GADD,EADS,CAQ9B,CAODoW,IAAWjtC,GACP,OAAOuQ,OAAOwd,UAAU/tB,EAAI,aAAa,EAC5C,CAMGksC,iBACA,MAAgD,aAAzC37B,OAAOpL,IAAI1F,KAAM,OAAQ,WACnC,CAMG4H,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAC3B,CAEG4H,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,EC9KU,MAAM6kC,eAAe3e,iBAI5BhmB,eAAeC,OAAO,UAAW0kC,QACjCnpC,OAAOC,KAAKkpC,OACf,CAEUzvC,gCAEP,OAAO8wB,UAAUkR,kBADH,CAAC,QAElB,CAEDt4B,cACIC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC9B,CAEG/M,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,GAClC,CAEG4H,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAED/H,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACnD,GAAa,SAATlC,EAAiB,OAAOa,KAAK4iB,KAAKvhB,EACzC,CAED8C,kBAAkBkF,EAAM,IACpB,MACMqK,QADK1T,MACWQ,KACtB,MAAO,0BAFIR,KAEyB4H,QAAQ8L,SAC/C,CAEDvP,WACI,MAAMpE,EAAKC,KAIX,OAHa6sB,OAAO6T,aAAa3gC,GAAI8G,KAAItG,GAAMR,GAAG2T,GAAMnT,KAG5CyI,KAAK,GACpB,CAGD0K,IAAMnT,GACF,MAAMR,EAAKC,KACLghC,EAAUjhC,GAAGs+B,GAAO99B,GAEpB2N,EAAM2e,OAAOmC,QAAQzuB,GACrBqH,EAAMilB,OAAOgC,OAAOtuB,GACpBwD,EAAO8oB,OAAOoC,QAAQ1uB,GAEtB4tC,EAAYr9B,OAAOs9B,aAAa7tC,GAChC8tC,EAASxhB,OAAO2a,SAASjnC,GAEzBwhC,EAAOlV,OAAOyhB,QAAQ/tC,GACtBguC,EAASxM,EAAO,aAAaA,UAAe,GAE5C9uB,EAASlT,GAAG+uB,GAAWvuB,GAAM,SAAW,GAI9C,MAAO,OAHQR,EAAGsuB,WAAa,sBAAwB,0DAGepb,KAAUrL,6BAChE7D,MAHAA,GAAiB,MAATA,EAAe,UAAU8oB,OAAOiB,UAAUvtB,KAAQ,MAGtC8tC,KAAUF,KAAaI,KAAUrgC,GAAO8yB,OAC/E,CAED3C,IAAO99B,GACH,OAAOuQ,OAAOpL,IAAInF,EAAI,QACzB,CAEDuuB,IAAWvuB,GACP,OAAOuQ,OAAOwd,UAAU/tB,EAAI,SAC/B,CAEG8tB,iBACA,OAAOvd,OAAOwd,UAAUtuB,KAAM,cAAc,EAC/C,CASDmE,WAAWkF,EAAM,IACb,MAAM3C,QAAa+a,SAAS2f,SAAS/3B,GACrC,IAAK2C,EAAO2B,WAAWjH,GAAO,OAC9B,MAAM3G,EAAKC,KACL+K,EAAMgI,EAAM6F,iBAAiBlS,GAInC,OAHAqM,EAAMyf,QAAQzyB,EAAIgL,GAClBhL,EAAGkB,uBACHlB,EAAGD,oBACI4G,CACV,ECrGU,MAAM8nC,gBAAgBjf,UAEnChxB,UAAkB,CAAC,KAAM,iBAGvBgL,eAAeC,OAAO,WAAYglC,SAClCzpC,OAAOC,KAAKwpC,QACb,CAEU/vC,gCAET,OAAO8wB,UAAUkR,kBADH,CAAC,aAAc,WAAY,QAAS,UAAW,YAAa,iBAE3E,CAEDn/B,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACrD,MAAMtB,EAAKC,KACXD,GAAG6/B,KACU,YAATzgC,IACEY,EAAG4wB,SACL5wB,GAAG0uC,GAAQ,UACX1uC,GAAG0uC,GAAQ,mBACX1uC,EAAGyoC,YAAYvR,UAEfl3B,GAAG2uC,GAAQ,UACX3uC,GAAG2uC,GAAQ,mBACX3uC,EAAG4uC,UAEL50B,SAAS6B,KAAK7b,EAAI,UAAW,CAAEkE,KAAM,QAASmG,GAAIrK,EAAG4wB,UAAW,GAAM,GAEzE,CAEDkB,UACE,MAAM9xB,EAAKC,KACXD,EAAGoxB,YAAYpxB,EAAI,QAASA,GAAGk4B,GAASxvB,KAAK1I,IAC7CA,EAAGoxB,YAAYpxB,EAAI,SAAUA,GAAGk4B,GAASxvB,KAAK1I,IAC9CA,EAAGoxB,YAAYpxB,EAAI,OAAQA,GAAG0oC,GAAQhgC,KAAK1I,IAC3CA,EAAGoxB,YAAYjyB,SAAU,QAASa,GAAG2oC,GAAUjgC,KAAK1I,IACpDqI,MAAMypB,UACF9xB,EAAG4wB,SAAS5wB,EAAG2/B,MACpB,CAED+I,IAAQzkC,GAEN+V,SAASE,QAAQjW,GACL+V,SAAS6B,KAFV5b,KAEmB,OAAQ,CAAEiE,KAAM,QAASyC,KAAM1C,EAAEtE,OAAOgH,KAAMwU,IAAKlX,IAAK,GAAM,GAAM,IAFvFhE,KAGCg6B,OACb,CAED0O,IAAU1kC,GACGhE,KACHT,YACM,WAAVyE,EAAEmY,KAFKnc,KAEgBg6B,OAC5B,CAED/B,IAASj0B,GAEP,MAAMjE,EAAKC,KACLiuB,EAASluB,GAAG8oC,GAAkB7kC,GACpC,IAAKiqB,EAAQ,OAEb,MAAM6a,EAAkB,OAAX7a,EACP8a,EAAQh2B,EAAMsE,SAAStX,EAAI,QAGjC,GAFqB+oC,GAAQC,EAAMjqC,OAAS,EAE1B,CAChB,MAAMgX,EAAUizB,EAAM7iC,QAAO8iC,GAAgC,GAAxBA,EAAK5wB,kBAC1CtC,EAAQrT,SAAQumC,GAAQjpC,GAAGkpC,GAAYD,KAChB,IAAnBlzB,EAAQhX,QAAciqC,EAAMtmC,SAAQumC,GAAQjpC,GAAGmpC,GAAYF,KAE/D,MAAMxoB,EAAM1K,EAAQjP,KAAImiC,GAAQj2B,EAAMsE,SAAS2xB,EAAM,2BAA2B9iC,QAAO3F,GAA4B,GAAtBA,EAAG6X,oBAEhG,YADIoI,EAAI1hB,OAAS,GAAGib,SAAS6B,KAAK7b,EAAI,QAAS,CAAEkE,KAAM,QAASyC,KAAM8Z,IAAO,GAAM,GAAM,GAE1F,CAED,IAAIje,GAAM,EACV,IACEA,EAAMwX,SAAS6B,KAAK7b,EAAI,SAAU,CAAEkE,KAAM,QAASmG,GAAI0+B,EAAM5tB,IAAKlX,IAAK,GAAM,GAAM,EAGpF,CAFS,QACJzB,GAAKxC,EAAGi6B,MAAM,KAAM8O,EACzB,CACF,CAEDI,IAAYF,GACV,IACEjvB,SAAS6B,KAAKotB,EAAM,SAAU,CAAE/a,OAAQ,UAGzC,CAFC,MAAOjqB,GAER,CACF,CAEDilC,IAAYD,GACV,IACEA,EAAKlO,gBAGN,CAFC,MAAO92B,GAER,CACF,CAEDgqB,IAAWhqB,GACT,MAAMzD,EAAKyD,EAAE6c,eAAe5O,QAC5B,OAAO1R,GAAIG,SAASutB,QAAUjqB,EAAEtE,OAAOuuB,QAAU1tB,GAAI0D,IACtD,CAED4kC,IAAkB7kC,GAChB,MAAMiqB,EAASjuB,MAAKguB,GAAWhqB,GACzB8kC,EAAO0F,SAAQ5T,GAASh4B,SAASqrB,GAEvC,OADI6a,GAAM/uB,SAASE,QAAQjW,GACpB8kC,EAAO7a,EAAS,IACxB,CAEGtR,SACF,OAAQ3c,KAAK2c,MACX,IAAK,QAAU,MAAO,WACtB,IAAK,QAAU,MAAO,WAExB,MAAO,EACR,CAEDiyB,IAASjyB,EAAO,IACd,MACMkyB,EADK7uC,KACIoX,MAAM,iBAChBy3B,GACLjvC,uBAAsB,KACpBivC,EAAIr5B,UAAUlV,OAAO,WAAY,YAC7Bqc,GAAMkyB,EAAIr5B,UAAUC,IAAIkH,EAAK,GAEpC,CAKDktB,QACE7pC,MAAK4uC,GAAS,WACf,CAKD9E,QACE9pC,MAAK4uC,GAAS,WACf,CAKDD,SACE3uC,MAAK4uC,IACN,CAUDzF,KAAK9K,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO5lC,GAAa,GAC5D,MAAMQ,EAAKC,KAMX,GALAD,EAAGs+B,MAAQA,EACXt+B,EAAG0R,KAAOuvB,EACVjhC,EAAGR,WAAaA,EAChBQ,EAAGolC,SAAWA,EACdplC,EAAG2/B,OACCyF,GAAY5lC,EAAY,OAAOQ,EAAGy2B,UAAU,SACjD,CAED4S,QAAQ/K,EAAQ,GAAI2C,EAAU,IAE5B,OADWhhC,KACDmpC,KAAK9K,EAAO2C,GAAS,GAAM,EACtC,CAEDqI,OAAOhL,EAAQ,GAAI2C,EAAU,IAE3B,OADWhhC,KACDmpC,KAAK9K,EAAO2C,GAAS,GAAM,EACtC,CAKDtB,KAAK17B,GACH+V,SAASE,QAAQjW,GAEL+V,SAAS6B,KADV5b,KACmB,OAAQ,CAAEiE,KAAM,UAAW,GAAM,GAAM,KAD1DjE,KAEC2wB,SAAU,EACvB,CAKDqJ,MAAMh2B,EAAGoG,GAAK,GACZ2P,SAASE,QAAQjW,GAEL+V,SAAS6B,KADV5b,KACmB,QAAS,CAAEiE,KAAM,QAAS6kC,KAAM1+B,IAAM,GAAM,GAAM,KADrEpK,KAEC2wB,SAAU,EACvB,CAKDjZ,SACa1X,KACR2wB,SADQ3wB,KACM2wB,OAClB,CAMD6X,YACE,MAAMzoC,EAAKC,KACLgpC,EAAOjpC,EAAGsX,SAAStE,EAAMu2B,aAAa,GAAMpjC,QAAO3F,GAAMwS,EAAMokB,UAAU52B,KAAK0R,QACpF,OAAI+2B,IACAjpC,EAAGR,WAAmBQ,GAAGwpC,GACzBxpC,EAAGolC,SAAiBplC,GAAGypC,GACpBzpC,EACR,CAEGypC,SACF,OAAOxpC,KAAKoX,MAAM,YACnB,CAEGmyB,SACF,OAAOvpC,KAAKoX,MAAM,gBACnB,CAEDq3B,IAAQtvC,GACN,MAAMoB,EAAKP,KAAKoX,MAAMjY,GACjBoB,IACLA,EAAGiV,UAAUlV,OAAO,UACpBC,EAAGiV,UAAUC,IAAI,OAAQ,WAC1B,CAEDi5B,IAAQvvC,GACN,MAAMoB,EAAKP,KAAKoX,MAAMjY,GACjBoB,IACLA,EAAGiV,UAAUC,IAAI,UACjBlV,EAAGiV,UAAUlV,OAAO,OAAQ,WAC7B,CAEDs/B,MACE,MAAM7/B,EAAKC,KACX+S,EAAM2E,OAAO3X,GAAGypC,GAAazpC,EAAGolC,UAChCpyB,EAAM2E,OAAO3X,GAAGwpC,GAAiBxpC,EAAGR,YACpC,MAAMqI,EAAM,mBAAmB7H,EAAG0pC,QAC5BC,EAAS3pC,EAAGqX,MAAM,iBACxBrE,EAAM6E,YAAY8xB,EAAQ9hC,GAAK,GAC3B7H,GAAGypC,KAAazpC,GAAGypC,GAAY3F,UAAY9jC,EAAG4pC,UAC9C5pC,GAAGwpC,KAAiBxpC,GAAGwpC,GAAgB1F,UAAY9jC,EAAGm7B,aAC3D,CAQD0O,IAAczqC,EAAO,GAAIgY,EAAM,IAE7B,IAAI5W,EAAKpB,EADEa,KACQgQ,KAAK3P,cAAc,cAAclB,OAAY,KAEhE,OADKoB,IAAIA,EAFEP,KAEMgQ,KAAK3P,cAAc8W,IAC7B5W,CACR,CAGGoc,WACF,OAAO7L,OAAOpL,IAAI1F,KAAM,OAAQ,GACjC,CAEG2c,SAAKtT,EAAM,IACbyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAC1B,CAEGg1B,YAEF,OAAOr+B,KAAKoX,MAAM,eACnB,CAEGinB,UAAMh1B,EAAM,IACd0J,EAAMyf,QAAQxyB,KAAKq+B,MAAOh1B,EAC3B,CAEGoI,WAEF,OAAOzR,KAAKoX,MAAM,cACnB,CAEG3F,SAAKpI,EAAM,IACb0J,EAAMyf,QAAQxyB,KAAKyR,KAAMpI,EAC1B,CAEGsnB,cACF,OAAO7f,OAAOwd,UAAUtuB,KAAM,WAAW,EAC1C,CAEG2wB,YAAQtnB,GAAM,GAChByH,OAAO8f,UAAU5wB,KAAM,UAAWqJ,EACnC,CAEG87B,eACF,OAAOr0B,OAAOwd,UAAUtuB,KAAM,YAAY,EAC3C,CAEGmlC,aAAS97B,GAAM,GACjByH,OAAO8f,UAAU5wB,KAAM,WAAYqJ,GACnCrJ,MAAK4/B,IACN,CAEGrgC,iBACF,OAAOuR,OAAOwd,UAAUtuB,KAAM,cAAc,EAC7C,CAEGT,eAAW8J,GAAM,GACnByH,OAAO8f,UAAU5wB,KAAM,aAAcqJ,GACrCrJ,MAAK4/B,IACN,CAKG6J,YACF,OAAO34B,OAAOpL,IAAI1F,KAAM,eAAgB,MACzC,CAEGypC,UAAMpgC,EAAM,OACdyH,OAAOvL,IAAIvF,KAAM,eAAgBqJ,GACjCrJ,MAAK4/B,IACN,CAEG+J,eACF,OAAO74B,OAAOpL,IAAI1F,KAAM,YAAa,KACtC,CAEG2pC,aAAStgC,EAAM,MACjByH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EAC/B,CAEG6xB,mBACF,OAAOpqB,OAAOpL,IAAI1F,KAAM,gBAAiB,SAC1C,CAEGk7B,iBAAa7xB,EAAM,UACrByH,OAAOvL,IAAIvF,KAAM,gBAAiBqJ,EACnC,CAEG0gC,kBACF,OAAOj5B,OAAOpL,IAAI1F,KAAM,gBAAiB,cAC1C,CAEGgqC,sBACF,OAAOl5B,OAAOpL,IAAI1F,KAAM,oBAAqB,gBAC9C,CAEG8uC,eACF,OAAOh+B,OAAOpL,IAAI1F,KAAM,YAAa,GACtC,CAEGkqC,iBACF,OAAOp5B,OAAOpL,IAAI1F,KAAM,cAAe,GACxC,CAEG0iC,gBACF,OAAO5xB,OAAOpL,IAAI1F,KAAM,aAAc,GACvC,CAEGoqC,eACF,OAAOt5B,OAAOpL,IAAI1F,KAAM,YAAa,GACtC,CAEG6gC,cACF,OAAO/vB,OAAOpL,IAAI1F,KAAM,WAAY,GACrC,CAEGsqC,gBACF,OAAOx5B,OAAOpL,IAAI1F,KAAM,aAAc,GACvC,CAEG8uC,aAASzlC,EAAM,IACjB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACtC,CAEG6gC,eAAW7gC,EAAM,IACnB,OAAOyH,OAAOvL,IAAIvF,KAAM,cAAeqJ,EACxC,CAEGq5B,cAAUr5B,EAAM,IAClB,OAAOyH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EACvC,CAEG+gC,aAAS/gC,EAAM,IACjB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACtC,CAEGw3B,YAAQx3B,EAAM,IAChB,OAAOyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EACrC,CAEGihC,cAAUjhC,EAAM,IAClB,OAAOyH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EACvC,CAGDlF,kBAAkBkF,EAAM,IACtB,GAAIA,EAAK,OAAOjB,MAAM4kB,YAAY3jB,GAClC,MAAMtJ,EAAKC,KACX,MAAO,4CAC8BD,EAAG+uC,uEACc/uC,GAAG4c,8CACtB5c,EAAGmqC,iFACwBnqC,EAAG2iC,uDAC5B3iC,EAAGqqC,4IAINrqC,EAAG8gC,6JAGyC9gC,EAAG0pC,SAAS1pC,EAAGuqC,kDAC7DvqC,EAAGiqC,sDAAsDjqC,EAAGm7B,4DAC5Dn7B,EAAGgqC,0CAA0ChqC,EAAG4pC,8JAOjF,ECtaY,MAAMoF,cAAcxf,iBAG3BhmB,eAAeC,OAAO,SAAUulC,OAChChqC,OAAOC,KAAK+pC,MACf,CAEUtwC,gCAEP,OAAO8wB,UAAUkR,kBADH,CAAC,QAElB,CAEDt4B,cACIC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC9B,CAEDrT,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACnD,GAAa,SAATlC,EAAiB,OAAOa,KAAK4iB,KAAKvhB,EACzC,CAED8C,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KAGLgvC,EAFQniB,OAAO6T,aAAa3gC,GAEf8G,KAAItG,GAAMR,GAAGkvC,GAAkB1uC,KAIlD,MAAO,6CAFKR,GAAGmvC,GAAS,GAAK,iBAGYnvC,GAAGovC,qBACtCH,EAAKhmC,KAAK,gCAGnB,CAEDimC,IAAkB1uC,GAGd,OAFWP,MAEDuU,GAAMhU,EACnB,CAEG4uC,SACA,OAAOnvC,MAAKovC,GAAWpvC,KAC1B,CAEGkvC,SACA,OAAOp+B,OAAOwd,UAAUtuB,KAAM,OAAO,EACxC,CAEDuU,IAAMhU,GAEF,MAAO,uBADIP,MACsBqvC,GAAe9uC,OADrCP,MACgDwhC,GAAKjhC,SACnE,CAEDihC,IAAKjhC,GACD,MAAMR,EAAKC,KACLmuC,EAAYr9B,OAAOs9B,aAAa7tC,GAChC4uC,EAASpvC,GAAGqvC,GAAW7uC,GACvB+uC,EAAYvvC,GAAGwvC,GAAiBhvC,GAChC89B,EAAQt+B,GAAGghC,GAAUxgC,GACrBwhC,EAAOlV,OAAOyhB,QAAQ/tC,GACtBwD,EAAO8oB,OAAOoC,QAAQ1uB,GAItBivC,EAAa,GAFHzN,EAAO,aAAaA,UAAe,MAElB1D,IAC3BoR,EAAU1rC,GAAiB,MAATA,EAAe,UAAU8oB,OAAOiB,UAAUvtB,KAAQ,GACpEgnC,EAAQ1a,OAAO2a,SAASjnC,GAE9B,MAAO,gFAAgF4uC,KAAUG,8BACjFvrC,MAAS0rC,SAAe7jC,KAAKlN,WAAW6oC,KAAS4G,KAAaqB,OAEjF,CAEDH,IAAe9uC,GACX,OAAOuQ,OAAOpL,IAAInF,EAAI,eACzB,CAED6uC,IAAW7uC,GACP,OAAOuQ,OAAOpL,IAAInF,EAAI,UACzB,CAEDgvC,IAAiBhvC,GACb,OAAOP,MAAK8uB,GAAWvuB,GAAM,SAAW,EAC3C,CAEDuuB,IAAWvuB,GACP,OAAOuQ,OAAOwd,UAAU/tB,EAAI,SAC/B,CAEDwgC,IAAUxgC,GACN,OAAOuQ,OAAOpL,IAAInF,EAAI,QACzB,CAUD4D,WAAWkF,EAAM,IACb,MAAM3C,QAAa+a,SAAS2f,SAAS/3B,GACrC,IAAK2C,EAAO2B,WAAWjH,GAAO,OAC9B,MAAM3G,EAAKC,KACX+Z,SAAS2X,kBAAkB3xB,GAC3B,MAAMgL,EAAMgI,EAAM6F,iBAAiBlS,GACnCqM,EAAMyf,QAAQzyB,EAAIgL,GAClBhL,EAAGD,mBACN,ECjHU,MAAM4vC,oBAAoBngB,iBAGrChmB,eAAeC,OAAO,eAAgBkmC,aACtC3qC,OAAOC,KAAK0qC,YACb,CAEUjxC,gCAET,OAAO8wB,UAAUkR,kBADH,CAAC,QAAS,WAAY,WAAY,YAAa,MAAO,YAErE,CAEDt4B,cACEC,QACApI,KAAK4H,IAAM5H,KAAK4H,KAAO,kBACxB,CAEDtG,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAC1CrB,MACR4/B,GAAQzgC,EAAMiC,EAAUC,GACd,aAATlC,GAAqB4a,SAAS6B,KAFvB5b,KAEgC,SAAU,CAAEiE,KAAM,YAAamG,GAAI/I,GAC/E,CAED8C,kBAAkBkF,EAAM,IACtB,OAAOA,EAAMjB,MAAM4kB,YAAY3jB,GAAOrJ,MAAK0T,IAC5C,CAEDme,UACE,MAAM9xB,EAAKC,KACXoI,MAAMypB,UACN9xB,EAAGoxB,YAAYpxB,GAAG4vC,GAAa,QAAS5vC,EAAGi6B,MAAMvxB,KAAK1I,IAClDA,EAAGmhC,YACLnhC,EAAGoxB,YAAYpxB,GAAG6vC,GAAW,aAAc7vC,EAAGi6B,MAAMvxB,KAAK1I,IACrDA,EAAGgsC,IAAM,GAAGhsC,EAAGoxB,YAAYpxB,GAAG6vC,GAAW,aAAc7vC,EAAG2/B,KAAKj3B,KAAK1I,KAE1EA,GAAG6/B,GAAQ,MAAM,GAAM,EACxB,CAEDA,IAAQzgC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAE3C,GAAID,IAAaC,EAAU,OAC3B,MAAMtB,EAAKC,KAEPD,GAAG8vC,IAAU98B,EAAMyf,QAAQzyB,GAAG8vC,GAAU9vC,EAAGs+B,OAE/CtrB,EAAM6E,YAAY7X,GAAG6vC,GAAW,WAAW,GAC3C78B,EAAM6E,YAAY7X,GAAG+vC,GAAU,aAAc/vC,EAAGolC,UAChDpyB,EAAM6E,YAAY7X,GAAG4vC,GAAa,OAAQ5vC,EAAGgwC,UAAYhwC,EAAGiwC,UAE5DjwC,GAAGkwC,KACHlwC,GAAGmwC,KACHnwC,GAAGowC,KACHpwC,GAAGqwC,GAAiBjxC,EAAMiC,EAAUC,GACpCtB,GAAGswC,GAAWlxC,EAAMiC,EAAUC,EAE/B,CAED4uC,MAEE,MAAMlwC,EAAKC,KACX,IAAKD,EAAGmhC,UAAW,OAEnB,MAAMxB,EAAO3/B,EAAGiwC,SACVhlB,EAAMjrB,EAAGuwC,aAAe,QAAU,SAClCjnC,EAAMq2B,EAAO3/B,EAAGisC,IAAMjsC,EAAGgsC,IASzB3sC,EAAM,CACV,sBAAwB,GAAG4rB,eAC3B,sBAAwB,GAAGjrB,EAAGwwC,kCAC9B,6BAA+B,GAAGxwC,EAAGywC,iCAEvCpxC,EAAI4rB,GAAO,GAAG3hB,iBACdnE,EAAcuB,QAAQ1G,EAAGgxB,QAAS3xB,EAEnC,CAED8wC,MACE,MAAMnwC,EAAKC,KACX,GAAe,IAAXD,EAAGgsC,KAAahsC,EAAGiwC,SAAU,OAAOj9B,EAAM6E,YAAY7X,GAAG6vC,GAAW,OAAQ7vC,EAAGiwC,UACnF/gC,YAAW,KACT8D,EAAM6E,YAAY7X,GAAG6vC,GAAsB,IAAX7vC,EAAGgsC,IAAYhsC,EAAGiwC,SAAW,QAAQ,EAAK,GACzEj9B,EAAMqmB,MACV,CAED+W,MACE,MAAMpwC,EAAKC,KACXiP,YAAW,KACT8D,EAAM6E,YAAY7X,GAAG4vC,GAAa,cAAe5vC,EAAGgwC,UAAYhwC,EAAGiwC,UAAU,GAC5Ej9B,EAAMqmB,MACV,CAEDgX,IAAiBjxC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACpD,GAAa,cAATlC,EAAsB,OAE1B4T,EAAM6E,YADK5X,MACU4vC,GAAW,aAAaxuC,KAAY,GACzD2R,EAAM6E,YAFK5X,MAEU4vC,GAAW,aAAavuC,KAAY,EAC1D,CAEDgvC,IAAWlxC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAC9C,GAAa,QAATlC,EAAgB,OAEpB4T,EAAM6E,YADK5X,MACU4vC,GAAWxuC,GAAU,GAC1C2R,EAAM6E,YAFK5X,MAEU4vC,GAAWvuC,GAAU,EAC3C,CAEGorC,iBACF,OAAQzsC,KAAKswC,YACd,CAEGA,mBACF,MAA0B,UAAnBtwC,KAAKkW,WAA4C,QAAnBlW,KAAKkW,SAC3C,CAEDwpB,OACE1/B,KAAKgwC,UAAW,CACjB,CAEDhW,QACEh6B,KAAKgwC,UAAW,CACjB,CAEDt4B,SACE1X,KAAKgwC,UAAYhwC,KAAKgwC,QACvB,CAEGpoC,UACF,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,GAChC,CAEGoqC,eACF,OAAOt5B,OAAOpL,IAAI1F,KAAM,YAAa,OACtC,CAEG4gC,cACF,OAAO9vB,OAAOpL,IAAI1F,KAAM,WAAY,GACrC,CAEG6gC,cACF,OAAO/vB,OAAOpL,IAAI1F,KAAM,WAAY,GACrC,CAEG4H,QAAIyB,EAAM,IACZyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EACzB,CAEGknC,yBACF,OAAOz/B,OAAOgvB,SAAS9/B,KAAM,WAAY,MAC1C,CAEGuwC,uBAAmBlnC,EAAM,IAC3ByH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EAC9B,CAEGmnC,yBACF,OAAO1/B,OAAOpL,IAAI1F,KAAM,aAAc,SACvC,CAEGwwC,uBAAmBnnC,EAAM,IAC3ByH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EAChC,CAEGg1B,YACF,OAAOvtB,OAAOpL,IAAI1F,KAAM,QACzB,CAEGq+B,UAAMh1B,EAAM,IACdyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EAC3B,CAEG2mC,eACF,OAAOl/B,OAAOwd,UAAUtuB,KAAM,YAAY,EAC3C,CAEGgwC,aAAS3mC,GAAM,GACjByH,OAAO8f,UAAU5wB,KAAM,WAAYqJ,EACpC,CAEG63B,gBACF,OAAOpwB,OAAOwd,UAAUtuB,KAAM,aAAa,EAC5C,CAEGkhC,cAAU73B,GAAM,GAClByH,OAAO8f,UAAU5wB,KAAM,YAAaqJ,EACrC,CAEG87B,eACF,OAAOr0B,OAAOwd,UAAUtuB,KAAM,YAAY,EAC3C,CAEGmlC,aAAS97B,GAAM,GACjByH,OAAO8f,UAAU5wB,KAAM,WAAYqJ,GACnCrJ,MAAK4/B,IACN,CAEG1pB,gBAEF,OAAOpF,OAAOpL,IADH1F,KACW,YADXA,KAC2BgD,QAAQtC,SAAS+vC,aAAe,QACvE,CAEGv6B,cAAU7M,EAAM,IAClB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACtC,CAEG0mC,eAEF,OAAOj/B,OAAOwd,UADHtuB,KACiB,WADjBA,KACgCgD,QAAQtC,SAASgwC,YAAc,QAC3E,CAEGX,aAAS1mC,EAAM,IACjB,OAAOyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EACrC,CAEGsnC,aAEF,OAAO7/B,OAAOwd,UADHtuB,KACiB,SADjBA,KAC8BgD,QAAQtC,SAASkwC,UAAY,QACvE,CAEGD,WAAOtnC,EAAM,IACf,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACnC,CAEG0iC,UACF,OAAOj7B,OAAOgvB,SAAS9/B,KAAM,MAAO,EACrC,CAEG+rC,QAAI1iC,GAAM,GACZyH,OAAOvL,IAAIvF,KAAM,MAAOgM,EAAOmF,MAAM9H,GACtC,CAEG2iC,UACF,OAAOl7B,OAAOgvB,SAAS9/B,KAAM,MAAO,EACrC,CAEGgsC,QAAI3iC,GAAM,GACZyH,OAAOvL,IAAIvF,KAAM,MAAOgM,EAAOmF,MAAM9H,GACtC,CAEGumC,SACF,OAAO5vC,KAAKoX,MAAM,aACnB,CAEGy4B,SACF,OAAO7vC,KAAKoX,MAAM,mBACnB,CAEGu4B,SACF,OAAO3vC,KAAKoX,MAAM,sBACnB,CAEG04B,SACF,OAAO9vC,KAAKoX,MAAM,0CACnB,CAEGy5B,SACF,OAAO7wC,KAAKK,cAAc,kBAC3B,CAEDqT,MACE,MAAM3T,EAAKC,KACLq+B,EAAQt+B,EAAGs+B,MAAQ,+BAA+Bt+B,EAAGqqC,aAAarqC,EAAGs+B,cAAgB,GACrFyS,EAAW/wC,EAAGolC,SAAW,2FAA6F,GACtHmC,EAASjJ,GAASyS,GAAY/wC,GAAG8wC,GAAY,gCAAgC9wC,EAAG6gC,gCAAgCvC,IAAQyS,iBAA0B,GACxJ,MAAO,2CAC6B/wC,EAAGmW,6BAA6BnW,EAAG6H,OAAO7H,EAAGgxB,4BAA4BhxB,EAAG4wC,6BAA6B5wC,EAAGgwC,yCAC5IzI,wCAC4BvnC,EAAG8gC,mHAIG9gC,EAAGgwC,UAAYhwC,EAAGiwC,SAAW,OAAS,2BAE7E,ECjRY,MAAMe,kBAAkBxhB,UAEnCyhB,KAAW,SAGPznC,eAAeC,OAAO,aAAcunC,WACpChsC,OAAOC,KAAK+rC,WACZpyB,cAAcgW,eAAeoc,WAAUrZ,GAAkBqZ,WAAUpZ,GACtE,CAODp5B,UAAwBgC,GACpB,OAAMA,aAAcjC,gBAChBiC,EAAGoU,UAAWpU,EAAGoU,QAAQpR,WAAW,UACjCwtC,WAAUE,GAAW1wC,KAAQwwC,WAAUG,GAAY3wC,IAC7D,CAMDhC,UAAwBgC,GACpBA,EAAG7B,GAAK6B,EAAG7B,IAAMkN,KAAKlN,GACtB,MAAMyyC,EAAUjyC,SAAS4L,cAAc,cACvCqmC,EAAQ1f,IAAM,IAAIlxB,EAAG7B,KACrBkB,uBAAsB,KAClBqP,YAAW,KACP1O,EAAGqW,cAAc9V,sBAAsB,YAAaqwC,EAAQ,GAC7D,IAAI,GAEd,CAEDhpC,cACIC,OACH,CAEDypB,UAEIzpB,MAAMypB,UADK7xB,MAERy6B,IACN,CAGDA,MACI,MAAM16B,EAAKC,KACPD,EAAGqxC,iBACHr3B,SAASsX,OAAOtxB,EAAIA,EAAGiD,OAAQ,YAAajD,EAAGmxB,KAAKzoB,KAAK1I,IACzDga,SAASsX,OAAOtxB,EAAIA,EAAGiD,OAAQ,WAAYjD,EAAGkxB,KAAKxoB,KAAK1I,KAExDA,EAAGsxC,gBACHt3B,SAASsX,OAAOtxB,EAAIb,SAASuS,KAAM,QAAS1R,GAAGk3B,GAAOxuB,KAAK1I,GAElE,CAEDS,IAAQsqB,GACJ,MACMwmB,EAAUxmB,EAAOzqB,cAAc,qBAErC,OADAopB,SAAS8nB,cAFEvxC,KAEekW,UAAW4U,EAF1B9qB,KAEqCgD,OAAQsuC,GACjDxmB,CACV,CAEGpX,SACA,MAAM3T,EAAKC,KACLY,EAAOb,EAAGs+B,MAAQ,8BAA8Bt+B,EAAG6gC,YAAY7gC,EAAGs+B,cAAgB,GACxF,MAAO,sDACoCt+B,EAAG6H,+BAA+B7H,EAAGmW,aAAalW,KAAK+wB,0BAA0B/wB,KAAK+wB,wFAE3HnwB,4CAC0Bb,EAAG2vB,qDAGtC,CAEG1sB,aACA,MAAMjD,EAAKC,KACX,GAAID,EAAG0xB,IAAK,CACR,IAAIjhB,EAAQzQ,EAAGyQ,MAEf,OADAA,EAAQuC,EAAMuC,YAAYvV,EAAGyQ,OAASA,EAAMR,KAAOQ,EAC5CA,EAAMnQ,cAAcN,EAAG0xB,IACjC,CACD,OAAO1xB,EAAGkuC,wBAA0BluC,EAAG6W,aAC1C,CAEGhP,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAC3B,CAEG4H,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAEGu3B,cACA,OAAO9vB,OAAOpL,IAAI1F,KAAM,WAAY,OACvC,CAEG4gC,YAAQv3B,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EACvC,CAEGooB,UAEA,OAAO3gB,OAAOpL,IADH1F,KACW,MACzB,CAEGyxB,QAAIpoB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAEGg1B,YAEA,OAAOvtB,OAAOpL,IADH1F,KACW,UAAY8Q,OAAOpL,IAD9B1F,KACqCgD,OAAQ,QAC3D,CAEGq7B,UAAMh1B,EAAM,IAEZ,OAAOyH,OAAOvL,IADHvF,KACW,QAASqJ,EAClC,CAEG6M,gBAEA,OAAOpF,OAAOpL,IADH1F,KACW,YADXA,KAC2BgD,QAAQtC,SAAS+vC,aAAe,MACzE,CAEGv6B,cAAU7M,EAAM,IAChB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACxC,CAEGqmB,cAEA,OAAO5e,OAAOpL,IADH1F,KACW,UADXA,KACyBgD,QAAQtC,SAAS8wC,WAAa,GACrE,CAEG9hB,YAAQrmB,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EACtC,CAEGy1B,cAEA,OAAOhuB,OAAOpL,IADH1F,KACW,UADXA,KACyBgD,QAAQtC,SAAS+wC,WAAa,cACrE,CAEG3S,YAAQz1B,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EACtC,CAEGgoC,qBACA,OAAOrxC,KAAK8+B,QAAQl8B,SAAS,QAChC,CAEGwuC,qBACA,OAAOpxC,KAAK8+B,QAAQl8B,SAAS,QAChC,CAEG+tB,cACA,OAAiC,IAA1B3wB,KAAKuX,UAAUzY,MACzB,CAEGmuB,aACA,OAAO,CACV,CAEGE,aACA,MAAO,MACV,CAEDhpB,kBAAkB4J,EAAM,IACpB,MAAO,EACV,CAKDmjB,OACI,MAAMnxB,EAAKC,KACLO,EAAKwS,EAAMlF,MAAM9N,GAAG2T,IAAO,GACjC3T,EAAGe,sBAAsB,aAAcP,GACvCX,uBAAsB,KAClBG,GAAGS,GAAQD,GACXwS,EAAM6E,YAAYrX,EAAI,QAAQ,EAAK,GAE1C,CAMD0wB,OACI,MAAMlxB,EAAKC,KACX,OAAID,GAAGixC,KACP/hC,YAAW,KACP8D,EAAMyf,QAAQzyB,EAAI,GAAG,GACtB,KACIgT,EAAM6E,YAAY7X,EAAGiU,kBAAmB,QAAQ,GAC1D,CAKD0D,SACI,MAAM3X,EAAKC,KACXD,EAAG4wB,QAAU5wB,EAAGkxB,OAASlxB,EAAGmxB,MAC/B,CAED+F,IAAOjzB,GACH,MAAMjE,EAAKC,KACX,GAAID,GAAGixC,GAGH,OAFAjxC,GAAGixC,IAAW,OACdjxC,EAAGkxB,OAGP,MAAMygB,GAAY3xC,EAAGqxC,eACjBptC,EAAEhB,QAAUjD,EAAGiD,OACXjD,EAAG4wB,QACH5wB,GAAGixC,IAAW,EACPU,GACP3xC,EAAGmxB,OAEAwgB,GAAY3xC,EAAG4wB,SAAS5wB,EAAGkxB,MACzC,CAOD1yB,UAAmBgC,GACf,OAAQA,GAAIyT,mBAAqBzT,GAAIyV,8BAA+B+6B,SACvE,CAODxyC,UAAkBgC,GACd,OAAOA,GAAIG,SAAS8wC,WAAuC,YAA1BjxC,GAAIG,SAASs3B,QACjD,EClPU,MAAM2Z,gBAAgBpiB,UAGjCuV,IAAU,KACVpU,KAAU,EACVlB,KAAS,EACTkY,KAAY,SAGRn+B,eAAeC,OAAO,WAAYmoC,SAClC5sC,OAAOC,KAAK2sC,QACf,CAEUlzC,gCAEP,OAAO8wB,UAAUkR,kBADH,CAAC,UAAW,OAE7B,CAEDn/B,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACnD,MAAMtB,EAAKC,KAEE,YAATb,IACAY,GAAG8tC,KACH96B,EAAM6E,YAAY7X,GAAGi/B,GAAQ,aAAcj/B,EAAG4wB,SAErD,CAED7wB,oBACIsI,MAAMtI,oBACN,MAAMC,EAAKC,KACXD,GAAG2wB,IAAU,EACb3wB,EAAGoxB,YAAYpxB,EAAI,OAAQA,GAAG0oC,GAAQhgC,KAAK1I,GAC9C,CAEDkB,uBACejB,MACR0wB,IAAU,EACbtoB,MAAMnH,sBACT,CAEDkD,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KACLkO,QAAY9F,MAAM4kB,YAAY3jB,GAC9Bk4B,EAAQxhC,EAAG4wB,QAAU,GAAK,YAWhC,OATIziB,GACAtO,uBAAsB,KAClB,MAAM6U,EAAO1B,EAAMlF,MAAMK,GACzB,IAAK,IAAI3N,KAAMkU,EAAKhD,KAAK6C,SACrBvB,EAAMlS,YAAYd,EAAIQ,EACzB,IAIF,wBAAwBR,EAAGqrB,YAAYrrB,EAAG6H,OAAO25B,KAASxhC,EAAGgxB,0BAA0B/wB,KAAK+wB,8BACtG,CAEDc,UACI,MAAM9xB,EAAKC,KACPD,GAAGyvB,KACPzvB,GAAGyvB,IAAS,EACZzvB,GAAG8xB,KACHzpB,MAAMypB,UACT,CAEG5E,aACA,OAAOjtB,KAAK4W,gBAAkB1X,SAASuS,IAC1C,CAMG0b,aACA,MAAO,gBACV,CAEG6R,SACA,OAAOh/B,KAAKoX,MAAM,MACrB,CAEGxP,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAC3B,CAEG4H,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAKG7J,YACA,OAAOsR,OAAOpL,IAAI1F,KAAM,QAAS,QACpC,CAEGR,UAAM6J,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EACpC,CAKG6M,gBAEA,OAAOpF,OAAOpL,IADH1F,KACW,YADXA,MAC4BgD,QAAQ4uC,UAAUnB,aAAe,GAC3E,CAEGv6B,cAAU7M,EAAM,IAChB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACxC,CAKG+hB,eAEA,OAAOta,OAAOpL,IADH1F,KACW,WAAY,WACrC,CAEGorB,aAAS/hB,EAAM,IACf,OAAOyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EACvC,CAKGrG,aAEA,OAAO8N,OAAOpL,IADH1F,KACW,SACzB,CAEGgD,WAAOqG,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACrC,CAKGsnB,cACA,OAAO7f,OAAOwd,UAAUtuB,KAAM,WAAW,EAC5C,CAEG2wB,YAAQtnB,EAAM,IACd,OAAOyH,OAAO8f,UAAU5wB,KAAM,UAAWqJ,EAC5C,CAKG63B,gBACA,OAAOpwB,OAAOwd,UAAUtuB,KAAM,aAAa,EAC9C,CAEGkhC,cAAU73B,EAAM,IAChB,OAAOyH,OAAOwd,UAAUtuB,KAAM,YAAaqJ,EAC9C,CAKGwoC,WACA,OAAO/gC,OAAOgvB,SAAS9/B,KAAM,QAChC,CAEG6xC,SAAKxoC,EAAM,IACX,OAAOyH,OAAOivB,SAAS//B,KAAM,QAASqJ,EACzC,CAKGyoC,WACA,OAAOhhC,OAAOgvB,SAAS9/B,KAAM,QAChC,CAEG8xC,SAAKzoC,EAAM,IACX,OAAOyH,OAAOivB,SAAS//B,KAAM,QAASqJ,EACzC,CAGG0oC,SAAK1oC,EAAM,IACX,OAAOyH,OAAOivB,SAAS//B,KAAM,QAASqJ,EACzC,CAEG0oC,WACA,OAAOjhC,OAAOgvB,SAAS9/B,KAAM,QAChC,CAEGgyC,SAAK3oC,EAAM,IACX,OAAOyH,OAAOivB,SAAS//B,KAAM,QAASqJ,EACzC,CAEG2oC,WACA,OAAOlhC,OAAOgvB,SAAS9/B,KAAM,QAChC,CAEGiyC,SAAK5oC,EAAM,IACX,OAAOyH,OAAOivB,SAAS//B,KAAM,QAASqJ,EACzC,CAEG4oC,WACA,OAAOnhC,OAAOgvB,SAAS9/B,KAAM,QAChC,CAEGkyC,SAAK7oC,EAAM,IACX,OAAOyH,OAAOivB,SAAS//B,KAAM,QAASqJ,EACzC,CAEG6oC,WACA,OAAOphC,OAAOgvB,SAAS9/B,KAAM,QAChC,CAEDg6B,MAAMh2B,GACF,MAAMjE,EAAKC,KAEX,GADAD,EAAG4wB,SAAU,EACT3sB,aAAamuC,MAAO,CACpBnuC,EAAEgX,iBACF,MAAML,EAAM,CAAE1W,KAAM,QAASqiC,OAAQtiC,EAAEhB,OAAQ8hC,OAAQ/kC,GAAG+kC,GAASp+B,KAAM,MACzEqT,SAAS6B,KAAK7b,EAAI,SAAU4a,GAAK,GAAM,EAC1C,CACJ,CAED+kB,OACI1/B,KAAK2wB,SAAU,CAClB,CAEDjZ,OAAO1T,GACH,MAAMjE,EAAKC,KACX,GAAIgE,EAAG,OAAOjE,GAAGmoC,GAASlkC,GAC1BjE,EAAG4wB,SAAW5wB,EAAG4wB,OACpB,CAQDyU,MAAMz4B,EAAI,EAAGqd,EAAI,GACb,MAAMjqB,EAAKC,KACGD,GAAGi/B,IAEjBp/B,uBAAsB,KAClBG,EAAG4wB,SAAU,EACb,MAAMvxB,EAAM,CACR0qB,IAAM,MACNnb,KAAO,MACPqd,UAAY,aAAarf,QAAQqd,QAOrCjqB,GAAG8tC,GAAQzuC,EAAI,GAGtB,CAEDyuC,IAAQzuC,EAAM,IACV,MAAMW,EAAKC,KACLg/B,EAAQj/B,GAAGi/B,GACZA,IAQDj/B,EAAGgyC,OAAM3yC,EAAI,aAAe,GAAGW,EAAGgyC,UAClChyC,EAAGiyC,OAAM5yC,EAAI,aAAe,GAAGW,EAAGiyC,UAClCjyC,EAAGkyC,OAAM7yC,EAAI,cAAgB,GAAGW,EAAGkyC,UACnClyC,EAAGmyC,OAAM9yC,EAAI,cAAgB,GAAGW,EAAGmyC,UACvChtC,EAAcuB,QAAQu4B,EAAMt+B,QAAQyqB,MAAO/rB,GAC9C,CAEDyoC,IAAU7jC,GACNhE,KAAKg6B,OACR,CAEDkO,IAASlkC,GACL,MAAMjE,EAAKC,KAOX,GANAD,GAAG+kC,GAAU9gC,EACTA,aAAamuC,QACbnuC,EAAEgX,iBACFjb,GAAG+kC,GAAU9gC,EAAE6c,eAAe3a,QAAOlC,KAAQA,aAAaouC,mBAAmB,IAG7EryC,EAAGmW,UAGH,OAFAuT,SAAS4oB,WAAWtyC,EAAGmW,UAAWnW,GAAGi/B,GAAQj/B,GAAG+kC,SAChD/kC,EAAG4wB,SAAU,GAGjB,IAAIhkB,EAAI3I,EAAEqhC,QAASrb,EAAIhmB,EAAEshC,QACzB,MAAMhyB,EAAOvT,GAAGi/B,GAAOzrB,wBACjB4yB,EAAYx5B,EAAI2G,EAAKE,MAAQ9I,OAAOm7B,WACpCO,EAAYpc,EAAI1W,EAAKG,OAAS/I,OAAOq7B,YAI3C,OAHII,IAAWx5B,EAAIjC,OAAOm7B,WAAavyB,EAAKE,OACxC4yB,IAAWpc,EAAItf,OAAOq7B,YAAczyB,EAAKG,QAC7C1T,EAAGqlC,MAAMz4B,EAAGqd,IACL,CACV,CAQD7lB,WACI,MAAMpE,EAAKC,KACX,IAAKD,EAAGiD,OAAQ,OAChB,GAAIjD,GAAG2nC,GAAW,OAClB,MAAMO,EAAUl1B,EAAMsE,SAASnY,SAASkhB,gBAAiBrgB,EAAGiD,QACrC,IAAnBilC,EAAQnpC,QASZiB,GAAG2nC,IAAY,EACf3nC,EAAGP,MAAMoH,MAAM,KAAKnE,SAAQuB,IACxBikC,EAAQxlC,SAAQO,GAAUjD,EAAGoxB,YAAYnuB,EAAQgB,EAAGjE,GAAGmoC,GAASz/B,KAAK1I,KAAK,IAE9EA,EAAGqxB,YAAYlyB,SAAU,kBAZjBa,GAAG2wB,WACG1kB,EAAOwD,QAAQ,KACrB5P,uBAAsB,KAClBG,GAAG6nC,IAAe,IAUjC,CAED/V,MACI,MAAM9xB,EAAKC,KACXD,GAAG6nC,KACH7nC,EAAGoxB,YAAYjyB,SAAU,eAAgBa,GAAG6nC,GAAcn/B,KAAK1I,IAC/DA,EAAGoxB,YAAYzmB,OAAQ,SAAU3K,GAAG8nC,GAAUp/B,KAAK1I,IACnDA,GAAG8tC,KACC9tC,EAAGmhC,WAAWnhC,EAAGoxB,YAAYpxB,GAAGi/B,GAAQ,aAAcj/B,EAAGi6B,MAAMvxB,KAAK1I,IACpEA,EAAG4wB,SAAS5wB,EAAGqlC,MAAMrlC,EAAG8xC,KAAM9xC,EAAG+xC,KACxC,CAEDrJ,IAAQzkC,GACJ,MAAMjE,EAAKC,KACX,IAAIuC,EAAMxC,GAAGuyC,GAAgBtuC,EAAGA,EAAEhB,OAAQ,SAAU,YAC/CT,IACLwX,SAASE,QAAQjW,GACjBzB,EAAMwX,SAAS6B,KAAK7b,EAAI,OAAQ,CAAEkE,KAAM,QAASyC,KAAM1C,EAAEtE,OAAOgH,KAAMwU,IAAKlX,IAAK,GAAM,GAAM,GACxFzB,GAAKxC,EAAGi6B,QACf,CAEDsY,IAAgBtuC,EAAGkQ,EAAKjQ,EAAMsuC,GAC1B,GAAIvuC,EAAEtE,OAAOuE,OAASA,EAAM,OAAO,EAEnC,OADesc,EAAaW,SAAShN,EAAKq+B,IACzBvyC,IACpB,ECrWU,MAAMwyC,mBAAmBjjB,iBAGhChmB,eAAeC,OAAO,cAAegpC,YACrCztC,OAAOC,KAAKwtC,WACf,CAEU/zC,gCAEP,OAAO8wB,UAAUkR,kBADH,CAAC,MAAO,MAAO,SAEhC,CAEDt4B,cACIC,OACH,CAED9G,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACnD,MACMoxC,EADKzyC,MACIyyC,GACVA,IACL3hC,OAAOvL,IAAIktC,EAAK,QAAQtzC,IAAQkC,GAHrBrB,MAIR0yC,KACN,CAEDzxC,uBACIiE,EAAcmC,WAAWrH,MAAK2yC,IAC9BvqC,MAAMnH,sBACT,CAEDyxC,MACI,MAAM3yC,EAAKC,KACLyyC,EAAM1yC,GAAG0yC,GACTnsC,EAAOpB,EAAcqB,QAAQxG,GAAG4yC,IAClCrsC,IAAMA,EAAKlB,MAAMoO,MAAQ,GAAGzT,EAAG6yC,eAC/B7yC,EAAGqrC,OAASqH,GAAK1/B,EAAMyf,QAAQigB,EAAK1yC,GAAG8yC,KAC9C,CAEDA,MACI,MAAM9yC,EAAKC,KACL2a,EAAM,CAAEvY,MAAOrC,EAAGqC,MAAO2pC,IAAKhsC,EAAGgsC,IAAKC,IAAKjsC,EAAGisC,IAAK4G,WAAY7yC,EAAG6yC,YACxE,OAAO5mC,EAAO8mC,oBAAoB/yC,EAAGqrC,MAAOzwB,EAC/C,CAEGg4B,SACA,MAAO,GAAG3yC,KAAK+wB,aAClB,CAED5sB,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KACLorC,EAAQrrC,EAAGqrC,MAAQp/B,EAAO8mC,oBAAoB/yC,EAAGqrC,MAAO,CAAEhpC,MAAOrC,EAAGqC,MAAO2pC,IAAKhsC,EAAGgsC,IAAKC,IAAKjsC,EAAGisC,IAAK4G,WAAY7yC,EAAG6yC,aAAgB,GAE1I,OADN1tC,EAAcuB,QAAQ,GAAG1G,GAAG4yC,KAAY,SAAS5yC,EAAG6yC,eACvC,kCACgB5yC,KAAK+wB,0BAA0B/wB,KAAK+wB,mDAC5BhxB,EAAG6H,OAAO7H,GAAG4yC,qBAA2B3yC,MAAK2yC,sCAA4C5yC,EAAGqC,oBAAoBrC,EAAGgsC,kBAAkBhsC,EAAGisC,QAAQZ,uCAGlL,CAEDvZ,UACIzpB,MAAMypB,UACN7xB,MAAK0yC,IACR,CAEGD,SACA,OAAOzyC,KAAKoX,MAAM,gBACrB,CAEG6V,aACA,OAAO,CACV,CAEGE,aACA,MAAO,MACV,CAEGylB,iBAEA,OAAOzlC,KAAK4lC,MADD/yC,KACWoC,MADXpC,KACsBgsC,IAAO,IAC3C,CAEG5pC,YACA,OAAO0O,OAAOgvB,SAAS9/B,KAAM,QAAS,EACzC,CAEGoC,UAAMiH,EAAM,IACZ,IAAK2C,EAAOS,SAASpD,GAAM,OAAO,EAClC,MAAMtJ,EAAKC,KACX,IAAI0C,EAAIsJ,EAAOmF,MAAM9H,GAGrB,OAFI3G,EAAI3C,EAAGisC,MAAKtpC,EAAI3C,EAAGisC,KACnBtpC,EAAI3C,EAAGgsC,MAAKrpC,EAAI3C,EAAGgsC,KAChBj7B,OAAOivB,SAAShgC,EAAI,QAAS2C,EACvC,CAEGqpC,UACA,OAAOj7B,OAAOgvB,SAAS9/B,KAAM,MAAO,EACvC,CAEG+rC,QAAI1iC,EAAM,IACV,OAAOyH,OAAOivB,SAAS//B,KAAM,MAAO,EACvC,CAEGgsC,UACA,OAAOl7B,OAAOgvB,SAAS9/B,KAAM,MAAO,IACvC,CAEGgsC,QAAI3iC,EAAM,IACV,OAAOyH,OAAOivB,SAAS//B,KAAM,MAAO,IACvC,CAEG4H,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,GAClC,CAEG4H,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAEG+hC,YACA,OAAOt6B,OAAOpL,IAAI1F,KAAM,QAAS,GACpC,CAEGorC,UAAM/hC,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EACpC,CAED2pC,SAAS3pC,EAAM,GAGX,OAFWrJ,KACRoC,MADQpC,KACGoC,MAAQiH,GACf,CACV,CAED4pC,SAAS5pC,EAAM,GAGX,OAFWrJ,KACRoC,MADQpC,KACGoC,MAAQiH,GACf,CACV,ECtIU,MAAM6pC,mBAAmB3jB,UAEpC4jB,IAAU,EACVC,KAAa,SAGT7pC,eAAeC,OAAO,cAAe0pC,YACrCnuC,OAAOC,KAAKkuC,WACf,CAED/qC,cACIC,OACH,CAEDnH,uBACIiE,EAAcmC,WAAWrH,MAAKqzC,IAC9BjrC,MAAMnH,sBACT,CAEGoyC,SACA,MAAO,GAAGrzC,KAAK+wB,iBAClB,CAEGuiB,SACA,MAAMvzC,EAAKC,KACL2c,EAAO5c,EAAG0sC,WAAa,QAAU,SACjC8G,EAAOxzC,EAAG0sC,WAAa,SAAW,QAClC0G,EAASpzC,EAAG0sC,WAAa,WAAa,WAC5C,MAAO,iBACD9vB,MAAS5c,EAAG4c,wBACZ42B,iEAEQJ,+HAKjB,CAEDhvC,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KAEX,OADAkF,EAAcuB,QAAQ1G,GAAGszC,GAActzC,GAAGuzC,IACnC,wBAAwBvzC,EAAG6H,OAAO7H,EAAGgxB,WAAWhxB,GAAGszC,oBAA8BrzC,KAAK+wB,0BAA0B/wB,MAAKqzC,YAC/H,CAMG5G,iBACA,MAAiD,aAA1C37B,OAAOpL,IAAI1F,KAAM,QAAS,WACpC,CAEG4H,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAC3B,CAEG4H,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAMGsT,WACA,OAAO7L,OAAOgvB,SAAS9/B,KAAM,OAAQ,EACxC,CAEG2c,SAAKtT,EAAM,IACX,OAAOyH,OAAOivB,SAAS//B,KAAM,OAAQqJ,EACxC,CAMGwkC,aACA,OAAO/8B,OAAOpL,IAAI1F,KAAM,SAAU,QACrC,CAEG6tC,WAAOxkC,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACrC,CAMG+tB,YACA,OAAOp3B,KAAKiuC,sBACf,CAMGxO,UACA,OAAOz/B,KAAKgW,kBACf,CAMGhT,aACA,MAAMjD,EAAKC,KACX,IAAIO,EAAKR,GAAGyzC,GAAgBzzC,EAAGq3B,MAAQr3B,EAAG0/B,IAO1C,OANAl/B,EAAKA,GAAMR,EAAG6W,cACdrW,EAAKwS,EAAMuC,YAAY/U,GAAMA,EAAGyP,KAAOzP,EACnCA,aAAcwW,aAEdxW,EAAKyF,MAAMC,KAAK1F,EAAG+T,UAAUpO,QAAO4C,IAAMiK,EAAM0gC,aAAa3qC,EAAG,UAAW,UAAS1C,OAEjF7F,CACV,CAEDT,oBACeE,MACRozC,KADQpzC,KACQtB,GACnB0J,MAAMtI,mBACT,CAED+xB,UACe7xB,MACR4iB,KADQ5iB,MAERga,KACH5R,MAAMypB,SACT,CAEG2hB,SACA,MACM3F,EADK7tC,KACO6tC,OAClB,MAAkB,UAAXA,GAAiC,QAAXA,CAChC,CAEGD,SACA,OAAO5tC,KAAKoX,MAAM,MACrB,CAEDwL,MACI,MAAM7iB,EAAKC,KACX,IAAKD,GAAGqzC,GAAY,OACpB,MAAMj3B,EAAMvQ,KAAKxL,SAAS4B,SAASqB,OAASrB,SAASsB,UACrD,IAAI+F,EAAMxE,aAAaC,QAAQ,eAAeqX,KAAOpc,EAAGrB,MACxD2K,EAAM2C,EAAOmF,MAAM9H,GACnBtJ,GAAG6/B,GAAQv2B,EACd,CAEDqqC,MACI,MAAM3zC,EAAKC,KACL4H,EAAM4J,EAASY,qBAAqBrS,EAAGiD,QACvCqG,EAAMtJ,EAAG0sC,WAAa7kC,EAAIlC,IAAI,SAAWkC,EAAIlC,IAAI,UACvD,IAAK2D,EAAK,OACV,MAAM8S,EAAMvQ,KAAKxL,SAAS4B,SAASqB,OAASrB,SAASsB,UACrDuB,aAAamd,QAAQ,eAAe7F,KAAOpc,EAAGrB,KAAM2K,EACvD,CAMD2Q,MACI,MAAMja,EAAKC,KACLO,EAAKR,GAAG6tC,GACd7tC,EAAGoxB,YAAY5wB,EAAI,YAAaR,GAAG4zC,GAAalrC,KAAK1I,IAAK,EAC7D,CAMD4zC,IAAa3vC,GACT,MAAMjE,EAAKC,KACX+Z,SAASE,QAAQjW,GACjBjE,GAAGozC,GAAUpzC,EAAG0sC,WAAazoC,EAAEqhC,QAAUrhC,EAAEshC,QAC3CvlC,EAAGoxB,YAAYjyB,SAAU,UAAWa,GAAG6zC,GAAWnrC,KAAK1I,IAAK,GAC5DA,EAAGoxB,YAAYjyB,SAAU,YAAaa,GAAG8zC,GAAaprC,KAAK1I,GAC9D,CAMD6zC,IAAW5vC,GACP,MAAMjE,EAAKC,KACX+Z,SAASE,QAAQjW,GACjB+V,SAAS2X,kBAAkB3xB,GAC3BA,GAAG2zC,KACH3zC,GAAGia,IACN,CAOD65B,IAAa7vC,GAET+V,SAASE,QAAQjW,GACjB,MAAMgnB,EAFKhrB,KAEIysC,WAAazoC,EAAEqhC,QAAUrhC,EAAEshC,QAF/BtlC,MAGR8zC,GAAa9oB,EACnB,CAED8oB,IAAa9oB,GACT,MAAMjrB,EAAKC,KACXJ,uBAAsB,KACdG,EAAG0sC,WACH1sC,GAAGg0C,GAAS/oB,GAEZjrB,GAAGi0C,GAAShpB,EACf,GAER,CAMD+oB,IAAS/oB,GACL,MAAMjrB,EAAKC,KACLgD,EAASjD,EAAGiD,OACZ+zB,EAAMh3B,GAAGyzC,GAAgB,GAAK,EACpC,IAAIS,GAAMjpB,EAAMjrB,GAAGozC,IAAWpc,EAC9Bkd,GAAUjxC,EAAOynB,YACjBwpB,EAAKA,EAAK,EAAI,EAAIA,EAClBl0C,GAAGm0C,GAAc1gC,MAAQygC,EAAK,KAC9Bl0C,GAAGozC,GAAUnoB,CAChB,CAMDgpB,IAAShpB,GACL,MAAMjrB,EAAKC,KACLgD,EAASjD,EAAGiD,OACZ+zB,EAAMh3B,GAAGyzC,GAAgB,GAAK,EACpC,IAAIS,GAAMjpB,EAAMjrB,GAAGozC,IAAWpc,EAC9Bkd,GAAUjxC,EAAO2nB,aACjBspB,EAAKA,EAAK,EAAI,EAAIA,EAClBl0C,GAAGm0C,GAAczgC,OAASwgC,EAAK,KAC/Bl0C,GAAGozC,GAAUnoB,CAChB,CAED4U,IAAQv2B,EAAM,GACV,GAAIA,GAAO,EAAG,OACd,MAAMtJ,EAAKC,KACXD,GAAGozC,GAAU9pC,EACTtJ,EAAG0sC,WACH1sC,GAAGm0C,GAAc1gC,MAAQnK,EAAM,KAE/BtJ,GAAGm0C,GAAczgC,OAASpK,EAAM,IAEvC,CAEG6qC,SACA,MACMlxC,EADKhD,KACOgD,OAElB,OADakC,EAAcqB,QAAQvD,EAAOtC,QAAQyqB,OAASnoB,EAAOtE,KACrD0G,OAASpC,EAAOoC,KAChC,ECpQU,MAAM+uC,cAAc5kB,UAGjChxB,gBAAkB,GAElBA,eAAiB,GAEjBA,oBAAsB,UAGpBgL,eAAeC,OAAO,SAAU2qC,OAChCpvC,OAAOC,KAAKmvC,MACb,CAEU11C,gCAET,OAAO8wB,UAAUkR,kBADH,CAAC,QAEhB,CAEDt4B,cACEC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC5B,CAEDrT,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACrD,GAAa,SAATlC,EAAiB,OAAOa,KAAK4iB,KAAKvhB,EACvC,CAED8C,kBAAkBkF,EAAM,IACtB,MAAMtJ,EAAKC,KACLwY,EAAQqU,OAAO6T,aAAa3gC,GAClCyY,EAAM/V,SAAQlC,GAAMA,EAAG7B,GAAKkN,KAAKlN,KACjC,MAAM01C,EAAO57B,EAAM3R,KAAItG,GAAMR,GAAGs0C,GAAW9zC,KAAKyI,KAAK,IAC/CsrC,EAAQ97B,EAAM3R,KAAItG,GAAMR,GAAGw0C,GAAYh0C,KAAKyI,KAAK,IACjDg2B,EAAQj/B,GAAGy0C,GAAaF,GAExBG,EAAM10C,GAAG0sC,GAAc1sC,GAAG20C,GAAoBN,GAAQr0C,GAAG40C,GAAsBP,GAGrF,MAAO,eAFKr0C,GAAG0sC,GAAc,4BAA4B1sC,GAAG6H,KAAS7H,GAAG6H,OAC3D7H,GAAG60C,GAAa5V,EAAQyV,EAAMA,EAAMzV,SAElD,CAEG4V,SACF,MAA2B,QAApB50C,MAAKkW,IAA4C,WAApBlW,MAAKkW,EAC1C,CAEGu2B,SACF,MAA2B,UAApBzsC,MAAKkW,IAA8C,QAApBlW,MAAKkW,EAC5C,CAGGA,SACF,OAAOpF,OAAOpL,IAAI1F,KAAM,YAAa,MACtC,CAEGmvC,SACF,OAAOr+B,OAAOpL,IAAI1F,KAAM,UAAW,WACpC,CAEG60C,SACF,OAAO/jC,OAAOpL,IAAI1F,KAAM,WACzB,CAED00C,IAAoBN,GAClB,MAAO,wDAC0CD,MAAMW,WAAW90C,MAAKmvC,6EACjEiF,uBAGP,CAEDO,IAAsBP,GACpB,MAAO,0DAC4CD,MAAMW,WAAW90C,MAAKmvC,iCACnEiF,8BAGP,CAEDI,IAAaF,GACX,MAAO,oDACiCH,MAAMY,YAAY/0C,MAAK60C,mBACvDP,6BAGT,CAEDD,IAAW9zC,GACT,MAAMR,EAAKC,KACLuU,EAAOxU,GAAG0sC,GAAc,GAAK,uBAAuB0H,MAAMa,gBAAgBj1C,GAAGk1C,GAAY10C,2BACzF89B,EAAQt+B,GAAGs+B,GAAO99B,GAClBwhC,EAAOhiC,GAAGgiC,GAAMxhC,GAGhBivC,EAAa,GAFHzN,EAAO,aAAaA,UAAe,MAElB1D,IAE3B6W,EAAYn1C,GAAGo1C,GAAc50C,GAEnC,MAAO,GAAGgU,+GAGMhU,EAAG7B,2CACSqB,GAAG8iC,GAAQtiC,MAAO20C,qCACnB30C,EAAG7B,4DACD6B,EAAG7B,iDACC8wC,oBACzBj7B,EAAO,QAAU,YAE1B,CAEDggC,IAAYh0C,GACV,MAAMR,EAAKC,KACX,OAAOD,EAAGktB,OAASltB,GAAGq1C,GAAgB70C,GAAMR,GAAGs1C,GAAkB90C,EAClE,CAED80C,IAAkB90C,GAChB,MAAMR,EAAKC,KACLk1C,EAAYn1C,GAAGu1C,GAAe/0C,GAC9BkR,EAAOob,OAAOmC,QAAQzuB,GACtBkU,EAAO1B,EAAMuf,aAAavyB,EAAI0R,GAGpC,OAFAX,OAAOvL,IAAIkP,EAAM,OAAQlU,EAAG7B,IAC5BqU,EAAMlS,YAAYd,EAAI0U,GACf,qBACOlU,EAAG7B,6BAA6B6B,EAAG7B,4CACpBqB,GAAGw1C,GAASh1C,OAAQ20C,0DAE7B30C,EAAG7B,2CAGxB,CAED02C,IAAgB70C,GACd,MAAMR,EAAKC,KACLk1C,EAAYn1C,GAAGu1C,GAAe/0C,GAC9BkR,EAAOob,OAAOmC,QAAQzuB,EAAIR,EAAGktB,QACnC,MAAO,qBACO1sB,EAAG7B,6BAA6B6B,EAAG7B,4CACpBqB,GAAGw1C,GAASh1C,OAAQ20C,8CAEzCzjC,iCAGT,CAEDwB,IAAQ1S,GACN,OAAOuQ,OAAOwd,UAAU/tB,EAAI,SAC7B,CAED40C,IAAc50C,GACZ,OAAOP,MAAKiT,GAAQ1S,GAAM,SAAW,EACtC,CAED+0C,IAAe/0C,GACb,OAAOP,MAAKiT,GAAQ1S,GAAM,cAAgB,EAC3C,CAED89B,IAAO99B,GACL,OAAOuQ,OAAOpL,IAAInF,EAAI,QACvB,CAEDwhC,IAAMxhC,GACJ,OAAOuQ,OAAOpL,IAAInF,EAAI,OACvB,CAEDg1C,IAASh1C,GACP,OAAOuQ,OAAOpL,IAAInF,EAAI,WACvB,CAEDsiC,IAAQtiC,GACN,OAAOuQ,OAAOpL,IAAInF,EAAI,UACvB,CAED00C,IAAY10C,GACV,OAAOuQ,OAAOpL,IAAInF,EAAI,eACvB,CAEGqH,SACF,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,GAChC,CASDmE,WAAWkF,EAAM,IACf,MAAM3C,QAAa+a,SAAS2f,SAAS/3B,GACrC,IAAK2C,EAAO2B,WAAWjH,GAAO,OAC9B,MAAM3G,EAAKC,KACL+K,EAAMgI,EAAM6F,iBAAiBlS,GACnCqM,EAAMyf,QAAQzyB,EAAIgL,GAClBgP,SAAS2X,kBAAkB3xB,GAC3BA,EAAGkB,uBACHlB,EAAGD,mBACJ,ECvMY,MAAM01C,cAAcjmB,iBAG3BrqB,cAAc6C,YAAYytC,OAAMpwC,IAChCmE,eAAeC,OAAO,SAAUgsC,OAChCzwC,OAAOC,KAAKwwC,MACf,CAEUpwC,gBACP,MAAO,uOAUV,CAED+C,cACIC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC9B,CAEDxQ,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KACLwY,EAAQzY,GAAG01C,KACX1oB,EAAOhtB,GAAG21C,KAChB,MAAO,mEACiD31C,EAAG6H,sBACrDmlB,+BACahtB,EAAGZ,oBAAoBY,EAAGZ,iFAAiFY,EAAG07B,4CAC7G17B,EAAGZ,cAAcqZ,8BAExC,CAEDqZ,UACI,MAAM9xB,EAAKC,KACXD,EAAGoxB,YAAYpxB,EAAGqX,MAAM,OAAQ,QAASrX,GAAGk4B,GAASxvB,KAAK1I,IAC1DA,EAAGoxB,YAAYpxB,GAAGorC,GAAQ,UAAWprC,GAAGma,EAAWzR,KAAK1I,IACxDA,EAAGoxB,YAAYpxB,GAAGorC,GAAQ,QAASprC,GAAG08B,GAASh0B,KAAK1I,IACpDqI,MAAMypB,SACT,CAED4K,IAASz4B,GACAA,EAAE2xC,WAAW31C,MAAK41C,GAAW5xC,EACrC,CAEDkW,GAAWlW,GACH,CAAC,QAAS,cAAe,QAAS,SAASE,QAAQF,EAAEmW,MAAQ,GACjEna,MAAK41C,GAAW5xC,EACnB,CAEDi0B,IAASj0B,GACWA,EAAE6xC,aAAe7xC,EAAEhB,QAAUgB,EAAEhB,kBAAkB8yC,mBACpD91C,MAAK+1C,GAAW/xC,EAAEhB,OAAO4T,cACzC,CAEDg/B,IAAW5xC,GACP+V,SAASE,QAAQjW,GACNhE,MACRg2C,GADQh2C,MACGovB,GACjB,CAEG6mB,SACA,MAAMl2C,EAAKC,KACX,OAAOD,EAAGisC,IAAM,GAAKjsC,GAAG2G,GAAM5H,QAAUiB,EAAGisC,GAC9C,CAEGtlC,SACA,OAAO1G,KAAKqX,SAAS,QAAQxQ,KAAItG,GAAMA,EAAGG,QAAQ0B,OACrD,CAEGi+B,SACA,OAAOr6B,MAAMC,KAAKjG,MAAK4xC,GAAUt9B,SACpC,CAEG8a,SACA,MAAMrvB,EAAKC,KACX,OAAOD,GAAGsgC,GAASn6B,QAAO3F,GAAMA,EAAG6B,MAAME,gBAAkBvC,GAAGorC,GAAO/oC,MAAME,gBAAe8D,KAC7F,CAEG0sB,SACA,MACMzpB,EADKrJ,MACImrC,GAAO/oC,MAAME,cAC5B,OAFWtC,KAED2H,OAAOzB,QAAQxD,GAAKA,EAAEJ,gBAAkB+G,IAAKvK,OAAS,CACnE,CAEDk3C,IAAQE,GACJ,MAAMn2C,EAAKC,KACLm2C,EAAMp2C,GAAGorC,GACf,GAAIprC,GAAGk2C,KAAWC,GAAwB,GAAfn2C,EAAGq2C,SAE1B,YADAD,EAAI/zC,MAAQ,IAGhB,GAAIrC,GAAG+yB,GAAc,OACrB,MAAM/nB,EAAMhL,GAAGs2C,GAAWF,EAAI/zC,OACxB7B,EAAKwS,EAAMlF,MAAM9C,GAAK,GAC5BorC,EAAIr1C,sBAAsB,cAAeP,GACzC41C,EAAI/zC,MAAQ,GACZ8zC,GAAO51C,SACPP,EAAG4H,OAAS5H,GAAG2G,GAAMsC,KAAK,IAC7B,CAED+sC,IAAWO,GACP,IAAKA,EAAO,OACZ,MAAMv2C,EAAKC,KACL2a,EAAOzb,SAAS4L,cAAc,UACpC6P,EAAIvY,MAAQk0C,EAAM51C,QAAQ0B,MAC1BrC,GAAG6xC,GAAU/wC,YAAY8Z,GACzB27B,EAAMh2C,SACNP,EAAG4H,OAAS5H,GAAG2G,GAAMsC,KAAK,IAC7B,CAEDysC,MAGI,OADc5oB,OAAO6T,aADV1gC,MAEE6G,KAAItG,GAAM,kBAAkBA,EAAGpB,WAAU6J,KAAK,GAC9D,CAED0sC,MACI,MAAM31C,EAAKC,KACX,OAAOD,EAAG4H,OAAOd,KAAInE,GAAK3C,GAAGs2C,GAAW3zC,KAAIsG,KAAK,GACpD,CAEDqtC,IAAWhtC,EAAM,IACb,IAAKA,EAAK,MAAO,GAEjB,MAAO,yBADIrJ,KACwBu2C,uBAAuBltC,MAAQA,gDADvDrJ,KAC4Gw2C,2BAC1H,CAEGrL,SACA,OAAOnrC,KAAKoX,MAAM,QACrB,CAEGw6B,SACA,OAAO5xC,KAAKoX,MAAM,WACrB,CAEGg/B,eACA,OAAOtlC,OAAOwd,UAAUtuB,KAAM,YAAY,EAC7C,CAEGo2C,aAAS/sC,GAAM,GACf,OAAOyH,OAAO2lC,UAAUz2C,KAAM,WAAYqJ,EAC7C,CAEG2iC,UACA,OAAOl7B,OAAOgvB,SAAS9/B,KAAM,MAAO,EACvC,CAEGgsC,QAAI3iC,EAAM,GACV,OAAOyH,OAAOivB,SAAS//B,KAAM,MAAOqJ,EACvC,CAEG1B,aACA,OAAOmJ,OAAOpL,IAAI1F,KAAM,SAAU,IAAI4G,MAAM,KAAKC,KAAInE,GAAKA,EAAEoE,QAC/D,CAEGa,WAAO0B,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAAUqJ,EACrC,CAEGoyB,kBACA,MACMib,EADK12C,KACIgsC,IAAM,EAAI,WADdhsC,KAC4BgsC,cAAgB,GACvD,OAAOl7B,OAAOpL,IAAI1F,KAAM,cAAe02C,EAC1C,CAEGjb,gBAAYpyB,EAAM,IAClB,OAAOyH,OAAOvL,IAAIvF,KAAM,cAAeqJ,EAC1C,CAEGzB,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,GAClC,CAEG4H,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAEGktC,aACA,OAAOzlC,OAAOpL,IAAI1F,KAAM,UAAW,eACtC,CAEGu2C,WAAOltC,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EACtC,CAEGmtC,eACA,OAAO1lC,OAAOpL,IAAI1F,KAAM,YAAa,gBACxC,CAEGw2C,aAASntC,EAAM,IACf,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACxC,ECnMU,MAAMstC,kBAAkBpnB,iBAG/BhmB,eAAeC,OAAO,aAAcmtC,WACpC5xC,OAAOC,KAAK2xC,WACZh4B,cAAcgW,eAAegiB,WAAUjf,GAAkBif,WAAUhf,GACtE,CAODp5B,UAAwBgC,GACpB,OAAMA,aAAcjC,gBAChBiC,EAAGoU,UAAWpU,EAAGoU,QAAQpR,WAAW,UACjCozC,WAAUC,GAAWr2C,KAAQo2C,WAAUhK,GAAYpsC,IAC7D,CAMDhC,UAAwBgC,GACpBA,EAAG7B,GAAK6B,EAAG7B,IAAMkN,KAAKlN,GACtB,MAAMkuC,EAAU1tC,SAAS4L,cAAc,cACvC8hC,EAAQnb,IAAM,IAAIlxB,EAAG7B,KACrBkB,uBAAsB,KAClBqP,YAAW,KACP1O,EAAGqW,cAAc9V,sBAAsB,YAAa8rC,EAAQ,GAC7D,IAAI,GAEd,CAEDzkC,cACIC,OACH,CAEDypB,UAEIzpB,MAAMypB,UADK7xB,MAERy6B,IACN,CAGDA,MACI,MAAM16B,EAAKC,KACXD,EAAGoxB,YAAYpxB,EAAGiD,OAAQ,aAAcjD,EAAGmxB,KAAKzoB,KAAK1I,IACrDA,EAAGoxB,YAAYpxB,EAAGiD,OAAQ,aAAcjD,EAAGkxB,KAAKxoB,KAAK1I,GACxD,CAEDqlC,MACI,MAAMrlC,EAAKC,KACLsxC,EAAUvxC,EAAGM,cAAc,qBAEjC,OADAopB,SAAS4oB,WAAWtyC,EAAGmW,UAAWnW,EAAGiU,kBAAmBjU,EAAGiD,OAAQsuC,GAC5DvxC,EAAGiU,iBACb,CAEGN,SAEA,MAAO,gFADI1T,KAE6DkW,qHAF7DlW,KAIyBq+B,+CAGvC,CAEGr7B,aACA,MAAMjD,EAAKC,KACX,GAAID,EAAG0xB,IAAK,CACR,IAAIjhB,EAAQzQ,EAAGyQ,MAEf,OADAA,EAAQuC,EAAMuC,YAAYvV,EAAGyQ,OAASA,EAAMR,KAAOQ,EAC5CA,EAAMnQ,cAAcN,EAAG0xB,IACjC,CACD,OAAO1xB,EAAGkuC,wBAA0BluC,EAAG6W,aAC1C,CAEG6a,UAEA,OAAO3gB,OAAOpL,IADH1F,KACW,MACzB,CAEGyxB,QAAIpoB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAClC,CAEGg1B,YAEA,OAAOvtB,OAAOpL,IADH1F,KACW,UAAY8Q,OAAOpL,IAD9B1F,KACqCgD,OAAQ,QAC3D,CAEGq7B,UAAMh1B,EAAM,IAEZ,OAAOyH,OAAOvL,IADHvF,KACW,QAASqJ,EAClC,CAEG6M,gBAEA,OAAOpF,OAAOpL,IADH1F,KACW,YADXA,KAC2BgD,QAAQtC,SAAS+vC,aAAe,MACzE,CAEGv6B,cAAU7M,EAAM,IAChB,OAAOyH,OAAOvL,IAAIvF,KAAM,YAAaqJ,EACxC,CAEG4jB,aACA,OAAO,CACV,CAKDiE,OACI,MAAMnxB,EAAKC,KACXJ,uBAAsB,KAClB,MAAMW,EAAKwS,EAAMlF,MAAM9N,GAAG2T,IAAO,GACjC3T,EAAGe,sBAAsB,aAAcP,GACvCR,GAAGqlC,KACHryB,EAAM6E,YAAY7X,EAAGiU,kBAAmB,QAAQ,EAAK,GAE5D,CAKDid,OACI,MAAMlxB,EAAKC,KAMX,OALAiP,YAAW,KAGPjJ,MAAMC,KAAKlG,EAAGsV,YAAY5S,SAAQlC,GAAMA,EAAGD,UAAS,GACrD,KACIyS,EAAM6E,YAAY7X,EAAGiU,kBAAmB,QAAQ,EAC1D,CAKD0D,SACI,MAAM3X,EAAKC,KACXD,EAAGmnC,kBAAoB,EAAInnC,EAAGkxB,OAASlxB,EAAGmxB,MAC7C,CAOD3yB,UAAmBgC,GACf,OAAQA,GAAIyT,mBAAqBzT,GAAIyV,8BAA+B2gC,SACvE,CAODp4C,UAAkBgC,GACd,OAAOA,GAAI89B,OAAmC,YAA1B99B,GAAIG,SAASs3B,QACpC,EC1KU,MAAM6e,aAEjB1uC,YAAY2uC,EAAMC,GACd/2C,KAAK82C,KAAOA,EACZ92C,KAAK+2C,UAAYA,CACpB,CAEDx4C,gBAAgBy4C,EAAUD,GACtB,OAAOF,cAAaI,GAAkBD,EAAUD,EACnD,CAEDx4C,YAAY24C,GACR,OAAOlxC,MAAMC,KAAKixC,GAAOhxC,QAAOixC,GAAKA,aAAaC,OAAMvwC,KAAIswC,GAAK,IAAIN,aAAaM,IACrF,CAEGE,eACA,MAAMt3C,EAAKC,KACX,OAAOD,EAAGg3C,UAAY,GAAGh3C,EAAGg3C,aAAah3C,EAAG+2C,KAAK33C,OAASY,EAAG+2C,KAAK33C,IACrE,CAEDm4C,UACI,MAAO,CAAC,YAAa,YAAa,YAAa,aAAc,iBAAiB10C,SAAS5C,KAAK82C,KAAK7yC,KACpG,CAEDszC,UACI,MAAO,CAAC,YAAa,mBAAmB30C,SAAS5C,KAAK82C,KAAK7yC,KAC9D,CAED1F,UAAyBy4C,EAAUD,GAC/B,OAAIA,GAAaF,cAAaW,GAAaR,GAChCH,cAAaY,GAAU,GAAIZ,cAAaa,GAAOV,IAEnDv2C,QAAQk3C,QAAQd,cAAalmB,GAAS3qB,MAAMC,KAAK+wC,EAASE,OAAS,KAAKrwC,KAAIswC,GAAK,IAAIN,aAAaM,KAC5G,CAED54C,UAAeu4C,GACX,OAAOA,EAAK33C,KAAKoE,WAAW,IAC/B,CAEDhF,UAAgB24C,GACZ,OAAOlxC,MAAMC,KAAKixC,GAAOhxC,QAAO4wC,IAASD,cAAaje,GAAQke,IACjE,CAEDv4C,UAAgBq5C,GACZ,OAAO,IAAIn3C,SAAQ,CAAUk3C,EAASE,KAClCD,EAAMd,KAAKa,EAASE,EAChC,GACK,CAEDt5C,UAAmBq5C,GACf,OAAO,IAAIn3C,SAAQ,CAAUk3C,EAASE,KAClC,MAAM92B,EAAS,GACT+2B,EAASF,EAAMG,eACfC,KAAO,KACTF,EAAOG,aAAYlxC,IACXA,EAAQjI,OAAS,GACjBiiB,EAAOzJ,QAAQvQ,GACfixC,QAEAL,EAAQ52B,EACX,GACF82B,EAAO,EAEdG,MACZ,GACK,CAEDz5C,gBAAuB0jB,EAAMlb,GACzB,MAAMmxC,EAAU,GAChB,IAAK,MAAMN,KAASf,cAAalmB,GAAS5pB,GACtC,GAAI6wC,EAAMJ,YAAa,CACnB,MAAMzwC,QAAgB8vC,cAAasB,GAAYP,GACzCjhC,QAAakgC,cAAaY,GAAUG,EAAMP,SAAUtwC,GAC1DmxC,EAAQ5gC,UACxB,KAAmB,CACH,MAAMw/B,QAAaD,cAAauB,GAASR,GACzCM,EAAQ5gC,KAAK,IAAIu/B,aAAaC,EAAM70B,GACvC,CAEL,OAAOi2B,CACV,CAED35C,UAAoBy4C,GAChB,OAAOhxC,MAAMC,KAAK+wC,EAASx+B,OAAOhG,MAAM0sB,IACpC,MAAM0Y,EAAQ1Y,EAAKmZ,kBAAoBnZ,EAAKmZ,mBAC5C,OAAOT,GAASA,EAAMJ,WAAW,GAExC,CAEDj5C,UAAcy4C,GACV,OAAOhxC,MAAMC,KAAK+wC,EAASx+B,OACtB3R,KAAKq4B,GAASA,EAAKmZ,qBACnBnyC,QAAO0xC,GAAkB,MAATA,GACxB,ECpFU,MAAMU,kBAAkB/oB,UAEnChxB,aAAe,sCACfA,WAAa,wCAEbg6C,IAAY,KAEZh6C,YAaQ2G,EAAc6C,YAZJ,4cAajB,CAED5D,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KACX,MAAO,uCACqBD,EAAG6H,iDACE7H,EAAGssC,kBAAkBtsC,EAAGZ,SAASY,EAAGs+B,yDACpCt+B,EAAGy4C,iCAAiCz4C,EAAG8rC,eAAe9rC,EAAGZ,eAAeY,EAAGZ,SAASY,EAAG6rC,SAAW,WAAa,MAAM7rC,EAAGg3C,UAAY,4BAA8B,6CACrKh3C,EAAG04C,2CAGpC,CAED5mB,UACI,MAAM9xB,EAAKC,KACLgD,EAASjD,EAAGqX,MAAM,OACxBrX,EAAGoxB,YAAYnuB,EAAQ,QAASjD,GAAGk4B,GAASxvB,KAAK1I,IACjDA,EAAGoxB,YAAYnuB,EAAQ,YAAajD,GAAG24C,GAAajwC,KAAK1I,IACzDA,EAAGoxB,YAAYnuB,EAAQ,WAAYjD,GAAG24C,GAAajwC,KAAK1I,IACxDA,EAAGoxB,YAAYnuB,EAAQ,YAAajD,GAAG44C,GAAalwC,KAAK1I,IACzDA,EAAGoxB,YAAYnuB,EAAQ,OAAQjD,GAAG64C,GAAQnwC,KAAK1I,IAC/CA,EAAGoxB,YAAYnuB,EAAQ,QAASjD,GAAG48B,GAASl0B,KAAK1I,IACjDA,EAAGoxB,YAAYnuB,EAAQ,SAAUjD,GAAG28B,GAAUj0B,KAAK1I,IACnDqI,MAAMypB,SACT,CAEGgnB,aACA,OAAO74C,KAAKoX,MAAM,MACrB,CAEG0hC,aACA,OAAO94C,KAAKoX,MAAM,QACrB,CAKGxP,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAOs4C,UAAUrO,IAC5C,CAEGriC,QAAIyB,EAAM,IACV,OAAOyH,OAAOvL,IAAIvF,KAAM,MAC3B,CAKGy4C,cACA,OAAO3nC,OAAOpL,IAAI1F,KAAM,WAAY,GACvC,CAEGy4C,YAAQpvC,EAAM,IACd,OAAOyH,OAAOvL,IAAIvF,KAAM,WAC3B,CAKGqsC,eACA,OAAOv7B,OAAOpL,IAAI1F,KAAM,YAAa,GACxC,CAEGqsC,aAAShjC,EAAM,IACf,OAAOyH,OAAOvL,IAAIvF,KAAM,YAC3B,CAKGw4C,eACA,OAAO1nC,OAAOpL,IAAI1F,KAAM,YAAa,SACxC,CAEGw4C,aAASnvC,EAAM,IACf,OAAOyH,OAAOvL,IAAIvF,KAAM,YAC3B,CAKG4rC,eACA,OAAO96B,OAAOwd,UAAUtuB,KAAM,YAAY,EAC7C,CAEG4rC,aAASviC,EAAM,IACf,OAAOyH,OAAO8f,UAAU5wB,KAAM,YAAaqJ,EAC9C,CAKGg1B,YACA,OAAOvtB,OAAOpL,IAAI1F,KAAM,QAASs4C,UAAUS,MAC9C,CAEG1a,UAAMh1B,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,QAASs4C,UAAUS,MAC9C,CAKG55C,WACA,OAAO2R,OAAOpL,IAAI1F,KAAM,OAAQ,GACnC,CAEGb,SAAKkK,EAAM,IACX,OAAOyH,OAAOvL,IAAIvF,KAAM,OAAQ,GACnC,CAEG6rC,aACA,OAAO/6B,OAAOpL,IAAI1F,KAAM,SAAU,GACrC,CAEG6rC,WAAOxiC,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAC3B,CAKGkG,aACA,OAAO4K,OAAOpL,IAAI1F,KAAM,SAAU,yBACrC,CAEGkG,WAAOmD,EAAM,IACb,OAAOyH,OAAOvL,IAAIvF,KAAM,SAC3B,CAEG+2C,gBACA,OAAOjmC,OAAOwd,UAAUtuB,KAAM,aAAa,EAC9C,CAEG+2C,cAAU30C,EAAQ,IAClB,OAAO0O,OAAO8f,UAAU5wB,KAAM,YAAaqJ,IAC9C,CAED4uB,IAASj0B,GACLhE,KAAK84C,OAAOvpC,OACf,CAEDmpC,IAAa10C,GACT,MAAMjE,EAAKC,KACPD,GAAGw4C,IAAWS,aAAaj5C,GAAGw4C,IAClCx4C,GAAGw4C,GAAYtpC,YAAW,IAAMlP,EAAGuK,gBAAgB,UAAU,KAC7D,MAAM0sC,EAAWhzC,EAAEi1C,aACdjC,GAAaj3C,GAAGm5C,GAASlC,KAC9BA,EAASmC,WAAa,OACtBp5C,EAAGuJ,aAAa,QAAS,IACzBtF,EAAEgX,iBACL,CAED29B,IAAa30C,GAELA,EAAEi1C,eAAcj1C,EAAEi1C,aAAaE,WAAa,QADrCn5C,KAERsK,gBAAgB,SACnByP,SAASE,QAAQjW,EACpB,CAED40C,IAAQ50C,GACJ,MAAMjE,EAAKC,KACXD,EAAGuK,gBAAgB,SACnB,MAAM0sC,EAAWhzC,EAAEi1C,aACdjC,GAAaj3C,GAAGm5C,GAASlC,KAC9Bj3C,GAAGsxB,GAAQ2lB,GACXj9B,SAASE,QAAQjW,GACpB,CAED24B,IAAS34B,GAEL,IAAKA,EAAEy5B,cAAe,OACtB,IAAKz5B,EAAEy5B,cAAcjlB,MAAO,OAC5B,MAAMs+B,EAHK92C,MAGKo5C,GAAYp1C,EAAEy5B,cAAcjlB,OAC5C,IAAKs+B,EAAM,OACX,MAAMI,EAAQ,CAACJ,GALJ92C,MAMRqxB,GAAQ6lB,GACXlzC,EAAEgX,gBACL,CAED0hB,IAAU14B,GACN,MAEMkzC,EAFKl3C,KACM84C,OACG5B,MACfA,GAA0B,IAAjBA,EAAMp4C,QAHTkB,MAIRqxB,GAAQ6lB,EAEd,CAEDgC,IAASlC,GACL,OAAOhxC,MAAMC,KAAK+wC,EAASqC,OAAOn1C,QAAQ,UAAY,CACzD,CAEDk1C,IAAY5gC,GACR,MACM8gC,EADKt5C,KACIkG,OAAS,IAAIpD,OADjB9C,KAC2BkG,QAAU,KAChD,IAAK,MAAMg5B,KAAQ1mB,EACf,GAAkB,SAAd0mB,EAAKqa,KAAiB,CACtB,IAAKD,EAAK,OAAOpa,EAAKsa,YACtB,GAAIF,EAAI33C,KAAKu9B,EAAKj7B,MAAO,OAAOi7B,EAAKsa,WACxC,CAEL,OAAO,IACV,CAED3N,IAAQ4N,GACJ,MACMR,EAAe,IAAIS,aACzBD,EAAYh3C,SAAQ8E,GAAK0xC,EAAazgC,MAAM/C,IAAIlO,EAAEuvC,QAFvC92C,KAGR84C,OAAO5B,MAAQ+B,EAAa/B,MAHpBl3C,KAIR64C,OAAOrhC,YAAciiC,EAAY5yC,KAAIU,GAAKA,EAAEuvC,KAAK33C,OAAM6J,KAAK,KAClE,CAED7E,SAAcw1C,GACV,MAAM55C,EAAKC,KAELy5C,EADYE,aAAuBD,mBAE7B7C,aAAaY,SAASkC,EAAa55C,EAAGg3C,WAC5CF,aAAa5wC,KAAK0zC,GAEP5/B,SAAS6B,KAAK7b,EAAI,SAAU,CAAE05C,gBAAe,GAAM,GAAO,IAC3DA,EAAY36C,SACxBiB,GAAG8rC,GAAQ4N,GACX1/B,SAAS6B,KAAK7b,EAAI,WAAY,CAAE05C,gBAAe,GAEtD,QAGGlwC,eAAeC,OAAO,aAAc8uC,WACpCvzC,OAAOC,KAAKszC,WACZA,WAAUsB,IACb,EC3PU,MAAMC,gBAAgBv7C,YAEjCC,UAAgB,CAAC,OAAQ,QAAS,SAClCmyB,KAAU,EACV3lB,IAAO,GACPrE,IAAQ,GAERozC,KAAU,EACVC,IAAQ,EACRC,IAAS,EACTC,IAAQ,EAER3yC,IAAQ,GACRpB,IAAU,GACVg0C,IAAS,SAGL3wC,eAAeC,OAAO,WAAYqwC,SAClC90C,OAAOC,KAAK60C,QACf,CAEUp7C,gCACP,MAAO,CAAC,KAAM,MAAO,QAAS,OAAQ,SAAU,SAAU,OAC7D,CAED0J,cACIC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC9B,CAEDxT,yBAAyBhC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAC1D,MAAMtB,EAAKC,KAEX,GAAa,OAATb,EAGA,OAFAohB,EAAajgB,OAAOc,QACpBmf,EAAajb,MAAMvF,GAInBwgB,EAAa45B,UAAUp6C,EAAIZ,KAC3BY,EAAGZ,GAAQkC,GAGF,QAATlC,IACAY,GAAG2G,GAAQ,GACX3G,EAAGq6C,SAGV,CAKDt6C,oBACI,MAAMC,EAAKC,KACXD,GAAG2wB,IAAU,EACR3wB,EAAGrB,IAAIqB,EAAGuJ,aAAa,KAAMsC,KAAKlN,IACvC6hB,EAAajb,MAAMvF,EACtB,CAKDkB,uBACejB,MACR0wB,IAAU,EACbnQ,EAAajgB,OAFFN,KAGd,CASDmE,gBAAgBhF,EAAO,IACnB,IAAKA,EAAM,MAAM,IAAI6N,MAAM,oBAC3B,MAAMjN,EAAKC,KACX,OAAO,IAAIS,SAAQ,CAACuO,EAAGhL,KACnBjE,EAAG+a,KAAK3b,GAAO+b,GAAQlM,EAAEkM,EAAIxb,SAAQ,GAE5C,CAQDob,KAAK3b,EAAM+jB,GACP,OAAOljB,KAAKmxB,YAAYnxB,KAAMb,EAAM+jB,GAAM,EAC7C,CAQDlJ,OAAO7a,EAAM+jB,GACT,OAAOljB,KAAKmxB,YAAYnxB,KAAMb,EAAM+jB,EACvC,CAQDrI,SAAS1b,EAAM+jB,GACXljB,KAAKoxB,YAAYpxB,KAAMb,EAAM+jB,EAChC,CAODiO,YAAY5wB,EAAIpB,EAAO,GAAIqM,EAAIsP,GAAO,GAClC,OAAOf,SAASsX,OAAOrxB,KAAMO,EAAIpB,EAAMqM,EAAIsP,EAC9C,CAKDsW,YAAY7wB,EAAIpB,EAAO,GAAIqM,GACvBuO,SAASzZ,OAAON,KAAMO,EAAIpB,EAAMqM,EACnC,CAMGymB,WACA,MAAMA,EAAOnhB,OAAOpL,IAAI1F,KAAM,OAAQ,SAEtC,OADa65C,SAAQQ,GAAOz3C,SAASqvB,GACvBA,EAAO,OACxB,CAEGA,SAAK5oB,EAAM,SAEX,GADawwC,SAAQQ,GAAOz3C,SAASyG,GAC3B,OAAOyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAE7C,CAQG4kB,aAEA,IAAIlgB,EAAM,GACV,OAFW/N,KAEAiyB,MACP,IAAK,QACDlkB,EAAM,6DACN,MACJ,IAAK,OACDA,EAAM,kDAGd,OAAO+C,OAAOpL,IAVH1F,KAUW,SAAU+N,EACnC,CAEGusC,YACA,OAAOvnC,EAAMwD,QAAQvW,KAAM,WAC9B,CAKGC,UACA,MAAMF,EAAKC,KACX,OAAOD,GAAGw6C,GAAOx6C,EAAGgL,IAAKhL,EAAGg6C,KAAMh6C,EAAGi6C,MAAOj6C,EAAGmG,OAAQnG,EAAGuH,KAC7D,CAKGyD,UACA,OAAO/K,MAAK+K,EACf,CAEGA,QAAI1B,EAAM,IACCrJ,MACR+K,GAAO1B,EADCrJ,KAERo6C,QACN,CAEGJ,YACA,OAAOh6C,MAAKg6C,EACf,CAEGA,UAAM3wC,EAAM,GACDrJ,MACRg6C,GAAShuC,EAAOmF,MAAM9H,GADdrJ,KAERo6C,QACN,CAEGL,WACA,OAAO/5C,MAAK+5C,EACf,CAEGA,SAAK1wC,EAAM,GACArJ,MACR+5C,GAAQ/tC,EAAOmF,MAAM9H,GADbrJ,KAERo6C,QACN,CAMGN,aACA,OAAO95C,MAAK85C,EACf,CAEGA,WAAOzwC,GAAM,GACFrJ,MACR85C,GAAU9tC,EAAOkF,OAAO7H,GADhBrJ,KAERo6C,QACN,CAMGl0C,aACA,OAAOlG,MAAKkG,EACf,CAEGA,WAAOmD,GACIrJ,MACRkG,GAAU8F,EAAOiX,OAAO5Z,GAAO2C,EAAOyM,OAAOpP,GAAOA,EAD5CrJ,KAERo6C,QACN,CAMG9yC,WACA,OAAOtH,MAAKsH,EACf,CAEGA,SAAK+B,GACMrJ,MACRsH,GAAQ0E,EAAOwC,SAASnF,GAAOuE,KAAKC,MAAMxE,GAAOA,EADzCrJ,KAERo6C,QACN,CAKG1zC,WACA,OAAO1G,MAAK0G,EACf,CAEGwzC,YACA,OAAOl6C,MAAKk6C,IAAUl6C,MAAK0G,GAAM5H,MACpC,CAEG4pB,aAEA,OADW1oB,KACAi6C,KAAO,GADPj6C,KACeg6C,KAC7B,CAKGC,WACA,OAAOj6C,MAAKi6C,EACf,CAEGA,SAAK5wC,EAAM,GACX,IAAK2C,EAAOS,SAASpD,GAAM,MAAM,IAAI2D,MAAM,2BAC3C,MAAMjN,EAAKC,KACXD,GAAGk6C,GAAQjuC,EAAOmF,MAAM9H,EAAM,EAAI,EAAIA,GACtCtJ,GAAGk6C,GAAQl6C,GAAGk6C,GAAQl6C,EAAGy6C,MAAQz6C,EAAGy6C,MAAQz6C,GAAGk6C,GAC/C,MAAMF,EAAOh6C,GAAGi6C,IAAU3wC,EAAM,GAChCtJ,EAAG29B,QAAQqc,EAAMh6C,GAAGi6C,GAAQj6C,GAAGmG,GAASnG,GAAGuH,GAC9C,CAKGkzC,YACA,MAAMz6C,EAAKC,KACX,OAAiB,IAAbD,EAAGm6C,OACa,IAAbn6C,EAAGi6C,MADiB,EACC7sC,KAAK4a,KAAKhoB,EAAGm6C,MAAQn6C,GAAGi6C,GACvD,CAEDS,WACI,MAAM16C,EAAKC,KACX,GAAID,EAAGk6C,OAASl6C,EAAGy6C,MAEnB,OADAz6C,EAAGk6C,KAAOl6C,EAAGk6C,KAAO,EACbl6C,GAAGk6C,EACb,CAEDS,WACI,MAAM36C,EAAKC,KACX,GAAgB,IAAZD,EAAGk6C,KAEP,OADAl6C,EAAGk6C,KAAOl6C,EAAGk6C,KAAO,EACbl6C,GAAGk6C,EACb,CAEDU,WACI,MAAM56C,EAAKC,KAEX,OADAD,EAAGk6C,KAAqB,IAAdl6C,GAAGi6C,GAAe,EAAIj6C,EAAGy6C,MAC5Bz6C,GAAGk6C,EACb,CAEDW,YAGI,OAFW56C,KACRi6C,KAAO,EADCj6C,MAEDi6C,EACb,CAEDn9B,QACe9c,MACRk6C,GAAS,EADDl6C,KAER66C,SACN,CAED12C,WAAWkF,EAAKsR,GACZ,MAAM5a,EAAKC,KACX,IAAKD,GAAG2wB,GAAS,OAAO,EACxB,MAAMzwB,EAAMoJ,GAAOtJ,EAAGgL,IACtB,GAAmB,IAAf9K,EAAInB,OAAc,OAAO,GAC7B6b,EAAMA,GAAO,IACTkI,QAAUlI,EAAIkI,SAAW,CAAA,EAC7BlI,EAAIkI,QAAQ,gBAAkB,0BAC9BlI,EAAIkI,QAAQi4B,OAAS,mBACrB,MAAM5wC,QAAYC,MAAMlK,EAAK0a,GAC7B,IAAKzQ,EAAIE,GAAI,OAAO,EACpB,MAAM1D,QAAawD,EAAI8Y,OAEvB,OADAjjB,GAAG6/B,GAAQl5B,GACJA,CACV,CAEDk5B,IAAQl5B,EAAO,GAAI9C,GAAS,GAExB,MAAM7D,EAAKC,KAEX,IAAI+6C,EAAU,GAEVA,EADA/0C,MAAMyH,QAAQ/G,GACJA,EACHV,MAAMyH,QAAQ/G,EAAKA,MAChBA,EAAKA,KAEL,CAACA,GAGX9C,EACA7D,GAAG2G,GAAQ3G,GAAG2G,GAAMmD,OAAOkxC,IAE3Bh7C,GAAGk6C,GAAQ,EACXl6C,GAAG2G,GAAQq0C,GAGfh7C,GAAGm6C,GAASn6C,GAAG2G,GAAM5H,MACxB,CAED+7C,QAAQn0C,EAAO,GAAI9C,GAAS,GACxB,MAAM7D,EAAKC,KACXD,GAAG6/B,GAAQl5B,EAAM9C,GACjB7D,EAAG29B,QAAQ39B,EAAGg6C,KAAMh6C,EAAGi6C,MAAOj6C,GAAGmG,GAASnG,GAAGuH,GAChD,CAEDnD,cAAc41C,EAAO,EAAGC,EAAQ,EAAG9zC,EAAQoB,GACvC,MAAMvH,EAAKC,KACXkG,EAASnG,GAAGi7C,GAAc90C,GAAUnG,EAAGmG,QACvCoB,EAAOvH,GAAGk7C,GAAY3zC,GAAQvH,EAAGuH,MACjC,IAAIZ,EAAO,GAIX,KAFesF,EAAOwC,SAAStI,IAAW8F,EAAOyC,iBAAiBvI,KAEnDnG,EAAGgL,MAAQhL,EAAG+5C,QAA4B,GAAlB/5C,EAAG2G,KAAK5H,QAAc,CACzD,MAAMmB,EAAMF,GAAGw6C,GAAOx6C,EAAGgL,IAAKgvC,EAAMC,EAAO9zC,EAAQoB,GACnDZ,QAAa3G,EAAG6iB,KAAK3iB,EACxB,CAED,IAAKF,EAAG+5C,OAAQ,CACZ,MAAMp2B,EAAS3jB,GAAG2jB,KAClBhd,EAAO2c,OAAO63B,WAAWh1C,EAAQnG,GAAG2G,GAAOgd,GAC3Chd,EAAO2c,OAAO83B,SAAS7zC,EAAMZ,GAC7BszC,EAAkB,IAAVA,EAActzC,EAAK5H,OAASk7C,EACpCtzC,EAAOA,EAAK8D,MAAMuvC,EAAMA,EAAOC,EAClC,CAGD,OADAj6C,GAAGq7C,GAAQ,OAAQ10C,GACZA,CACV,CAED0zC,SACI,MAAMr6C,EAAKC,KACX,GAAKD,GAAG2wB,GACR,OAAO3wB,EAAG29B,QAAQ39B,EAAGg6C,KAAMh6C,EAAGi6C,MAAOj6C,EAAGmG,OAAQnG,EAAGuH,KACtD,CAEDizC,IAAOxvC,EAAKgvC,EAAMC,EAAO9zC,EAAQoB,GAE7BA,EAAOA,EAAOsG,KAAKyD,UAAU/J,GAAQ,GACrCpB,EAASA,EAAS0H,KAAKyD,UAAUnL,GAAU,GAC3C,MAAMyU,EAAM,CAAEq/B,MAAOA,EAAOD,KAAMA,EAAMzyC,KAAM+zC,mBAAmB/zC,GAAOpB,OAAQm1C,mBAAmBn1C,IACnG,OAAO6E,EAAMiB,EAAOsvC,YAJTt7C,KAIwBiuB,OAAQtT,EAC9C,CAEDygC,IAAQj8C,EAAO,OAAQuH,GACnBqT,SAASwsB,YAAY,EAAGvmC,KAAMb,EAAMuH,GAAM,EAC7C,CAEDs0C,IAAc3xC,GACV,IAAInD,EAAS,GAOb,OALmB,iBAARmD,GAEArD,MAAMyH,QAAQpE,MADrBnD,EAASmD,GAINnD,CACV,CAED+0C,IAAY5xC,EAAM,IACd,IAAI/B,EACJ,GAAmB,iBAAR+B,EACP/B,EAAO,CAAC,CAAE6c,IAAK9a,SACZ,GAAIrD,MAAMyH,QAAQpE,GACrB/B,EAAO+B,OACJ,GAAI2C,EAAOS,SAASpD,GAAM,CAC7B,MAAM6a,EAAM/W,KAAKoc,IAAIlgB,GACrB/B,EAAO,IAAItB,MAAMke,GACjB5c,EAAK4c,EAAM,GAAK,CAAEK,IAAKlb,EAC1B,CACD,OAAO/B,CACV,CAEDoc,MACI,MACMA,EADK1jB,KACOs6C,OAAOhT,QAAQ5jB,OACjC,OAAOA,GAAkB1d,MAAMC,KAFpBjG,KAE4ByK,iBAAiB,YAAY5D,KAAIiC,GAAKA,EAAE3J,MAClF,EC7bU,MAAMo8C,iBAAiBj9C,mBAG9BiL,eAAeC,OAAO,YAAa+xC,SACtC,CAED10C,GAAO,GAEPsB,cACIC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC9B,CAED7U,oBACIE,MAAKw7C,IACR,CAEDv6C,uBACIiE,EAAcmC,WAAWrH,KAAKU,QAAQyqB,MACzC,CAEDhnB,WACI,MACMuC,QAAa+a,SAASc,SADjBviB,KAC6B+K,IAAK,MAAO,MAAM,GAD/C/K,MAER6G,EAAOb,MAAMyH,QAAQ/G,GAAQA,EAAO3B,OAAOgC,QAAQL,EACzD,CAEDlG,SACI,MAAMT,EAAKC,KAELy7C,EAAU17C,EAAG27C,SAAW,UAAY,GACpCt2C,EAAQrF,EAAGyT,MAAQ,SAASzT,EAAGyT,SAAW,GAC1CmoC,EAAQ57C,EAAG67C,QAAU,YAAY77C,EAAG67C,WAAa,GAKvD,OAHA77C,EAAGW,QAAQyqB,MAAQ/lB,EAAQwG,KAAKlN,GAAK,GACrCwG,EAAcuB,QAAQ1G,EAAGW,QAAQyqB,MAAO/lB,GAEjC,sCAAsCrF,EAAGZ,SAASw8C,kCACpC57C,EAAG27C,yBAAyB37C,GAAG87C,4BACvCJ,KAAW17C,EAAG2iC,aAAa3iC,EAAGW,QAAQyqB,qCAChCprB,EAAGW,QAAQyqB,wBACxBprB,EAAGs+B,OAASt+B,EAAGZ,WACxB,CAED28C,eACI,MAAM/7C,EAAKC,KACX,IAAKD,EAAGmG,OAAQ,MAAO,YACvB,IAAIwN,EAAO,GACX,OAAQ3T,EAAG4W,MACP,IAAK,QACDjD,EAAO3T,GAAGg8C,KACV,MACJ,IAAK,QACDroC,EAAO3T,GAAGi8C,KACV,MACJ,QACItoC,EAAO3T,GAAGk8C,KAElB,MAAO,YAAYl8C,EAAGm8C,cAAcxoC,QACvC,CAEDqoC,MACI,MAAMh8C,EAAKC,KACL4vB,EAAO7vB,GAAGo8C,IAAe,GAC/B,MAAO,iBAAiBp8C,EAAG0zB,eAAe1zB,EAAGZ,gBAAgBY,EAAGs+B,OAASt+B,EAAGZ,gBAAgBY,EAAG0rC,cAAc7b,YAChH,CAEDosB,MACI,MACMt9C,EAAKkN,KAAKE,OAIhB,OALW9L,MAEKi8C,GAAav9C,GAEhB,iBAAiBA,MAJnBsB,MAGKm8C,IAAe,eAGlC,CAEDF,IAAatlC,EAAO,IAChB,MAAM5W,EAAKC,KACX,MAAO,gBAAgBD,EAAG0zB,eAAe1zB,EAAGZ,gBAAgBY,EAAGs+B,OAASt+B,EAAGZ,gBAAgBY,EAAG0rC,0BAA0B1rC,EAAGs+B,OAASt+B,EAAGZ,eAAewX,KACzJ,CAEDwlC,IAAeC,GAAU,GACrB,MACMzlC,EAAO,GAab,OAdW3W,KAER6f,QAAQpd,SAAQlC,IACf,MAAMwN,EAAM+C,OAAOwd,UAAU/tB,EAAI,WAAW,GACtC6B,EAAQ0O,OAAOpL,IAAInF,EAAI,QAAS,IAChC89B,EAAQvtB,OAAOpL,IAAInF,EAAI,MAAO6B,GACpC,IAAIsR,EAAO,GAEPA,EADA0oC,EACO,kBAAkBh6C,MAAU2L,EAAM,WAAa,MAAMswB,aAErD,kBAAkBA,kBAAsBj8B,MAEnDuU,EAAKW,KAAK5D,EAAK,IAEZiD,EAAK3N,KAAK,GACpB,CAEG6yC,SACA,MAAM97C,EAAKC,KACX,OAAGD,EAAG27C,UAAY37C,EAAGs8C,UAAmC,QAAjBt8C,EAAGs8C,UAAsB,GAAK,EAC9D,CACV,CAEG/B,YACA,OAAOvnC,EAAMwD,QAAQvW,KAAM,WAC9B,CAEGyrC,eACA,MACM19B,EADK/N,KACI2W,KAAO,cAAgB,eACtC,OAAO7F,OAAOpL,IAFH1F,KAEW,YAAa+N,EACtC,CAEG7H,aACA,OAAO4K,OAAOwd,UAAUtuB,KAAM,UAAU,EAC3C,CAEG07C,eACA,MAAM37C,EAAKC,KACX,SAAOD,EAAGZ,MAASY,EAAGu8C,UAAUxrC,OAAOwd,UAAUvuB,EAAI,YAAY,EACpE,CAEGs8C,gBAEA,OAAOvrC,OAAOpL,IADH1F,KACW,YAAa,GACtC,CAEGk8C,gBACA,OAAOprC,OAAOpL,IAAI1F,KAAM,aAAc,GACzC,CAEG0iC,gBACA,OAAO5xB,OAAOpL,IAAI1F,KAAM,aAAc,aACzC,CAEG4H,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,GAClC,CAEGwT,YACA,OAAO1C,OAAOpL,IAAI1F,KAAM,QAC3B,CAEGb,WACA,OAAO2R,OAAOpL,IAAI1F,KAAM,OAAQ,GACnC,CAEGq+B,YACA,OAAOvtB,OAAOpL,IAAI1F,KAAM,QAAS,GACpC,CAEGs8C,cACA,MAAqB,MAAdt8C,KAAKb,IACf,CAEGqkB,YACA,OAAO1S,OAAOgvB,SAAS9/B,KAAM,SAAU,EAC1C,CAEGgO,aACA,OAAO8C,OAAOpL,IAAI1F,KAAM,SAC3B,CAEGiE,WACA,OAAO6M,OAAOpL,IAAI1F,KAAM,OAC3B,CAEG47C,cACA,OAAO9qC,OAAOpL,IAAI1F,KAAM,UAAW,GACtC,CAKG2W,WACA,MACMtN,EAAMyH,OAAOpL,IADR1F,KACgB,OAAQ,IAAIsC,cACjC8N,EAAU,CAAC,QAAS,SAASxN,SAASyG,GAC5C,OAAK+G,GAHMpQ,KAGSyzB,KACbrjB,EAAU/G,EAAM,GADU,OAEpC,CAEGmP,YACA,OAAOqU,OAAO6T,aAAa1gC,KAC9B,CAEGu8C,gBACA,OAAOv8C,KAAKK,cAAc,yBAC7B,CAEGm8C,aACA,OAAOx8C,KAAKK,cAAc,sBAC7B,CAEGoxB,UACA,OAAO3gB,OAAOpL,IAAI1F,KAAKw8C,OAAQ,MAClC,CAEGzxC,UACA,OAAO+F,OAAOpL,IAAI1F,KAAKw8C,OAAQ,MAClC,CAEG38B,cACA,OAAOgN,OAAO6T,aAAa1gC,KAAKu8C,UACnC,CAEGE,WACA,OAAO5vB,OAAO6T,aAAa1gC,KAAKw8C,OACnC,CAKG/oB,WACA,OAAkC,IAA3BzzB,KAAKknC,iBACf,CAEGwV,SACA,MAAM38C,EAAKC,KACX,OAAID,EAAGgL,KACgB,IAAnBhL,GAAG8G,EAAK/H,SAAciB,GAAG8G,EAAQ9G,EAAG08C,KAAK51C,KAAItG,GAAM,CAACuQ,OAAOpL,IAAInF,EAAI,SAAUuQ,OAAOpL,IAAInF,EAAI,WAD7ER,GAAG8G,CAGzB,CAED81C,SACI,MAAM58C,EAAKC,KAEX,MAAO,CACHyxB,IAAM1xB,EAAG0xB,IACTtyB,KAAMY,EAAGZ,KACTk/B,MAAOt+B,EAAGs+B,MACV7qB,MAAOzT,EAAGyT,MACVkoC,SAAU37C,EAAG27C,SACbx1C,OAAQnG,EAAGmG,OACXge,IAAKnkB,EAAGyjB,MACRvf,KAAMlE,EAAGkE,KACT+J,OAAQjO,EAAGiO,OACXpG,IAAK7H,EAAG6H,IACRg0C,QAAS77C,EAAG67C,QACZ/0C,IAAK9G,GAAG28C,GAEf,ECvPU,MAAME,iBAAiBt+C,mBAG9BiL,eAAeC,OAAO,YAAaozC,SACtC,CAEGC,SACA,OAAO9pC,EAAMsE,SAASrX,KAAM,YAC/B,CAEG88C,SACA,OAAO/pC,EAAMsE,SAASrX,KAAM,yBAC/B,CAEG+8C,SACA,OAAOhqC,EAAMsE,SAASrX,KAAM,aAAakG,QAAO3F,GAA4C,UAAtCuQ,OAAOpL,IAAInF,EAAI,SAAU,UAClF,CAEDC,SACI,MAAMT,EAAKC,KAELs6C,EAAQv6C,EAAGu6C,MACXz6B,EAAU9f,GAAG+8C,GACbD,EAAU98C,GAAGg9C,GAEbrpC,EAAO,GAcb,OAbAA,EAAK4D,KAAK,iBAAiBgjC,EAAM5X,eAE7B7iB,EAAQ/gB,OAAS,IACjB4U,EAAK4D,KAAK,kCAAkCgjC,EAAM4B,eAClDn8C,GAAG88C,GAASp6C,SAAQlC,GAAMmT,EAAK4D,KAAK/W,EAAGu7C,kBACvCpoC,EAAK4D,KAAK,UAGd5D,EAAK4D,KAAK,gCAAgCgjC,EAAM0C,gBAChDH,EAAQp6C,SAAQlC,GAAMmT,EAAK4D,KAAK/W,EAAGC,YACnCkT,EAAK4D,KAAK,SAEV5D,EAAK4D,KAAK,YACH5D,EAAK1K,KAAK,GACpB,CAED2zC,SAGI,OAFW38C,MACK+8C,GACJl2C,KAAItG,GAAMA,EAAGo8C,UAC5B,CAEGrC,YACA,OAAOvnC,EAAMwD,QAAQvW,KAAM,WAC9B,CAEG0jB,aAGA,OAFW1jB,MACK+8C,GACJl2C,KAAItG,GAAMuQ,OAAOpL,IAAInF,EAAI,SAExC,ECrDU,MAAM08C,gBAAgBC,wBAEjC5C,IAAS,YAGL/wC,eAAeC,OAAO,WAAYyzC,QAAS,CAAExzC,QAAS,UACtD1E,OAAOC,KAAKi4C,QACf,CAEDn9C,oBACI,MAAMC,EAAKC,KACND,EAAGrB,IAAIqB,EAAGuJ,aAAa,KAAMsC,KAAKlN,IACvCqb,SAASsX,OAAOtxB,EAAIA,EAAI,SAASiE,GAAKjE,GAAGk4B,GAASj0B,KAClD+V,SAASsX,OAAOtxB,EAAIA,EAAI,eAAeiE,GAAKjE,GAAGo9C,GAAQn5C,KAAI,GAAO,GAClEjE,GAAGu6C,GAASvnC,EAAMwD,QAAQxW,EAAI,WACjC,CAEDkB,uBACejB,MACRs6C,GAAS,KACZvgC,SAAS2X,kBAFE1xB,KAGd,CAEGwjB,YACA,OAAOxjB,KAAKs6C,MAAM92B,KACrB,CAEG45B,cACA,OAAOp9C,KAAKs6C,MAAM8C,OACrB,CAEGC,aACA,OAAOr9C,KAAKs6C,MAAM+C,MACrB,CAEGC,gBACA,OAAOt9C,KAAKs6C,MAAMgD,SACrB,CAEG/f,aACA,OAAOv9B,KAAKs6C,MAAM/c,MACrB,CAEGggB,kBACA,OAAOv9C,KAAKs6C,MAAMiD,WACrB,CAEGjD,YACA,OAAOt6C,MAAKs6C,IAAUvnC,EAAMwD,QAAQvW,KAAM,WAC7C,CAEDQ,OAAOqiB,EAASnc,EAAMgiB,GAElB,MAAM3oB,EAAKC,KACX,IAAKgG,MAAMyH,QAAQoV,GAAU,OAE7B,MAAM26B,EAAO,GACb,IAAI9pC,EAAO,GAeX,GAbAhN,EAAKjE,SAAQ,CAACkhB,EAAKO,KACfs5B,EAAKlmC,KAAK,2BAA2BvX,EAAGs9C,sBAAsBn5B,MAG1DxQ,EADA1N,MAAMyH,QAAQkW,GACP5jB,GAAG09C,GAAa56B,EAASc,EAAKO,EAAKwE,GAEnC3oB,GAAGy3B,GAAW3U,EAASc,EAAK+E,GAGvC80B,EAAKlmC,KAAK5D,GACV8pC,EAAKlmC,KAAK,QAAQ,IAGF,IAAhB5Q,EAAK5H,QAAgBiB,EAAGu6C,MAAMoD,WAAY,CAC1C,MAAM/B,EAAQ94B,EAAQhc,KAAIiC,GAAKA,EAAE8yC,QAAgC,EAAtBhW,SAAS98B,EAAE8yC,SAAe,IAAGjpC,QAAO,CAACpL,EAAGC,IAAMD,EAAIC,GAAG,GAChGg2C,EAAKlmC,KAAKvX,GAAG49C,GAAUhC,GAC1B,CAGD5oC,EAAMyf,QAAQzyB,EAAIy9C,EAAKx0C,KAAK,KAC5B+J,EAAMsE,SAAStX,EAAI,MAAM0C,SAAQlC,IAA2C,IAA/BA,EAAGsjC,UAAU/8B,OAAOhI,QAAcyB,EAAGD,QAAQ,GAC7F,CAEDq9C,IAAUC,GACN,MAAO,uCAAuCA,6CAAgD59C,KAAKs6C,MAAMoD,sBAC5G,CAEDD,IAAa56B,EAASc,EAAKO,EAAKwE,GAC5B,MAAM3oB,EAAKC,KACL49C,EAAO,GAOb,OANA/6B,EAAQpgB,SAAQo7C,IACZ,MAAMrlB,EAAiB,MAAbqlB,EAAI1+C,MAAgB+kB,EAAM,EAAIwE,GAAQnc,WAAaoX,EAAIk6B,EAAI35B,KACrE05B,EAAKtmC,KAAK,cAAcvX,EAAGq9C,YAAY5kB,GAAK,gBAAgB,IAIzDolB,EAAK50C,KAAK,GACpB,CAEDwuB,IAAW3U,EAASc,EAAK+E,GACrB,MAAM3oB,EAAKC,KACL49C,EAAO,GAKb,OAJA/6B,EAAQpgB,SAAQ,CAACo7C,EAAK9+C,KAClB,MAAM2U,EAAO3T,GAAG+9C,GAAQD,EAAKl6B,EAAK5kB,EAAI,EAAI2pB,GAC1Ck1B,EAAKtmC,KAAK5D,EAAK,IAEZkqC,EAAK50C,KAAK,GACpB,CAED80C,IAAQD,EAAKl6B,EAAKO,GAEd,IAAI7a,EAAmB,MAAbw0C,EAAI1+C,KAAe+kB,EAAMP,EAAIk6B,EAAI1+C,MACvCsyB,EAAMosB,EAAIpsB,IAAM9N,EAAIk6B,EAAIpsB,KAAOpoB,EACnC,MAAMxC,EAAMg3C,EAAIh3C,KAAKX,QAAO4C,GAAKA,EAAE,KAAO,GAAK2oB,IAC/CpoB,EAAMxC,GAAK/H,OAAS,GAAI+H,EAAI,GAAG,IAAYwC,EAC3CA,EALWrJ,MAKFgO,GAAQ6vC,EAAKx0C,GACtB,MAAMsyC,EAAQkC,EAAIjC,QAAU,YAAYiC,EAAIjC,WAAa,GAEzD,MAAO,cARI57C,KAQao9C,WAAWS,EAAIj2C,QAAQ+zC,KAAStyC,GAAKkD,YAAc,eAC9E,CAEDyB,IAAQ6vC,EAAKx0C,GAET,IAAKw0C,EAAI7vC,OAAQ,OAAO3E,EAExB,MAAMpF,EAAOjE,MAAK+9C,GAAQF,EAAKx0C,GACzBiE,EAASuwC,EAAIvwC,QAAU9L,UAAU8L,OAEvC,OAAQrJ,GACJ,IAAK,YACL,IAAK,OACD,MAAM+5C,EAAoB,QAAdH,EAAI7vC,YAAmBxK,EAAYq6C,EAAI7vC,OACnD,OAAO3E,GAAOA,EAAM,EAAI,IAAIub,OAAOvb,GAAK2E,OAAOgwC,EAAK1wC,GAAUjE,EAClE,IAAK,SACL,IAAK,UACL,IAAK,SACD,MACJ,IAAK,WACD,MAAMsR,EAAM,CAAEvV,MAAO,WAAYk7B,SAAUud,EAAIvd,UAC/C,OAAO,IAAI3X,KAAK4X,aAAajzB,EAAQqN,GAAK3M,OAAO3E,GAGzD,OAAOA,CACV,CAED00C,IAAQF,EAAKx0C,GACT,OAAIw0C,EAAI55C,KAAa45C,EAAI55C,KACrBoF,aAAexF,KAAa,OAC5BwF,aAAe40C,OAAe,SAC9B50C,aAAeiD,QAAgB,iBACrBjD,CACjB,CAED8zC,IAAQn5C,GAEP,CAEDi0B,IAASj0B,GACL,MAAMjE,EAAKC,KACLO,EAAKyD,EAAEhB,OACPk7C,EAAWl6C,EAAEqW,SAAWta,EAAGw9C,YAEb,QAAfh9C,EAAGoU,SACH5U,EAAGw9B,QAER39B,uBAAsB,KAClBG,GAAGo+C,GAAa59C,EAAGgW,QAAQ,MAAO2nC,EAAUl6C,EAAE,GAGrD,CAEDm6C,IAAaC,EAAKx6C,GAAS,EAAOsX,GAE9B,MAAMnb,EAAKC,KACLq+C,EAAavtC,OAAOwd,UAAU8vB,EAAK,YAQzC,GANKx6C,GAAQmP,EAAMsE,SAAStX,EAAI,MAC3B0C,SAAQlC,IACLuQ,OAAOvL,IAAIhF,EAAI,QAAS,MACxBuQ,OAAOvL,IAAIhF,EAAI,WAAY,KAAK,IAGb,SAAvB69C,EAAI19C,QAAQyX,OAAmB,OAEnCrH,OAAOvL,IAAI64C,EAAK,QAASC,EAAa,KAAOt+C,EAAGu9C,WAChDxsC,OAAOvL,IAAI64C,EAAK,YAAYC,GAAa,MAEzC,MAAM33C,EAAO,GACbqM,EAAMsE,SAAStX,EAAI,qBAAqB0C,SAAQlC,GAAMmG,EAAK4Q,KAAKsuB,SAASrlC,EAAGG,QAAQ8iB,UACpFzJ,SAAS6B,KAAK7b,EAAI,SAAU,CAAE2G,KAAMA,EAAMwU,IAAKA,IAAO,EACzD,ECzLU,MAAMojC,gBAAgB/uB,UAEjChxB,UAAkB,CAAC,YAAa,YAChCg/B,KAAU,EACVggB,KAAe,EAEf16B,IAAW,GAEXnc,IAAQ,GACR0oB,IAAY,GAEZ9pB,GAAS,KAETuB,GAAO,CACHe,IAAO,QACP,aAAc,cACd,UAAW,iBACX,WAAY,kBAGhB22C,IAAa,6BACbC,IAAY,uDACZC,IAAa,+BACbC,IAAU,GACVC,IAAW,MAGXC,IAAU,EACVC,IAAS,EACTC,IAAS,EACTC,IAAO,SAIHx1C,eAAeC,OAAO,WAAY80C,SAClCv5C,OAAOC,KAAKs5C,QACf,CAEU7/C,gCAEP,OAAO8wB,UAAUkR,kBADH,CAAC,MAAO,SAAU,cAAe,MAAO,aAAc,aAAc,cAAe,UAAW,WAAY,cAE3H,CAEDt4B,cACIC,QACApI,MAAKyqC,IACR,CAEDA,MACI,MAAM1qC,EAAKC,KACX,IAAI2W,EAAO3Q,MAAMC,KAAKlG,EAAGuU,UAAUpO,QAAO3F,GAAMA,EAAGkU,MAAoB,UAAZlU,EAAGkU,OAC9D,GAAIkC,EAAK7X,OAAS,EAAG,MAAM,IAAIkO,MAAM,0EAA0EjN,EAAG4U,gBAAgB5U,EAAGrB,MACrIiY,EAAO3Q,MAAMC,KAAKlG,EAAGsV,YAAYnP,QAAO3F,IAAOA,EAAGkU,OAElD,IADgB1B,EAAM8G,UAAUlD,EAAM2nC,SAAQ1T,IAChC,MAAM,IAAI59B,MAAM+F,EAAM+G,kBAAkB/Z,EAAIu+C,SAAQ1T,IACrE,CAEDtpC,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACxCrB,MACRg/C,GADQh/C,MACG6G,EAAK1H,GAAOkC,EAC7B,CAEDJ,uBACI,MAAMlB,EAAKC,KACXD,GAAG8iB,GAAW,GACd9iB,GAAG2G,GAAQ,GACX3G,GAAGqvB,GAAY,GACfrvB,GAAGuF,EAAS,KACZ8C,MAAMnH,sBACT,CAEDkD,gBACI,MAAMpE,EAAKC,KAGX,IADcD,EAAGuF,MACL,CACR,MAAM25C,EAASnuC,OAAOpL,IAAI,QAC1B3F,GAAGuF,QAAeib,EAAa2+B,QAAQD,EAC1C,CAED72C,MAAMypB,UACF9xB,EAAGo/C,cAAap/C,EAAGo/C,YAAYr1C,UAAW,GAC9C/J,EAAGoxB,YAAYpxB,EAAGiQ,KAAM,QAAQhM,GAAKjE,GAAGq/C,GAAcp7C,EAAEtE,UACxDK,EAAGoxB,YAAYpxB,EAAGiQ,KAAM,UAAUhM,GAAKjE,GAAGs/C,GAAgBr7C,EAAEtE,UAC5DK,EAAGoxB,YAAYpxB,EAAGiQ,KAAM,UAAUhM,GAAKjE,GAAGo+C,GAAan6C,EAAEtE,UACzDK,EAAGoxB,YAAYpxB,EAAGiQ,KAAM,UAAUhM,GAAKjE,GAAGu/C,GAAet7C,KACzDjE,EAAGoxB,YAAYpxB,EAAI,QAAQiE,GAAKjE,GAAGw/C,GAAQv7C,KAC3CjE,EAAGoxB,YAAYzmB,OAAQ,UAAU,IAAM3K,EAAG8tC,WAC1CjuC,uBAAsB,IAAMG,EAAGuF,MAAM20C,KAAO,GAC/C,CAEGkF,kBACA,OAAOn/C,KAAKK,cAAc,aAC7B,CAEGiF,YACA,MAAMvF,EAAKC,KACX,GAAID,GAAGuF,EAAQ,OAAOvF,GAAGuF,EAGzB,GADAvF,GAAGuF,EAASvF,EAAGM,cAAc,aACxBN,GAAGuF,EAAQ,CACZ,MAAM25C,EAASnuC,OAAOpL,IAAI,QAC1B3F,GAAGuF,EAASyN,EAAMqE,MAAM,WAAW6nC,IACtC,CACD,OAAOl/C,GAAGuF,CACb,CAEGgiC,aACA,OAAOtnC,KAAKK,cAAc,YAC7B,CAKG+uB,eACA,OAAOpvB,MAAKovB,EACf,CAKGmuB,kBACA,OAAOv9C,MAAKu9C,EACf,CAEGA,gBAAYl0C,GAAM,GACPrJ,MACRu9C,GAAevxC,EAAOkF,OAAO7H,EACnC,CAKGk0B,aACA,OAAOv9B,MAAKu9B,EACf,CAEGA,WAAOl0B,GAAM,GACFrJ,MACRu9B,GAAUvxB,EAAOkF,OAAO7H,EAC9B,CAEGm2C,cACA,OAAO1uC,OAAOwd,UAAUtuB,KAAM,WAAW,EAC5C,CAEG4H,UACA,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAOA,MAAKw+C,GACvC,CAEGlB,gBACA,OAAOxsC,OAAOpL,IAAI1F,KAAM,aAAcA,MAAKu+C,GAC9C,CAEG7b,gBACA,OAAO5xB,OAAOpL,IAAI1F,KAAM,aAAcA,MAAKy+C,GAC9C,CAEGpB,aACA,OAAOvsC,OAAOpL,IAAI1F,KAAM,UAAWA,MAAK0+C,GAC3C,CAEGtB,cACA,OAAOtsC,OAAOpL,IAAI1F,KAAM,WAAYA,MAAK2+C,GAC5C,CAEGzC,gBACA,OAAOprC,OAAOpL,IAAI1F,KAAM,aAAc,GACzC,CAEGg9C,iBACA,OAAOlsC,OAAOpL,IAAI1F,KAAM,cAAe,GAC1C,CAEGw/C,YAAQn2C,GAAM,GACdyH,OAAO8f,UAAU5wB,KAAM,UAAWqJ,EACrC,CAEGzB,QAAIyB,EAAM,IACVyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EAC3B,CAEGi0C,cAAUj0C,EAAM,IAChByH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EAClC,CAEGq5B,cAAUr5B,EAAM,IAChByH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EAClC,CAEG6yC,cAAU7yC,EAAM,IAChByH,OAAOvL,IAAIvF,KAAM,aAAcqJ,EAClC,CAEG2zC,eAAW3zC,EAAM,IACjByH,OAAOvL,IAAIvF,KAAM,cAAeqJ,EACnC,CAEGg0C,WAAOh0C,EAAM,IACbyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EAC/B,CAEG+zC,YAAQ/zC,EAAM,IACdyH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EAChC,CAEGq0C,iBACA,OAAO5sC,OAAOpL,IAAI1F,KAAM,UAAW,UACtC,CAEG09C,eAAWr0C,GACX,OAAOyH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EACtC,CAEGo2C,mBACA,OAAOz/C,MAAK6iB,GAAS3c,QAAO4C,GAAKA,EAAE5C,SAAQpH,OAAS,CACvD,CAEDkgD,IAAQ7nC,EAAK9N,GACJ8N,GACLnX,KAAKghB,QAAQ7J,GAAK,GAAM1U,SAAQlC,IAC5BuQ,OAAOvL,IAAIhF,EAAI,QAAS8I,EAAI,GAEnC,CAEDk2C,IAAQv7C,GACJ+V,SAASE,QAAQjW,GACjB,MAAMjE,EAAKC,KACND,EAAGiQ,OACRjQ,GAAG2/C,GAAa17C,EAAEtE,QAClBqa,SAASwsB,YAAY,GAAIxmC,EAAGiQ,KAAM,OAAQhM,EAAEtE,QAC/C,CAEDggD,IAAah5C,GACT,MAAM3G,EAAKC,KAGX,GAFAD,GAAG2G,GAAQA,EACX3G,GAAGqvB,GAAY,IACVrvB,GAAG4/C,GAGJ,OAFA5/C,GAAG6/C,KACH7/C,GAAG8/C,KACIjgD,uBAAsB,IAAMG,GAAG2/C,GAAah5C,KAGvD9G,uBAAsB,IAAMG,GAAG+/C,MAElC,CAEGH,SACA,OAAO3/C,MAAK6iB,GAAS/jB,OAAS,CACjC,CAED8gD,MACI,MAAM7/C,EAAKC,KACL69C,EAAM99C,EAAGunC,OACfvnC,GAAG8iB,GAAWg7B,EAAMA,EAAIlB,SAAW,GAC/B58C,GAAG8iB,GAAS/jB,OAAS,GACD,IAApBiB,GAAG2G,GAAM5H,QACbiB,GAAGggD,GAAahgD,GAAG2G,GAAM,GAC5B,CAEDq5C,IAAap8B,GACT,MACMq8B,EAAO,GACbA,EAAK1oC,KAAK,eACNtR,MAAMyH,QAAQkW,IACdq8B,EAAK1oC,KAAK,oCACVqM,EAAIlhB,SAAQ,CAACC,EAAG3D,KACZ,MAAM2U,EAAO,wBAAwB3U,EAAI,YAAYA,iBACrDihD,EAAK1oC,KAAK5D,EAAK,KAGnB3O,OAAOsJ,KAAKsV,GAAKlhB,SAAQC,IACrB,MAAMgR,EAAO,oBAAoBhR,kBACjCs9C,EAAK1oC,KAAK5D,EAAK,IAGvBssC,EAAK1oC,KAAK,gBACV,MAAM2oC,EAAMltC,EAAMlF,MAAMmyC,EAAKh3C,KAAK,KAAK,GAhB5BhJ,KAiBRa,YAAYo/C,EAClB,CAEDH,MACI,MAAM//C,EAAKC,KACXD,EAAGiQ,KAAK3P,cAAc,SAASG,OAAOT,GAAG8iB,GAAU9iB,GAAG2G,GAAO3G,EAAGuF,MAAMojB,QACtE,MAAMw3B,EAAMngD,EAAGo/C,YACXe,IACAA,EAAIlmB,QACJkmB,EAAIpY,WAEX,CAED+X,MACI,MAAM9/C,EAAKC,KACX,IAAKD,GAAG4/C,GAAa,OACrB,MAAMjsC,EAAO3T,EAAGM,cAAc,aAAaG,SACrCuK,EAAM,iBAAiBhL,EAAG6H,QAAQ8L,mEACxCX,EAAMyf,QAAQzyB,EAAGiQ,KAAMjF,EAC1B,CAED8iC,SACI,MAAM9tC,EAAKC,KACXg5C,aAAaj5C,GAAGg/C,IAChBh/C,GAAGg/C,GAAO9vC,YAAW,IAAMlP,GAAGogD,MAAe,IAChD,CAEDA,MAEI,MAAMpgD,EAAKC,KACX,IAAKD,EAAGy/C,QAAS,OAEjB,GAAmB,IAAfz/C,GAAG6+C,GAAe,CAClB7+C,GAAG6+C,GAAU7+C,EAAGuF,MAAM00C,MACtB,MAAMoG,EAAKrgD,EAAGqX,MAAM,aAAa7D,wBAC3B8sC,EAAKtgD,EAAGqX,MAAM,UAAU7D,wBAC9BxT,GAAG8+C,IAAUuB,GAAI3sC,QAAU,IAAM4sC,GAAI5sC,QAAU,EAClD,CAMD,GAJkB,IAAd1T,GAAG++C,KACH/+C,GAAG++C,GAAS/+C,EAAGqX,MAAM,aAAa7D,wBAAwBE,QAAU,GAGrD,IAAf1T,GAAG6+C,GAAe,OACtB,GAAkB,IAAd7+C,GAAG++C,GAAc,OAErB,MAAM9vC,EAAIjP,EAAGwT,wBACP3U,EAAI8L,OAAOq7B,YAAc/2B,EAAE8a,IAAM/pB,GAAG8+C,GAAsB,EAAZ9+C,GAAG++C,GACjDtB,EAAOrwC,KAAKC,MAAMxO,EAAImB,GAAG++C,IAC/B/+C,EAAGuF,MAAM00C,MAAQwD,EAAO,GAAKA,EAAOz9C,GAAG6+C,GAAUpB,EAAOz9C,GAAG6+C,EAE9D,CAMDU,IAAet7C,GACX,MACM8E,EAAI9E,EAAEtE,OACZoJ,EAAEmlB,OAASnlB,EAAEpC,KAAKunB,OAElBnlB,EAAEpC,KAAO,IAJE1G,MAIKovB,IAChBtmB,EAAE7E,KAAO,OAGZ,CAEDk6C,IAAaz3C,GACT,IAAKA,EAAM,OACX,MAAM3G,EAAKC,KACXD,GAAGqvB,GAAY,GACf1oB,EAAKA,MAAMjE,SAAQ1D,IACf,MAAM4kB,EAAM5jB,GAAG2G,GAAM3H,GACjB4kB,GAAK5jB,GAAGqvB,GAAU9X,KAAKqM,EAAI,IAE/B5jB,EAAGo/C,cAAap/C,EAAGo/C,YAAYr1C,SAAiC,IAAtBpD,EAAKA,MAAM5H,QACzDib,SAAS6B,KAAK7b,EAAI,WAAY,CAAE2G,KAAM3G,GAAGqvB,GAAWlU,IAAKxU,EAAKwU,KACjE,CAEDkkC,IAAc14C,GACV,MAAM3G,EAAKC,KACXD,EAAGuF,MAAMgC,KAAOZ,GAAQ,GACxBqT,SAAS6B,KAAK7b,EAAI,OAAQA,EAAGuF,MAAMgC,KACtC,CAED+3C,IAAgB34C,GACZ,MAAM3G,EAAKC,KACXD,EAAGuF,MAAMY,OAASQ,GAAQ,GAC1BqT,SAAS6B,KAAK7b,EAAI,SAAUA,EAAGuF,MAAMY,OACxC,ECnXW,MAAMo6C,oBAAoBC,oBAErCC,IAAM,SAGFj3C,eAAeC,OAAO,eAAgB82C,YAAa,CAAE72C,QAAS,OAC9D1E,OAAOC,KAAKs7C,YACf,CAEDxgD,oBACI,MAAMC,EAAKC,KACND,EAAGrB,IAAIqB,EAAGuJ,aAAa,KAAMsC,KAAKlN,IACvCqb,SAASsX,OAAOtxB,EAAIA,EAAI,SAASiE,GAAKjE,GAAGk4B,GAASj0B,KAClDuc,aAAajb,MAAMvF,GACnBA,EAAG8xB,SACN,CAED5wB,uBAEIsf,aAAajgB,OADFN,MAEX+Z,SAAS2X,kBAFE1xB,KAGd,CAED6xB,UACI,MAAM9xB,EAAKC,KACXJ,uBAAsB,KAClBG,GAAG0gD,GAAch+C,SAAQ,CAAClC,EAAIxB,IAAMgB,GAAGq/C,GAAc7+C,EAAIxB,EAAI,IAAG,GAEvE,CAEG0hD,SACA,OAAOzgD,MAAK07C,GAAUx1C,QAAO3F,GAA0B,KAApBA,EAAGG,QAAQ2H,OACjD,CAEGq4C,SACA,OAAO1gD,MAAK07C,GAAUx1C,QAAO3F,GAAwB,KAAlBA,EAAGG,QAAQwjB,KACjD,CAEGw3B,SACA,OAAO3oC,EAAMsE,SAASrX,KAAM,4BAA4B,GAAO,EAClE,CAEDi4B,IAASj0B,GACL,MAAMjE,EAAKC,KACLO,EAAKyD,EAAE6c,eAAe5O,QAC5B,GAAmB,OAAf1R,EAAGoU,QAAkB,OACzB,GAA2B,QAAvBpU,EAAGG,QAAQg7C,SAAoB,OACnC,MAAMn3B,EAAMvY,EAAOmF,MAAM5Q,EAAGG,QAAQ2H,OACpC9H,EAAGG,QAAQ2H,MAAQkc,EAAM,GAAK,EAAI,EAClC3kB,uBAAsB,IAAMG,GAAGq/C,GAAc7+C,EAAIyD,EAAEqW,WACtD,CAED+kC,IAAc7+C,EAAIqD,GAAS,GAEvB,MAAM7D,EAAKC,KAELukB,EAAMvY,EAAOmF,MAAM5Q,EAAGG,QAAQ2H,OAAQ,GAExCzE,GACA7D,GAAGygD,GAAM,EAAIrzC,KAAK6+B,IAAIr0B,MAAM,EAAG5X,GAAG27C,GAAU70C,KAAItG,GAAMyL,EAAOmF,MAAM5Q,EAAGG,QAAQwjB,IAAK,MACnFnR,EAAM6E,YAAYrX,EAAI,yCAAyC,KAE/DR,GAAGygD,GAAM,EACTztC,EAAMsE,SAAStX,EAAI,YAAY0C,SAAQlC,IACnCA,EAAGG,QAAQwjB,IAAM,EACjB3jB,EAAGG,QAAQ2H,MAAQ,EACnB0K,EAAM6E,YAAYrX,EAAI,yCAAyC,EAAM,KAI7EA,EAAGiV,UAAUC,IAAI8O,EAAM,EAAI,cAAgB,gBAC3ChkB,EAAGG,QAAQwjB,IAAMnkB,GAAGygD,GACpBjgD,EAAGG,QAAQ2H,MAAQkc,EACnBxR,EAAM6E,YAAYrX,EAAI,gBAAgB,GAGtC,IAAI+G,EAAO,GACXvH,GAAG2gD,GAAQj+C,SAAQlC,IACf,MAAMgkB,EAAMvY,EAAOmF,MAAM5Q,EAAGG,QAAQ2H,MAAO,GACrC6b,EAAMlY,EAAOmF,MAAM5Q,EAAGG,QAAQwjB,IAAK,GACnC/kB,EAAO2R,OAAOpL,IAAInF,EAAI,OAAQA,EAAGsjC,WACjCrnB,EAAM,CAAE+H,IAAKA,EAAKJ,IAAK5jB,EAAGogD,UAAWxhD,KAAMA,EAAM+kB,IAAKA,GAC5D5c,EAAKgQ,KAAKkF,EAAI,IAElBlV,EAAO+b,OAAO83B,SAAS,CAAC,CAAEh8C,KAAM,MAAOolB,IAAK,IAAMjd,GAElDyS,SAAS6B,KAAK7b,EAAI,OAAQuH,GAAM,EACnC,ECzFS,MAAMs5C,sBAAsBL,oBAEvC9sB,KAAQ,SAGJlqB,eAAeC,OAAO,iBAAkBo3C,cAAe,CAAEn3C,QAAS,OAClE1E,OAAOC,KAAK47C,cACf,CAKD9gD,oBACI,MAAMC,EAAKC,KACXD,EAAGrB,GAAKqB,EAAGrB,IAAMkN,KAAKlN,GACtBqB,GAAG0zB,GAAqE,MAA7D1gB,EAAMqE,MAAMrX,EAAI,0CAC3BA,GAAG8gD,KACH9gD,GAAG+gD,KACHvgC,aAAajb,MAAMvF,GACnBH,uBAAsB,IAAMG,GAAG28B,MAClC,CAKDz7B,uBAEIsf,aAAajgB,OADFN,MAEX+Z,SAAS2X,kBAFE1xB,KAGd,CAEG8X,WACA,OAAO/E,EAAMguC,QAAQ/gD,KACxB,CAED6gD,MACI,MAAM9gD,EAAKC,KACX+S,EAAMsE,SAAStX,EAAI,iBACd0C,SAAQlC,GAAMwZ,SAASsX,OAAOtxB,EAAIQ,EAAI,UAAUyD,GAAKjE,GAAG28B,GAAU14B,EAAEhB,WAC5E,CAED89C,MACI,MAAM/gD,EAAKC,KACPD,GAAG0zB,IAAO1Z,SAASsX,OAAOtxB,EAAIA,EAAG+X,KAAM,QAAQ9T,GAAKjE,GAAGw/C,GAAQv7C,EAAEtE,UAAS,GAAO,EACxF,CAEDg9B,IAAUn8B,GACN,MAAMR,EAAKC,KACLkG,EAAS,GACf6M,EAAMsE,SAAStX,EAAI,iBAAiB0C,SAAQlC,IACxC,MAAM6B,EAAQrC,GAAGihD,GAAUzgD,GACvB6B,GAAO8D,EAAOoR,KAAK,CAAEnY,KAAMoB,EAAGpB,KAAMiD,MAAOA,GAAQ,IAE3D2X,SAAS6B,KAAK7b,EAAI,SAAUmG,GAAQ,EACvC,CAEDq5C,IAAQ74C,GAEP,CAEDs6C,IAAUzgD,GACN,MACM0gD,EAASnwC,OAAOpL,IAAInF,EAAI,QAC9B,IAAK0gD,EAAQ,OAAO1gD,EAAG6B,MACvB,MACMuY,EAJK3a,KAGK8X,KAAKke,eAAeirB,IAClB5gD,cAAc,iBAAiBE,EAAG6B,WACpD,OAAOuY,GAAKja,SAAS0B,OAAS7B,EAAG6B,KACpC,ECpEU,MAAM8+C,qBAAqB3xB,UAEtChxB,gBAAkB,cAGdgL,eAAeC,OAAO,WAAY03C,cAClCn8C,OAAOC,KAAKk8C,aACf,CAED/4C,cACIC,OACH,CAEDjE,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KAELsF,EAAQvF,EAAGuF,MACX67C,EAAYphD,EAAGohD,UACfC,EAAWrhD,EAAGqhD,SACd5G,EAAQx6C,KAAKw6C,MAEb9mC,EAAO,GACbA,EAAK4D,KAAK,2DAEN6pC,GAAWztC,EAAK4D,KAAKvX,GAAGshD,GAASthD,EAAGujB,MAAO,QAAS,eACpD89B,GAAU1tC,EAAK4D,KAAKvX,GAAGshD,GAASthD,EAAGuhD,SAAU,WAAY,kBAE7D,IAAIviD,EAAI,EACR,KAAOA,GAAKy7C,GACR9mC,EAAK4D,KAAKvX,GAAGshD,GAAStiD,EAAG,GAAI,GAAIA,GAAKuG,EAAM20C,OAC5Cl7C,IAOJ,OAJIqiD,GAAU1tC,EAAK4D,KAAKvX,GAAGshD,GAASthD,EAAG+L,KAAM,OAAQ,cACjDq1C,GAAWztC,EAAK4D,KAAKvX,GAAGshD,GAASthD,EAAGklB,KAAM,OAAQ,cAEtDvR,EAAK4D,KAAK,eACH5D,EAAK1K,KAAK,GACpB,CAEDq4C,IAASh3C,EAAO,GAAIlL,EAAO,GAAIk/B,EAAQ,GAAIprB,GAAS,GAChD,MAAO,wBAAwBiuC,aAAaK,YAAYtuC,EAAS,SAAW,kCAAkC9T,aAAgBk/B,gBAAoBh0B,YACrJ,CAEDm3C,IAASx9C,GACL,MAAMjE,EAAKC,KACXJ,uBAAsB,KAClB,IAAIq6C,EAAoB,IAAbl6C,EAAGy6C,MAAc,EAAKrtC,KAAKC,OAAOrN,EAAGuF,MAAM20C,KAAO,GAAKl6C,EAAGy6C,OAASz6C,EAAGy6C,MAAQ,EACzFz6C,EAAGsX,SAAS,cAAc5U,SAAQlC,IAC9BA,EAAGqW,cAAcpB,UAAUlV,OAAO,SAAU,WAAY,UACpD25C,GAAQl6C,EAAGuF,MAAM20C,MAAM15C,EAAGqW,cAAcpB,UAAUC,IAAI,UACtDwkC,EAAOl6C,EAAGuF,MAAMk1C,OAAOj6C,EAAGqW,cAAcpB,UAAUC,IAAI,WAAY,UACtElV,EAAG8J,KAAO4vC,GAAM,GAClB,GAET,CAEDhiB,IAASj0B,GACL,MAAMjE,EAAKC,KACLqJ,EAAMrF,EAAEhB,OAAO7D,MAAQ6E,EAAEhB,OAAOqH,KACtC,OAAQhB,GACJ,IAAK,QACD,OAAOtJ,EAAGuF,MAAMs1C,YACpB,IAAK,OACD,OAAO76C,EAAGuF,MAAMq1C,WACpB,IAAK,OACD,OAAO56C,EAAGuF,MAAMm1C,WACpB,IAAK,WACD,OAAO16C,EAAGuF,MAAMo1C,WAGxB36C,EAAGuF,MAAM20C,KAAO5wC,GAAOtJ,EAAGuF,MAAM20C,IACnC,CAEDpoB,UACI,MAAM9xB,EAAKC,KACXD,EAAGoxB,YAAYpxB,EAAGuF,MAAO,OAAQvF,GAAGyhD,GAAS/4C,KAAK1I,IAClDA,EAAGsX,SAAS,KAAK5U,SAAQlC,GAAMR,EAAGoxB,YAAY5wB,EAAI,QAASR,GAAGk4B,GAASxvB,KAAK1I,KAC/E,CAEGu6C,YACA,OAAOvnC,EAAMwD,QAAQvW,KAAM,WAC9B,CAOGsF,YACA,MACM60B,EAAMrpB,OAAOpL,IADR1F,KACgB,SAC3B,OAAOm6B,EAAM5Z,EAAa7a,IAAIy0B,GAFnBn6B,KAE6Bs6C,MAAMh1C,KACjD,CAEG87C,eACA,OAAOtwC,OAAOwd,UAAUtuB,KAAM,YAAY,EAC7C,CAEGmhD,gBACA,OAAOrwC,OAAOwd,UAAUtuB,KAAM,aAAa,EAC9C,CAEGw6C,YACA,OAAO1pC,OAAOgvB,SAAS9/B,KAAM,QAAS,EACzC,CAEGsjB,YACA,OAAOxS,OAAOpL,IAAI1F,KAAM,QAAS,UACpC,CAEGilB,WACA,OAAOnU,OAAOpL,IAAI1F,KAAM,OAAQ,UACnC,CAEG8L,WACA,OAAOgF,OAAOpL,IAAI1F,KAAM,OAAQ,WACnC,CAEGshD,eACA,OAAOxwC,OAAOpL,IAAI1F,KAAM,WAAY,WACvC,ECzHU,MAAMyhD,uBAAuBlyB,UAE1ChxB,iBAAmB,+BACnBA,kBAAoB,mDACpBA,eAAiB,6BACjBA,oBAAsB,mDACtBA,qBAAuB,kDACvBA,kBAAoB,iDACpBA,oBAAsB,kCACtBA,qBAAuB,sDACvBA,kBAAoB,gCAEpBA,eAAiBkjD,eAAeC,WAEhC/qC,GAAQ,IAAI2G,IAED7e,gCAET,OAAO8wB,UAAUkR,kBADH,CAAC,YAEhB,CAEDkhB,kBAEEv5C,MAAMtI,mBACP,CAEDwB,kBAAkBnC,EAAO,GAAIm0B,EAAS,GAAIC,EAAS,IACjD,MAAMxzB,EAAKC,KAEXszB,EAASvzB,GAAG6hD,GAActuB,GAC1BC,EAASxzB,GAAG6hD,GAAcruB,GAE1B,MAAMhzB,EAAKR,EAAGqX,MAAM,OACpBrE,EAAM6E,YAAYrX,EAAI+yB,GAAQ,GAC9BvgB,EAAM6E,YAAYrX,EAAIgzB,GAAQ,EAC/B,CAEDquB,IAAcv4C,GACZ,IAAIzB,EAAM65C,eAAep4C,GACzB,OAAO2C,EAAOwC,SAAS5G,IAAQA,EAAIrE,WAAW,aAAeqE,EAAMyB,CACpE,CAEDlF,kBAAkBkF,EAAM,IAEtB,MAAO,qCADIrJ,KACoC4H,OADpC5H,KAC8CorB,0DAG1D,CAKGxjB,UACF,OAAOkJ,OAAOpL,IAAI1F,KAAM,MAAO,MAChC,CAEG4H,QAAIyB,EAAM,IACZyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EACzB,CAMG+hB,eACF,MAAM/hB,EAAMyH,OAAOpL,IAAI1F,KAAM,WAAYyhD,eAAeI,SACxD,OAAOx4C,EAAInF,QAAQ,KAAO,GAAKu9C,eAAep4C,GAAOo4C,eAAep4C,GAAOA,CAC5E,CAEG+hB,aAAS/hB,EAAM,IACjByH,OAAOvL,IAAIvF,KAAM,WAAYqJ,EAC9B,CAKGoH,aACF,OAAOK,OAAOwd,UAAUtuB,KAAM,UAAU,EACzC,CAEGyQ,WAAOpH,EAAM,IACfyH,OAAO8f,UAAU5wB,KAAM,SAAUqJ,EAClC,CAED8/B,KAAK9K,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO31B,EAAU,GACzD,OAAOxP,KAAKkxB,KAAKmN,EAAO2C,EAAS,eAAgBmE,EAAU31B,EAC5D,CAEDsyC,QAAQzjB,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO31B,EAAU,GAC5D,OAAOxP,KAAKkxB,KAAKmN,EAAO2C,EAAS,kBAAmBmE,EAAU31B,EAC/D,CAED1B,KAAKuwB,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO31B,EAAU,GACzD,OAAOxP,KAAKkxB,KAAKmN,EAAO2C,EAAS,kBAAmBmE,EAAU31B,EAC/D,CAEDuyC,OAAO1jB,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO31B,EAAU,GAC3D,OAAOxP,KAAKkxB,KAAKmN,EAAO2C,EAAS,iBAAkBmE,EAAU31B,EAC9D,CAEDwyC,QAAQ3jB,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO31B,EAAU,GAC5D,OAAOxP,KAAKkxB,KAAKmN,EAAO2C,EAAS,kBAAmBmE,EAAU31B,EAC/D,CAEDyyC,UAAU5jB,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO31B,EAAU,GAC9D,OAAOxP,KAAKkxB,KAAKmN,EAAO2C,EAAS,oBAAqBmE,EAAU31B,EACjE,CAEDu4B,KAAK1J,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO31B,EAAU,GACzD,OAAOxP,KAAKkxB,KAAKmN,EAAO2C,EAAS,eAAgBmE,EAAU31B,EAC5D,CAED0yC,MAAM7jB,EAAQ,GAAI2C,EAAU,GAAImE,GAAW,EAAO31B,EAAU,GAC1D,OAAOxP,KAAKkxB,KAAKmN,EAAO2C,EAAS,gBAAiBmE,EAAU31B,EAC7D,CAeDrL,WAAWk6B,EAAQ,GAAI2C,EAAU,GAAIp5B,EAAM,GAAIu9B,GAAW,EAAO31B,EAAU,EAAG6wB,GAC5E,MAAMtgC,EAAKC,KACX,GAAID,EAAG0Q,OAAQ,CACb,IAAIlO,QAAYk/C,eAAeU,oBAE/B,GADI5/C,IAAKA,EAAMxC,GAAGqiD,GAAY/jB,EAAO2C,EAASxxB,EAAS6wB,IACnD99B,EAAK,OAAOA,CACjB,CACD,OAAOxC,GAAGsiD,GAAShkB,EAAO2C,EAASp5B,EAAKu9B,EAAU31B,EACnD,CAED6yC,IAAShkB,EAAQ,GAAI2C,EAAU,GAAIp5B,EAAM,GAAIu9B,GAAW,EAAO31B,EAAU,GACvE,MAAMzP,EAAKC,KACLkO,EAAM,iCAAiCtG,iBAAmBu9B,eAAsB31B,eAAqBwxB,aAAmB3C,iBACxH99B,EAAKwS,EAAMlF,MAAMK,GAAK,GACtBo0C,EAAQviD,GAAGwiD,GAKjB,OAJA3iD,uBAAsB,KAChB0iD,IAAUviD,GAAI+Q,OAAOvL,IAAI+8C,EAAO,QAAS,mBAAmBviD,EAAG6H,OAAO7H,EAAGqrB,YAC7Ek3B,EAAMzhD,YAAYN,EAAG,IAEhBA,CACR,CAEGgiD,SACF,MAAM1T,EAAMtlC,eAAe7D,IAAI,cAAcokB,IAC7C,OAAO+kB,GAAO97B,EAAMqE,MAAMy3B,EAAK,qBAA+B7uC,IAC/D,CAEDoiD,IAAY/jB,EAAQ,GAAI2C,EAAU,GAAIxxB,EAAU,EAAG6wB,EAAU,IAC3D,MAAMtgC,EAAKC,KACXqgC,EAAQ5uB,KAAO4uB,EAAQ5uB,MAAQuvB,EAC/B,MAAMwhB,EAAe,IAAIC,aAAapkB,EAAOgC,GAC7CtgC,GAAG4W,EAAMlB,IAAI+sC,GACb,MAAMt6C,EAAWnI,GAAG2iD,GAAaj6C,KAAK,CAAE+5C,aAAcA,EAAchyC,MAAOzQ,IAG3E,OAFAyiD,EAAa73C,iBAAiB,QAASzC,GACnCsH,EAAU,GAAGP,WAAW/G,EAAoB,IAAVsH,GAC/BgzC,CACR,CAEDE,MACE,MAAM3iD,EAAKC,KACXD,EAAGyiD,aAAaxoB,QAChBj6B,EAAGyQ,OAAMmG,EAAMhR,OAAO5F,EAAGyiD,aAC1B,CAKD1lC,QACE,MAAM/c,EAAKC,KACXgG,MAAMC,KAAKlG,EAAG0K,iBAAiB,aAAahI,SAAQlC,GAAMA,EAAGD,WAC7DP,GAAG4W,EAAMlU,SAAQkgD,GAAMA,EAAG3oB,UAC1Bj6B,GAAG4W,EAAMmG,OACV,CAMU8lC,+BACT,MAAO,iBAAkB5yC,IAC1B,CAMU6yC,uBACT,MAAmC,YAA5BJ,aAAaK,UACrB,CAQDvkD,iCACE,QAAKkjD,eAAemB,oBACfnB,eAAeoB,iBAAiBJ,aAAaN,oBAC3CV,eAAeoB,UACvB,QAGCt5C,eAAeC,OAAO,kBAAmBi4C,gBACzC18C,OAAOC,KAAKy8C,eACb,ECrNY,MAAMsB,gBAAgBxzB,iBAGjChmB,eAAeC,OAAO,WAAYu5C,SAClCh+C,OAAOC,KAAK+9C,QACb,CAEUtkD,gCAET,OAAO8wB,UAAUkR,kBADH,CAAC,YAAa,OAE7B,CAEDn/B,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IAErD,GAAa,QAATlC,EAAgB,CAClB,MAAMoB,EAFGP,KAEKoX,MAAM,UACpBrE,EAAM6E,YAAYrX,EAAIa,GAAU,GAChC2R,EAAM6E,YAAYrX,EAAIc,GAAU,EACjC,CAEF,CAED8C,kBAAkBkF,EAAM,IACtB,MAAMtJ,EAAKC,KACLwhC,EAAMzhC,EAAGolC,SAAW,gEAAkE,GAC5F,MAAO,8CACgCplC,EAAG4wB,QAAU,OAAS,MAAM5wB,EAAG6H,gGAG1D7H,EAAGihC,gDAEHQ,6CAIb,CAED3P,UACE,MAAM9xB,EAAKC,KACLgvC,EAAOjvC,EAAGsX,SAAS,UACzBrR,MAAMC,KAAK+oC,GAAMvsC,SAAQ++B,GAAOzhC,EAAGoxB,YAAYqQ,EAAK,QAASzhC,EAAGi6B,MAAMvxB,KAAK1I,MAC3EqI,MAAMypB,UACF9xB,EAAG4wB,SAAS5wB,EAAG2/B,MACpB,CAEDxO,KAAKmN,EAAQ,GAAI2C,EAAU,GAAIp5B,EAAM,GAAI+oB,GAAU,EAAMwU,GAAW,EAAO31B,EAAU,GACnF,MAAMzP,EAAKC,KACXD,EAAG6H,IAAMA,GAAO7H,EAAG6H,IACnB7H,EAAGs+B,MAAQA,EACXt+B,EAAGihC,QAAUA,EACbjhC,EAAGyP,QAAUA,EACbzP,EAAGolC,SAAuB,GAAZA,EACdplC,EAAG4wB,QAAqB,GAAXA,EACb5wB,EAAG2/B,MACJ,CAEDA,OACE,MAAM3/B,EAAKC,KACXJ,uBAAsBuE,UACpB4O,EAAM6E,YAAY5X,MAAKsiD,GAAQ,QAAQ,GACnCviD,EAAGyP,SAAW,UACZxD,EAAOwD,QAAqB,IAAbzP,EAAGyP,SACxBzP,EAAGi6B,QAAO,GAEb,CAEDA,QACEh6B,MAAK6tB,IACN,CAEDA,UACE7tB,MAAK6tB,IACN,CAED1pB,WAGE,OAFA4O,EAAM6E,YAAY5X,MAAKsiD,GAAQ,QAAQ,SACjCt2C,EAAOwD,QAAQuD,EAAMqmB,OACpBp5B,KAAKM,QACb,CAEGgiD,SACF,OAAOtiD,KAAKoX,MAAM,SACnB,CAKG6V,aACF,OAAO,CACR,CAEGoR,YACF,OAAOvtB,OAAOpL,IAAI1F,KAAM,QACzB,CAEGq+B,UAAMh1B,EAAM,IACdyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EAC3B,CAEG23B,cACF,OAAOlwB,OAAOpL,IAAI1F,KAAM,UACzB,CAEGghC,YAAQ33B,EAAM,IAChByH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EAC7B,CAEGzB,UACF,OAAOkJ,OAAOpL,IAAI1F,KAAM,MACzB,CAEG4H,QAAIyB,EAAM,IACZyH,OAAOvL,IAAIvF,KAAM,MAAOqJ,EACzB,CAEGmG,cACF,OAAOsB,OAAOgvB,SAAS9/B,KAAM,UAAW,EACzC,CAEGwP,YAAQnG,EAAM,GAChByH,OAAOvL,IAAIvF,KAAM,UAAWqJ,EAC7B,CAEG87B,eACF,OAAOr0B,OAAOwd,UAAUtuB,KAAM,WAC/B,CAEGmlC,aAAS97B,GAAM,GACjByH,OAAOvL,IAAIvF,KAAM,WAAmB,GAAPqJ,EAC9B,CAEGsnB,cACF,OAAO7f,OAAOwd,UAAUtuB,KAAM,WAAW,EAC1C,CAEG2wB,YAAQtnB,GAAM,GAChByH,OAAOvL,IAAIvF,KAAM,UAAkB,GAAPqJ,EAC7B,EC3IY,MAAM25C,eAAezzB,UAEhChxB,gBAAkB,gBAClBA,gBAAkB,oBAClBA,iBAAmB,yBAGfgL,eAAeC,OAAO,UAAWw5C,QACjCj+C,OAAOC,KAAKg+C,OACf,CAEUvkD,gCAEP,OAAO8wB,UAAUkR,kBADH,CAAC,QAAS,OAAQ,SAEnC,CAEDn/B,kBAAkBnC,EAAO,GAAIiC,EAAW,GAAIC,EAAW,IACnD,MAAMtB,EAAKC,KACE,SAATb,IACAY,GAAGkjD,GAAW5hD,GAEL,UAATlC,IACAY,GAAGmjD,GAAY7hD,GAEN,UAATlC,GACAY,GAAGojD,GAAU/hD,GAAY4hD,OAAOI,SAAU/hD,EAEjD,CAED8hD,IAAU/hD,EAAW,GAAIC,EAAW,IAChC,MAAMd,EAAKP,KAAKoX,MAAM,cACtBrE,EAAM6E,YAAYrX,EAAIa,GAAU,GAChC2R,EAAM6E,YAAYrX,EAAIc,GAAU,EACnC,CAEG4hD,OAAS55C,EAAM,IACf,MAAM9I,EAAKP,KAAKoX,MAAM,KACtBtG,OAAOvL,IAAIhF,EAAI,QAAS8I,EAC3B,CAEG65C,OAAU75C,EAAM,IAChBrJ,KAAKoX,MAAM,eAAeysB,UAAYx6B,CACzC,CAEGg1B,YACA,OAAOvtB,OAAOpL,IAAI1F,KAAM,QAC3B,CAEGq+B,UAAMh1B,EAAM,IACZyH,OAAOvL,IAAIvF,KAAM,QAASqJ,EAC7B,CAEG04B,WACA,OAAOjxB,OAAOpL,IAAI1F,KAAM,OAC3B,CAEG+hC,SAAK14B,EAAM,IACXyH,OAAOvL,IAAIvF,KAAM,OAAQqJ,EAC5B,CAEGg6C,YACA,OAAOvyC,OAAOpL,IAAI1F,KAAM,QAASgjD,OAAOI,SAC3C,CAEGC,UAAMh6C,EAAM,IACZ,OAAOyH,OAAOvL,IAAIvF,KAAM,QAASqJ,GAAO25C,OAAOI,SAClD,CAEGE,cACA,OAAOxyC,OAAOpL,IAAI1F,KAAM,WAAY,6BACvC,CAEGujD,eACA,OAAOzyC,OAAOpL,IAAI1F,KAAM,YAAa,yBACxC,CAEDmE,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KACX,MAAO,yOAG8DD,EAAGujD,WAAWvjD,EAAGsjD,8CAC1DtjD,EAAGgiC,0GAGEhiC,EAAGwjD,aAAaxjD,EAAGs+B,iCAEvD,CAEGvO,aACA,OAAO,CACV,CAEG7C,aACA,OAAO,CACV,CAEGE,aACA,MAAO,kBACV,EC3GU,MAAMq2B,mBAGbt+C,EAAc6C,YAAYy7C,YAAYp+C,MACzC,CAEUA,mBACP,MAAO,22DAqEV,EChEU,MAAMq+C,gBAAgBl0B,UAEjC/L,IAAS,SAGLja,eAAeC,OAAO,WAAYi6C,SAClC1+C,OAAOC,KAAKy+C,QAEf,CAEDt7C,cACIC,QACAykB,OAAOC,SAAS9sB,KAAMA,KAAK2U,QAC9B,CAEG+uC,YACA,OAAO1jD,KAAKqX,SAAS,UACxB,CAEGmB,YACA,OAAOxY,KAAKqX,SAAS,UACxB,CAEGvY,aACA,OAAOkB,KAAKwY,MAAM1Z,MACrB,CAEG0kB,YACA,OAAOxjB,MAAKwjB,EACf,CAEGA,UAAMna,EAAM,GAERA,EAAM,GAAKA,GADJrJ,KACclB,SADdkB,MAERwjB,GAASna,EACf,CAEG82B,cAEA,OADYngC,KACF0jD,MADE1jD,MACOwjB,GACtB,CAEGmgC,cACA,OAAuB,IAAhB3jD,MAAKwjB,EACf,CAEGogC,aACA,OAAO5jD,MAAKwjB,KAAWxjB,KAAKlB,OAAO,CACtC,CAEDgN,OACI,MAAM/L,EAAKC,KACX,OAAID,EAAG6jD,SACP7jD,EAAGogC,QAAQkjB,MAAQL,OAAOa,UAC1B9jD,EAAGyjB,QACHzjB,EAAGogC,QAAQkjB,MAAQL,OAAOc,SACnB/jD,EAAGogC,QACb,CAEDmhB,WACI,MAAMvhD,EAAKC,KACX,OAAID,EAAG4jD,UACP5jD,EAAGogC,QAAQkjB,MAAQL,OAAOI,SAC1BrjD,EAAGyjB,QACHzjB,EAAGogC,QAAQkjB,MAAQL,OAAOc,SACnB/jD,EAAGogC,QACb,CAEDtF,QACI,MAAM96B,EAAKC,KACXD,EAAG2jD,MAAMjhD,SAAQoS,GAAMA,EAAGwuC,MAAQL,OAAOI,WACzCxjD,uBAAsB,KAClBG,GAAGyjB,GAAS,EACZzjB,EAAGogC,QAAQkjB,MAAQL,OAAOc,QAAQ,GAEzC,CAED3/C,kBAAkBkF,EAAM,IACpB,MAAMtJ,EAAKC,KAIX,MAAO,qHAHO6sB,OAAO6T,aAAa3gC,GACd8G,KAAI,CAACtG,EAAI2jB,IAAQnkB,GAAGgkD,GAAYxjD,EAAI2jB,KAAMlb,KAAK,KAGtE,CAED+6C,IAAYxjD,EAAI2jB,GAEZ,OADY,IAARA,GAAWpT,OAAOvL,IAAIhF,EAAI,QAASyiD,OAAOc,UACvC,YAAYhzC,OAAOkzC,QAAQzjD,eACrC"}