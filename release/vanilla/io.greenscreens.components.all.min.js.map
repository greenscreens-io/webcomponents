{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSLog.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSIcon.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSOverlay.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTag.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.5';\r\n    }\r\n\r\n    get build() {\r\n        return 20241227;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive,plain,definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif(GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\t\r\n\t\t\t}\r\n\t\t} \t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setDate(1);\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (!(editable && e.altKey)) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.resetSelect(this);\r\n    }    \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => !gs.includes(el)).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    #queued;\r\n    #queue = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n\r\n        this.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n            while (me.#queue.length > 0) {\r\n                try {\r\n                    me.attributeCallback(...me.#queue.shift());\r\n                } catch(e) {\r\n                    GSLog.error(null, e);\r\n                }\r\n            }\r\n            me.#queued = false;\r\n        });\r\n\r\n        //requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        const me = this;\r\n        me.elements.forEach(el => GSDOM.reset(el));\r\n        me.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        return me.validate();\r\n    }\r\n\r\n    get asJSON() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    // @Deprecated\r\n    set data(data) {\r\n        return this.asJSON = data;\r\n    }\r\n\r\n    // @Deprecated\r\n    get data() {\r\n        return this.asJSON;\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.asJSON);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last) {\r\n            GSDOM.fromObject2Element(el, me.#last);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.asJSON = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.validate();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.asJSON, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.reset(this);\r\n    }\r\n        \r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self?.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<gs-icon icon=\"${me.icon}\" hover=\"${me.hover}\"></gs-icon>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const opts = GSItem.getAttrs(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${opts} ${disabled} title=\"${me.comment}\" aria-label=\"${me.ariaLabel}\">${content}</button>`;\r\n    }\r\n\r\n    // icon attributes\r\n    \r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get hover() {\r\n        return GSAttr.get(this, 'hover');\r\n    }\r\n\r\n    set hover(val = '') {\r\n        return GSAttr.set(this, 'hover', val);\r\n    }\r\n\r\n    // button attributes\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        translate : `${cfg.clientX}px ${cfg.clientY}px`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n// TODO - add CloseWatcher when API available\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs\r\n   */\r\n  static get size() {\r\n    return GSDialog.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    return  GSDialog.size === 0 ? null : GSDialog.#STACK[GSDialog.size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialog.#updateStack();\r\n    return Array.from(GSDialog.#STACK);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (!dlg) return;\r\n      const cfg = { type: 'dialog', ok: me.visible };\r\n      if (me.visible && !dlg.open) {\r\n        dlg.showModal();\r\n        GSDialog.#STACK.push(me);\r\n        me.emit('change');\r\n        me.#notify(cfg);\r\n      } else  if (!me.visible && dlg.open) {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n        me.#notify(cfg);\r\n      }\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me, 'visible', me.#onVisible.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #notify(cfg) {\r\n    const me = this;\r\n    GSEvents.waitAnimationFrame(() =>{\r\n      me.emit('visible', cfg, true, true);\r\n    });\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onVisible(e) {\r\n    const me = this;\r\n    me.visible ? me.afterOpen() : me.afterClose();\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms?.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = true;\r\n    me.forms?.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = false;\r\n    me.forms?.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {\r\n      f.reset(); \r\n      if(data) GSDOM.fromObject(f, data);\r\n    });\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  async afterOpen() {\r\n    \r\n  }\r\n\r\n  async afterClose() {\r\n    \r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get active() {\r\n    return GSDialog.top;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elements stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label' && me.#labelEl) me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value' && me.#inputEl) me.#inputEl.value = newValue;\r\n      if (name === 'disabled' && me.#inputEl) me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n      if (me.#isRange) {\r\n         me.attachEvent(me.#inputEl, 'input', me.#onRange.bind(me));\r\n         me.#onRange();\r\n      } \r\n   }\r\n\r\n   #onRange(e) {\r\n      const me = this;\r\n      const el = me.#outputEl;\r\n      if (el) el.innerHTML = me.#inputEl?.value || '';\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #outputEl() {\r\n      return this.query('input').nextElementSibling;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.includes(',');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}${me.#output}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #output() {\r\n      const me = this;\r\n      if (!me.#isRange) return \"\";\r\n      return `<span class=\"position-absolute px-1\">${me.value}</span>`; \r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * \r\n * <gs-icon icon=\"database\" hover=\"gs-fade\" size=\"3\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSIcon extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-icon', GSIcon);\r\n        Object.seal(GSIcon);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        //const attrs = ['icon', 'size', 'css'];\r\n        return GSElement.observeAttributes([]);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.hover) {\r\n            me.attachEvent(me.self, 'mouseover', me.#onMouseOver.bind(me));\r\n            me.attachEvent(me.self, 'mouseout', me.#onMouseOut.bind(me));\r\n        }\r\n        if (me.click) {\r\n            me.attachEvent(me.self, 'click', me.#onMouseClick.bind(me));         \r\n        }        \r\n    }\r\n\r\n    async #onMouseClick(e) {\r\n        const me = this;\r\n        const delay = GSUtil.asNum(me.dataset.delay, 0);\r\n        GSDOM.toggleClass(me.self, me.hover, false);\r\n        GSDOM.toggleClass(me.self, me.click, false);\r\n        GSDOM.toggleClass(me.self, me.click, true);\r\n        if (delay > 0) {\r\n            await GSUtil.timeout(delay * 1000);\r\n            GSDOM.toggleClass(me.self, me.click, false);\r\n        }\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.self, me.click, false);\r\n        GSDOM.toggleClass(me.self, me.hover, true);\r\n    }\r\n\r\n    #onMouseOut(e) {\r\n        GSDOM.toggleClass(this.self, this.hover, false);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `<i class=\"bi bi-${me.icon} ${me.#sizeCss} ${me.css}\"></i>`;\r\n    }\r\n\r\n    get #sizeCss() {\r\n        return this.size>0 ? `fs fs-${this.size}` : '';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size');\r\n    }\r\n\r\n    set size(val = 0) {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Animation css when mouse over\r\n     */\r\n    get hover() {\r\n        return GSAttr.get(this, 'hover');\r\n    }\r\n\r\n    set hover(val = '') {\r\n        return GSAttr.set(this, 'hover', val);\r\n    }\r\n\r\n\r\n    /**\r\n     * Animation css when mouse click\r\n     */\r\n    get click() {\r\n        return GSAttr.get(this, 'click');\r\n    }\r\n\r\n    set click(val = '') {\r\n        return GSAttr.set(this, 'click', val);\r\n    }    \r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for a gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const size = GSAttr.getAsNum(el, 'size', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const ssize = size > 0 ? `${sfx}: ${size}px;` : '';\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [ssize, smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable()?.focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    super.connectedCallback();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#unbindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    if (!me.#bindings) return;\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    if (!me.#bindings) return;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOverlay class\r\n * @module components/GSOverlay\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * SVG overlay renderer around selected target.\r\n * <gs-overlay target=\"#GSId-30-nav\" autoremove></gs-overlay>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOverlay extends GSElement {\r\n\r\n    static #attrs = ['target', 'opacity', 'color', 'radius', 'padding'];\r\n\r\n    #tid = 0;\r\n    #svgid = GSID.id;\r\n\r\n    static {\r\n        customElements.define('gs-overlay', GSOverlay);\r\n        Object.seal(GSOverlay);\r\n    }\r\n\r\n    static get attributes() {\r\n        return GSOverlay.#attrs;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return GSElement.observeAttributes(GSOverlay.#attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (GSOverlay.attributes.includes(name)) {\r\n            if (name === 'target') {\r\n                me.#updateSVG(oldValue, newValue);\r\n            } else {\r\n                me.#updateSVG('', me.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me  = this;\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.svg?.remove();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get autoremove() {\r\n        return this.hasAttribute('autoremove');\r\n    }\r\n\r\n    set autoremove(val) {\r\n        return GSAttr.toggle(this, 'autoremove', GSUtil.asBool(val));\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target', '');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get overlayPadding() {\r\n        return GSAttr.getAsNum(this, 'padding', 1);\r\n    }\r\n\r\n    set overlayPadding(val = 1) {\r\n        return GSAttr.setAsNum(this, 'padding', val);\r\n    }\r\n\r\n    get overlayRadius() {\r\n        return GSAttr.getAsNum(this, 'radius', 6);\r\n    }\r\n\r\n    set overlayRadius(val = 6) {\r\n        return GSAttr.setAsNum(this, 'radius', val);\r\n    }\r\n\r\n    get overlayColor() {\r\n        return GSAttr.get(this, 'color', 'rgb(0,0,0)');\r\n    }\r\n\r\n    set overlayColor(val = '') {\r\n        return GSAttr.set(this, 'color', val);\r\n    }\r\n\r\n    get overlayOpacity() {\r\n        return GSAttr.getAsNum(this, 'opacity', 0.7);\r\n    }\r\n\r\n    set overlayOpacity(val = 0.7) {\r\n        return GSAttr.setAsNum(this, 'opacity', val);\r\n    }\r\n\r\n    get svg() {\r\n        return GSDOM.getByID(this.#svgid);\r\n    }\r\n\r\n    get path() {\r\n        return GSDOM.query(this.svg, 'path');\r\n    }\r\n\r\n    open() {\r\n        const me = this;\r\n        me.#updateSVG('', me.target);\r\n    }\r\n\r\n    close() {\r\n        const me = this;\r\n        const svg = me.svg;\r\n        me.removeEvent(svg, 'click');\r\n        svg?.remove();\r\n    }\r\n    \r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    #onResize() {\r\n        const me = this;\r\n        me.close();\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.open(), 200);\r\n    }\r\n\r\n    #updateSVG(oldTarget = '', newTarget = '') {\r\n        const me = this;\r\n        if (oldTarget === newTarget) return;\r\n        if (!newTarget) return me.svg?.remove();\r\n        const el = GSDOM.query(newTarget);\r\n        if (!el) return;\r\n\r\n        const svg = me.svg || me.#createSVG();\r\n        const path = me.path || me.#createSVGPath();\r\n        const pathStr = me.#createSVGPathString(el);\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        path.setAttribute(\"d\", pathStr);\r\n        if (!me.svg) {\r\n            svg.appendChild(path);\r\n            document.body.appendChild(svg);\r\n            me.attachEvent(svg, 'click', me.reset.bind(me));\r\n        }\r\n\r\n    }\r\n\r\n    get #viewBox() {\r\n        return `0 0 ${window.innerWidth} ${window.innerHeight}`;\r\n    }\r\n\r\n    #createSVG() {\r\n\r\n        const me = this;\r\n\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.id = me.#svgid;\r\n        svg.classList.add(\"gs-overlay\", \"gs-overlay-animated\");\r\n\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        svg.setAttribute(\"xmlSpace\", \"preserve\");\r\n        svg.setAttribute(\"xmlnsXlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin slice\");\r\n\r\n        svg.style.fillRule = \"evenodd\";\r\n        svg.style.clipRule = \"evenodd\";\r\n        svg.style.strokeLinejoin = \"round\";\r\n        svg.style.strokeMiterlimit = \"2\";\r\n        svg.style.zIndex = \"10000\";\r\n        svg.style.position = \"fixed\";\r\n        svg.style.top = \"0\";\r\n        svg.style.left = \"0\";\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        return svg;\r\n    }\r\n\r\n    #createSVGPath() {\r\n        \r\n        const me = this;\r\n\r\n        const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        pathEl.style.fill = me.overlayColor;\r\n        pathEl.style.opacity = me.overlayOpacity;\r\n        pathEl.style.pointerEvents = \"auto\";\r\n        pathEl.style.cursor = \"auto\";\r\n        return pathEl;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n        \r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n        \r\n        const rect = target.getBoundingClientRect()\r\n\r\n        const padding = me.overlayPadding;\r\n        const radius = me.overlayRadius;\r\n      \r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n      \r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n      \r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n      \r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n      \r\n        return `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n          M${highlightBoxX},${highlightBoxY} \r\n          h${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n          v${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n          h-${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n          v-${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;      \r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                translate : `${x}px ${y}px`\r\n            };\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n        me.attachEvent(el, 'dblclick', me.#onDoubleClick.bind(me));\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n        \r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', {start: true});\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', {stop: true});\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n            .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, true);\r\n                el.dataset.gsSplitter = true;\r\n            });\r\n        } else {\r\n            me.#lockable\r\n            .filter(el => el.dataset.gsSplitter)\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, false);\r\n                delete el.dataset.gsSplitter;\r\n            });            \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n    \r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTag extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSTag.#style);\r\n        customElements.define('gs-tag', GSTag);\r\n        Object.seal(GSTag);\r\n    }\r\n\r\n    static get #style() {\r\n        return `\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = me.#renderList();\r\n        const tags = me.#renderTags();\r\n        return `\r\n        <div class=\"d-flex flex-wrap align-items-center gap-1 ${me.css}\">\r\n            ${tags}\r\n            <input list=\"${me.name}_list\" name=\"${me.name}\" type=\"text\" class=\"form-control d-flex w-auto flex-grow-1\" placeholder=\"${me.placeholder}\">\r\n            <datalist id=\"${me.name}_list\">${items}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.query('div'), 'click', me.#onClick.bind(me));\r\n        me.attachEvent(me.#input, 'keydown', me.#onKeyDown.bind(me));\r\n        me.attachEvent(me.#input, 'input', me.#onInput.bind(me));\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTag.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.#data.length >= me.max;\r\n    }\r\n\r\n    get #data() {\r\n        return this.queryAll('.tag').map(el => el.dataset.value);\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();        \r\n    }\r\n\r\n    get #isDuplicate() {\r\n        const me = this;\r\n        const val = me.#input.value.toLowerCase();\r\n        return me.values.filter( v => v.toLowerCase() === val).length > 0 ;\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax ||(!optEl && me.allowAdd == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (me.#isDuplicate) return;\r\n        const src = me.#renderTag(fld.value);\r\n        const el = GSDOM.parse(src, true);\r\n        fld.insertAdjacentElement('beforebegin', el);\r\n        fld.value = '';\r\n        optEl?.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n    \r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const opt  = document.createElement('option');\r\n        opt.value = tagEl.dataset.value;\r\n        me.#datalist.appendChild(opt);\r\n        tagEl.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        return items.map(el => `<option value=\"${el.name}\">`).join('');\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v)).join('');\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        return `<div class=\"badge tag ${me.cssTag}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"btn-close ms-1 ${me.cssClose}\"></button></div>`;\r\n    }\r\n  \r\n    get #input() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.query('datalist');\r\n    }\r\n\r\n    get allowAdd() {\r\n        return GSAttr.getAsBool(this, 'allowadd', false);\r\n    }\r\n\r\n    set allowAdd(val = false) {\r\n        return GSAttr.betAsBool(this, 'allowadd', val);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set max(val = 0) {\r\n        return GSAttr.setAsNum(this, 'max', val);\r\n    }\r\n\r\n    get values() {\r\n        return GSAttr.get(this, 'values', '').split(',').map(v => v.trim());\r\n    }\r\n\r\n    set values(val = '') {\r\n        return GSAttr.set(this, 'values', val);\r\n    }\r\n\r\n    get placeholder() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return GSAttr.get(this, 'placeholder', alt);\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val)\r\n    }    \r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '')\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }  \r\n\r\n    get cssTag() {\r\n        return GSAttr.get(this, 'css-tag', 'bg-secondary')\r\n    }\r\n\r\n    set cssTag(val = '') {\r\n        return GSAttr.set(this, 'css-tag', val);\r\n    }    \r\n\r\n    get cssClose() {\r\n        return GSAttr.get(this, 'css-close', 'text-bg-light')\r\n    }\r\n\r\n    set cssClose(val = '') {\r\n        return GSAttr.set(this, 'css-close', val);\r\n    }    \r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = null;\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events = {};\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events?.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events?.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events?.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', parent = '', css = '') {\r\n\r\n        const me = this;\r\n        const name = el.name || el.title;\r\n        const path = `${parent}/${name}`\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = GSUtil.isStringEmpty(pid) ? idx : `${pid}.${idx}`;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" `);\r\n        html.push(`data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\"  `);\r\n        html.push(`data-path=\"${path}\"  data-name=\"${name}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, path, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                if (sts) {\r\n                    const cl = cid.split('\\.').length;\r\n                    if (cl > pl + 1) {\r\n                        el = el.nextElementSibling;\r\n                        continue;    \r\n                    }\r\n    \r\n                    if (pl + 1 != cl && sts) break;\r\n                }\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parentNode(nodeid) {\r\n        return nodeid.split('.').slice(0,-1).join('.');\r\n    }\r\n\r\n    #parent(el) {\r\n        const me = this;\r\n        el = el || me.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = me.#parentNode(s);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    #next(el) {\r\n        el = el?.nextElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.nextElementSibling;\r\n        }\r\n        return el;\r\n    }\r\n\r\n    #previous(el) {\r\n        el = el?.previousElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.previousElementSibling;\r\n        }        \r\n        return el;\r\n    }\r\n\r\n    get level() {\r\n        return this.#selected?.dataset.nodeid.split('.').length || -1;\r\n    }\r\n\r\n    get path() {\r\n        return this.#selected?.dataset.path;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:first-of-type'));\r\n        const el = me.#next(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.next() ;\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        const el = me.#previous(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.prev() ;\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     * TODO - path navigation\r\n     */\r\n    open(path) {\r\n        const me = this;\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isOpen && isFolder) return me.next();\r\n        me.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     * TODO - path navigation\r\n     */\r\n    close(path) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || !(isOpen && isFolder)) return me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        // me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.repaint();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = [...me.#data, ...records];\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table body renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.queryAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" delay=\"${delay}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.removeNative(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  removeNative(notification) {\r\n    this.#list.delete(notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSBase","HTMLElement","refid","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","error","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles$1","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSVersion","version","build","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isNull","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","string","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr$1","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","readFromObject","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLSelectElement","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","recursive","plain","definitions","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","Event","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSPromise$1","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","AbortController","GSAbortController","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","UNIQUE","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","getSelected","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","objToHTML","reset","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","elements","read","submit","onSubmit","reportValidity","storage","fromObject","toObject","handler","old","write","onField","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","setSelectionRange","metaKey","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","hover","getAttrs","comment","ariaLabel","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","isCompany","isYear","company","GSDialog","STACK","updateStack","opened","dlg","dialog","showModal","notify","monitorAction","onForm","onVisible","onEscape","onClose","onCancel","buttonOkEl","forms","afterOpen","afterClose","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","focusable","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","isRange","onRange","outputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","output","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSIcon","onMouseOver","onMouseOut","onMouseClick","sizeCss","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSOverlay","tid","svgid","updateSVG","svg","autoremove","overlayPadding","overlayRadius","overlayColor","overlayOpacity","oldTarget","newTarget","createSVG","createSVGPath","pathStr","createSVGPathString","viewBox","createElementNS","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathEl","fill","pointerEvents","cursor","windowX","windowY","radius","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onDoubleClick","csize","onMouseUp","onMouseMove","lock","updateMouse","lockable","gsSplitter","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTag","renderList","renderTags","inputType","updateTag","srcElement","removeTag","addTag","isMax","optEl","allowAdd","renderTag","tagEl","cssTag","cssClose","betAsBool","alt","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","removeNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","assign","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","GSMarkdown","converter","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}