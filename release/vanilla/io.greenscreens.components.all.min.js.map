{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n\t\tconst css =  (typeof me.#map.get === 'function') ? me.#map.get(name) :  me.#map[GSUtil.capitalizeAttr(name)];\r\n\t\treturn css?.hasOwnProperty('value') ? css.name : css;\r\n    }\r\n\r\n    asBool(name) {\r\n        return GSUtil.asBool(this.get(name));\r\n    }\r\n\r\n    asNum(name) {\r\n        return GSUtil.asNum(this.get(name));\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.get(name) == value;\r\n    }\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic #getMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n     static styleValue(el, name) {\r\n\t\treturn GSCSSMap.getComputedStyledMap(el).get(name);\r\n\t}\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tglobalThis.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t\tglobalThis.GSEvent = GSEvent;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * @Class\r\n */\r\nexport default class GSEventBus extends EventTarget {\r\n\r\n    static #registry = new Map();\r\n\r\n    #listeners = new Set();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEventBus());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus) bus.#unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    #unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            me.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return me.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        me.#listeners.add(wrap);\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        Array.from(me.#listeners)\r\n            .filter(o => o.type === type && o.listener === listener)\r\n            .forEach(o => me.#listeners.delete(o));\r\n        return me.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst me = this;\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'ready', {});\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvent.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvent.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        return GSDOM.isStyleValue(el, 'display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static #actions = ['ok', 'reset', 'submit'];\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n        GSEvent.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e) {\r\n\r\n        const el = e.composedPath().shift();\r\n        const action = el?.dataset.action || e.detail.action || el?.type;\r\n        if (!GSFormExt.#actions.includes(action)) return;\r\n\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n\r\n        switch (action) {\r\n            case 'reset':\r\n                me.reset();\r\n                break;\r\n            case 'ok':\r\n            case 'submit':\r\n                GSFormExt.#onSubmit(e, me);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) return me.reportValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        GSEvent.send(me, 'form', data, true, true);\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        setTimeout(() => {\r\n            me.#onDataChange();\r\n        }, 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvent.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvent.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvent.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el.tagName);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvent.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos - 1] = me.mask[pos - 1];\r\n                pos = pos1 - 1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n\r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvent.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                }\r\n                GSEvent.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos + 1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos + 1, pos + 1);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvent.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvent.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvent.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSEvent from '../base/GSEvent.mjs';\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        GSEvent.send(me, 'date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n        me.#updateTarget(date);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvent.deattachListeners(me);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    const cfg = {clientX: x.clientX || x, clientY: x.clientY || y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      me.style.position = 'fixed';\r\n      me.style.top = '0px';\r\n      me.style.left = '0px';\r\n      me.style.transform = `translate(${cfg.clientX}px, ${cfg.clientY}px)`;\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    me.style.left = '';\r\n    me.style.top = '';\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        me.style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        me.style.top = `${top}px`;      \r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        let end = true;\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          el.style.left = '100%';\r\n          end = true;\r\n        }\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        GSEvent.prevent(e);\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    me.close();\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvent.prevent(e);\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\">${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\">${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\">${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\">${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\">${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    //me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    const me = this;\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    this.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n                 .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvent.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvent.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.action);\r\n    if (sts) return;\r\n    data.type = 'contextmenu';\r\n    GSEvent.send(me, 'action', data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static get top() {\r\n    return GSDialog.#STACK.length === 0 ? null : GSDialog.#STACK[GSDialog.#STACK.length-1];\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        if (!me.#dialog.open) {\r\n          me.#dialog.showModal();\r\n          GSDialog.#STACK.push(me);\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        me.#dialog.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'dialog', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable || e.key !== 'Escape') return;\r\n    me.close();\r\n    GSEvent.prevent(e);\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'dialog', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'dialog', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'dialog' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'dialog', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */  \r\n  extra() {\r\n    \r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvent.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.action);\r\n    if (sts) return;\r\n    data.type = 'dropdown';\r\n    GSEvent.send(me, 'action', data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n  #validateAllowed() {\r\n      const me = this;\r\n      let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'body');\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"body\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${idattr} name=\"${me.name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${me.#checked}\r\n               ${me.#mask} ${me.#pattern} ${me.#value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} ${me.#value} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled}\r\n               >`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">\r\n         ${me.#input}         \r\n         </slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n\r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=${this.placeholder}` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=${me.pattern}` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=${me.mask}` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=${me.accept}` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=${this.autocapitalize}` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=${this.autocomplete}` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=${this.value}` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=${this.list}` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n  }\r\n     \r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }   \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#generateHtml(el));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return ['style=\"', smax, smin, '\"'].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra' : return 'modal-xl';\r\n      case 'large' : return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvent.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.expanded;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, GSFileBox.CSS, true);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        \r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n        \r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.getData(me.skip, me.limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    #notify(name = 'data', data) {\r\n        GSEvent.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" name=\"${me.name}\" ${cspan} class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvent.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvent.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvent.send(me, 'selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvent.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvent.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSEvent from \"../../base/GSEvent.mjs\";\r\n import GSAttr from \"../../base/GSAttr.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n import GSData from \"../../base/GSData.mjs\";\r\n import GSUtil from \"../../base/GSUtil.mjs\";\r\n \r\n /**\r\n  * table header sorting coluns\r\n  * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n  * @class\r\n  * @extends {HTMLTableRowElement}\r\n  */\r\n export default class GSTableSort extends HTMLTableRowElement {\r\n \r\n     #sc = 0;\r\n \r\n     static {\r\n         customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n         Object.seal(GSTableSort);\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n         GSComponents.store(me);\r\n         me.onReady();\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         GSComponents.remove(me);\r\n         GSEvent.deattachListeners(me);\r\n     }\r\n \r\n     onReady() {\r\n         const me = this;\r\n         requestAnimationFrame(() => {\r\n             me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n         });\r\n     }\r\n \r\n     get #autoSortable() {\r\n         return this.#sortable.filter(el => el.dataset.order != '0');\r\n     }\r\n \r\n     get #sorted() {\r\n         return this.#sortable.filter(el => el.dataset.idx != '0');\r\n     }\r\n \r\n     get #sortable() {\r\n         return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n     }\r\n \r\n     #onClick(e) {\r\n         const me = this;\r\n         const el = e.composedPath().shift();\r\n         if (el.tagName !== 'TH') return;\r\n         if (el.dataset.sortable != 'true') return;\r\n         const ord = GSUtil.asNum(el.dataset.order);\r\n         el.dataset.order = ord > 0 ? -1 : 1;\r\n         requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n     }\r\n \r\n     #onColumnSort(el, append = false) {\r\n \r\n         const me = this;\r\n \r\n         const ord = GSUtil.asNum(el.dataset.order, -1);\r\n \r\n         if (append) {\r\n             me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n             GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n         } else {\r\n             me.#sc = 1;\r\n             GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                 el.dataset.idx = 0;\r\n                 el.dataset.order = 0;\r\n                 GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n             });\r\n         }\r\n \r\n         el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n         el.dataset.idx = me.#sc;\r\n         el.dataset.order = ord;\r\n         GSDOM.toggleClass(el, 'table-active', true);\r\n \r\n \r\n         let sort = [];\r\n         me.#sorted.forEach(el => {\r\n             const ord = GSUtil.asNum(el.dataset.order, 1);\r\n             const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n             const name = GSAttr.get(el, 'name', el.innerText);\r\n             const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n             sort.push(cfg);\r\n         });\r\n         sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n \r\n         GSEvent.send(me, 'sort', sort, true);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return el.value;\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const me = this;\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    const toast = me.#dialogToast;\r\n    requestAnimationFrame(() => {\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSCSSMap","element","getMap","capitalizeAttr","hasOwnProperty","matches","computedStyleMap","getComputedStyle","getComputedStyledMap","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","parentAll","childAll","child","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","push","innerHTML","textContent","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvent","prevent","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEventBus","EventTarget","listeners","Set","register","emit","registry","has","exist","bus","unbind","listener","on","off","evt","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents","els","unlisten","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","hasAttribute","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","entries","kv","hk","registerFilter","expr","lastIndex","hv","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","dir","idxToDir","focus","MouseEvent","view","altKey","isVisible","onKeyDown","start","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","c","allComps","isType","isHidden","hidden","isStyleValue","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","attachEvents","onSubmit","onAction","actions","reset","reportValidity","toObject","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","_","masks","placeholder","mask","toPattern","onDataChange","strict","optimized","chars","cnt","special","autocopy","autoselect","maskType","maxLength","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isFormElement","isInList","clean","p","dataGroup","clipboard","writeText","select","required","clipboardData","getData","formatMask","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","canceled","title","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","end","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","setAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","btn","activeCSS","dismissible","GSButton","disable","button","blur","icon","dissmis","comment","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","hasClass","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","vel","GSMenu","caller","attachMenuItems","attachSubMenu","updatePos","closable","popup","clientX","clientY","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","overflowH","overflowV","handleGroup","option","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","getAttrs","fromJSON","is","isSub","childElementCount","renderSub","fromDOM","renderChild","header","attrs","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","Event","createMenu","targets","onPopup","onError","GSDialog","STACK","dialog","showModal","focusable","onForm","onEscape","onClose","onCancel","isAcceptedAction","isOk","forms","form","reportForm","submitForm","info","confirm","prompt","QUERY_INPUT","buttonCancelEl","buttonOkEl","align","footer","findSlotOrEl","large","extra","buttonOk","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","validateAllowed","labelEl","inputEl","isNull","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","idattr","autoid","cssField","autocomplete","autocapitalize","multiple","accept","step","min","max","minlength","maxlength","description","readonly","cssLabel","cellLabel","isCheckable","isRange","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","previousElementSibling","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","setSize","dlg","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","backdropEl","canvasEl","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSPopover","unfocus","isPopover","hasPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","bsTrigger","openable","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","cursor","autostore","full","isPreceeding","save","onMouseDown","onMouseUp","onMouseMove","updateX","updateY","dx","GSTab","tabs","renderTab","panes","renderPane","renderPanel","tab","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","renderPaneFlat","renderPaneShadow","activePaneCSS","cssPane","GSTooltip","isTooltip","GSAttachment","file","directory","transfer","transferredFiles","files","f","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","resolve","entry","reject","reader","createReader","read","readEntries","results","getEntries","getFile","some","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","clearTimeout","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSStore","remote","skip","limit","page","total","hasSetter","reload","MODES","table","toURL","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","formatFilter","formatSort","filterData","sortData","notify","encodeURIComponent","fromLiteral","sendDelayed","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","reduce","emptyRow","cols","hdr","genRow","toType","fmt","Number","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","setCSS","dataID","waitFor","contextMenu","onColumnSort","onColumnFilter","onContextMenu","onData","isFilterable","processData","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","dom","ctx","GSTableSort","HTMLTableRowElement","sc","autoSortable","sorted","cellIndex","GSTableFilter","attachChangeListener","attachDataListener","getRoot","getValue","listID","GSPagination","firstlast","nextprev","getHtml","previous","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast"],"mappings":"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"}