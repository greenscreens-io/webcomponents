{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTag.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        return owner ? await fn.bind(owner)() : await fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        return owner ? fn.bind(owner)() : fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.indexOf(name) > -1;\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\tGSDOM.fromValue(el, obj[el.name])\r\n\t\t\t\t} else if (el.value === obj[el.name]) el.checked = true; \r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tr(prevent ? e.detail : e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return Object.assign({}, this.#headers);\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = Object.assign({}, val);\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].indexOf(this.mode) > -1;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (editable && !e.altKey) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set data(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get data() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        //me.data = \r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.data);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last?.hasOwnProperty(el.name)) {\r\n            GSDOM.fromValue(el, me.#last[el.name]);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.data = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.data, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.indexOf(e.code) > -1;\r\n            const copycut = GSInputExt.#copycut.indexOf(e.code) > -1;\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSEvents from '../base/GSEvents.mjs';\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        transform : `translate(${cfg.clientX}px, ${cfg.clientY}px)`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    //me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        GSUtil.isStringEmpty(me.company)\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    if (GSDialog.#STACK.length === 0) return null;\r\n    return GSDialog.#STACK[GSDialog.#STACK.length - 1];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (me.visible) {\r\n        if (dlg && !dlg.open) {\r\n          dlg.showModal();\r\n          GSDialog.#STACK.push(me);\r\n          me.emit('change');\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      me.emit('visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #onChange() {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) {\r\n        GSEvents.prevent(e);\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    me.#buttonOkEl.disabled = true;\r\n    me.forms.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    me.#buttonOkEl.disabled = false;\r\n    me.forms.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && slots.indexOf(el.slot) < 0);\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.indexOf(',') > -1\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#unbindEvents();\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                transform : `translate(${x}px, ${y}px)`\r\n            };\r\n            /*\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n            */\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        //if (!me.visible) me.style.transform = 'unset';\r\n        /*\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n        */\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTag extends GSElement {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSTag.#style);\r\n        customElements.define('gs-tag', GSTag);\r\n        Object.seal(GSTag);\r\n    }\r\n\r\n    static get #style() {\r\n        return `\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = me.#renderList();\r\n        const tags = me.#renderTags();\r\n        return `\r\n        <div class=\"d-flex flex-wrap align-items-center gap-1 ${me.css}\">\r\n            ${tags}\r\n            <input list=\"${me.name}_list\" name=\"${me.name}\" type=\"text\" class=\"form-control d-flex w-auto flex-grow-1\" placeholder=\"${me.placeholder}\">\r\n            <datalist id=\"${me.name}_list\">${items}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.query('div'), 'click', me.#onClick.bind(me));\r\n        me.attachEvent(me.#input, 'keydown', me.#onKeyDown.bind(me));\r\n        me.attachEvent(me.#input, 'input', me.#onInput.bind(me));\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (['Enter', 'NumpadEnter', 'Comma', 'Space'].indexOf(e.code) < 0) return;        \r\n        this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.#data.length >= me.max;\r\n    }\r\n\r\n    get #data() {\r\n        return this.queryAll('.tag').map(el => el.dataset.value);\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();        \r\n    }\r\n\r\n    get #isDuplicate() {\r\n        const me = this;\r\n        const val = me.#input.value.toLowerCase();\r\n        return me.values.filter( v => v.toLowerCase() === val).length > 0 ;\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax ||(!optEl && me.allowAdd == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (me.#isDuplicate) return;\r\n        const src = me.#renderTag(fld.value);\r\n        const el = GSDOM.parse(src, true);\r\n        fld.insertAdjacentElement('beforebegin', el);\r\n        fld.value = '';\r\n        optEl?.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n    \r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const opt  = document.createElement('option');\r\n        opt.value = tagEl.dataset.value;\r\n        me.#datalist.appendChild(opt);\r\n        tagEl.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        return items.map(el => `<option value=\"${el.name}\">`).join('');\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v)).join('');\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        return `<div class=\"badge tag ${me.cssTag}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"btn-close ms-1 ${me.cssClose}\"></button></div>`;\r\n    }\r\n  \r\n    get #input() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.query('datalist');\r\n    }\r\n\r\n    get allowAdd() {\r\n        return GSAttr.getAsBool(this, 'allowadd', false);\r\n    }\r\n\r\n    set allowAdd(val = false) {\r\n        return GSAttr.betAsBool(this, 'allowadd', val);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set max(val = 0) {\r\n        return GSAttr.setAsNum(this, 'max', val);\r\n    }\r\n\r\n    get values() {\r\n        return GSAttr.get(this, 'values', '').split(',').map(v => v.trim());\r\n    }\r\n\r\n    set values(val = '') {\r\n        return GSAttr.set(this, 'values', val);\r\n    }\r\n\r\n    get placeholder() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return GSAttr.get(this, 'placeholder', alt);\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val)\r\n    }    \r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '')\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }  \r\n\r\n    get cssTag() {\r\n        return GSAttr.get(this, 'css-tag', 'bg-secondary')\r\n    }\r\n\r\n    set cssTag(val = '') {\r\n        return GSAttr.set(this, 'css-tag', val);\r\n    }    \r\n\r\n    get cssClose() {\r\n        return GSAttr.get(this, 'css-close', 'text-bg-light')\r\n    }\r\n\r\n    set cssClose(val = '') {\r\n        return GSAttr.set(this, 'css-close', val);\r\n    }    \r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = {};\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', css = '') {\r\n\r\n        const me = this;\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = pid ? `${pid}.${idx}` : idx;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                const cl = cid.split('\\.').length;\r\n                if (pl + 1 != cl && sts) break;\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parent(el) {\r\n        el = el || this.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = s.substr(0, s.length - 2);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li'));\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isFolder && !isOpen) return;\r\n        let el = isOpen ? me.#selected.querySelector('li') : me.#selected.nextElementSibling;\r\n        if (!el) el = me.#selected.nextElementSibling;\r\n        // if rotatable \r\n        // if (!el) el = me.rootEl.firstElementChild;\r\n        me.#update(el);\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        let el = me.#selected.previousElementSibling;\r\n        if (!el) el = me.#selected.parentElement?.previousElementSibling;\r\n        // if rotatable \r\n        // if (!el) el = me.rootEl.lastElementChild;\r\n        me.#update(el);\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     */\r\n    open() {\r\n        this.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     */\r\n    close() {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || (isFolder && !isOpen)) me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #filter = [];\r\n    #sort = [];\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        me.#filter = [];\r\n        me.#sort = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    // NOT used, dialog issue delay=\"${delay}\"\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_CHART == false ? false : globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSChart.#init();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        GSHighlight.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSHighlight.URL_LIB === false) return;\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_HLJS == false ? false : globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        const me = this;\r\n        const html = e.data.data;\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        GSMonaco.#init();\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MONACO == false ? false : globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static #init() {\r\n        if (GSMonaco.URL_LIB == false) return;\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (globalThis.GS_URL_MONACO === false) return;\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvents.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSMarkdown.URL_LIB == false) return;\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MARKDOWN == false ? false : globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initLib();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    #onScriptReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);\r\n        requestAnimationFrame(() => {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url)\r\n        });\r\n    }\r\n   \r\n    #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return me.#onScriptReady();\r\n        const script = document.createElement('script');\r\n        GSEvents.attach(me, script, 'load', me.#onScriptReady.bind(this));\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles$1","GSCacheStyles","Map","sheet","CSSStyleSheet","store","set","style","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","Array","from","cssRules","filter","selectorText","pop","sync","rule","getRule","insertRule","setRule","data","replaceAll","split","map","trim","entries","kv","updateRule","prop","isImportant","setProperty","deleteRule","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","tracing","forced","logging","tmp","nodeName","fn","console","log","Error","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","args","apply","cnt","own","contextualize","accept","GSAttr","isHTMLElement","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","index","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","push","Proxy","receiver","Reflect","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","isNull","toggle","toggleClass","contains","root","unwrap","valueAsNumber","checked","getValue","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","chained","susspended","opt","removeEventListener","unlisten","once","r","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSPromise$1","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","Set","listener","abortable","controller","AbortController","GSAbortController","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","disconnect","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","getOwnPropertyDescriptor","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","json","isJson","func","isFunc","GSData","first","second","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","isBool","compareBool","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","waitEvent","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","reset","read","submit","onSubmit","elements","storage","fromObject","reportValidity","toObject","handler","old","write","onField","hasOwnProperty","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","isFormElement","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","metaKey","title","onNumberInput","onTextInput","substring","updateText","every","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","setAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","dissmis","comment","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","vel","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","getAttrs","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","company","isCompany","isYear","GSDialog","STACK","isConnected","updateStack","dlg","dialog","showModal","focusable","monitorAction","onForm","onEscape","onClose","onCancel","buttonOkEl","forms","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isRange","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","Event","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","cursor","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onMouseUp","onMouseMove","updateMouse","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTag","renderList","renderTags","inputType","updateTag","srcElement","removeTag","addTag","isMax","optEl","allowAdd","renderTag","tagEl","cssTag","cssClose","betAsBool","alt","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","substr","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","Number","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","notify","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","tid","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_EXTERNAL","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","initialized","require","config","paths","vs","disabledFeatures","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","GSMarkdown","converter","GS_URL_MARKDOWN","maxHeight","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","onScriptReady","showdown","Converter","tasklists","tables"],"mappings":"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"}