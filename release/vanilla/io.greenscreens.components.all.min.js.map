{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSOverlay.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTag.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj ? true : false;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\t\t\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (!(editable && e.altKey)) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => !gs.includes(el)).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get asJSON() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    // @Deprecated\r\n    set data(data) {\r\n        return this.asJSON = data;\r\n    }\r\n\r\n    // @Deprecated\r\n    get data() {\r\n        return this.asJSON;\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.asJSON);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last) {\r\n            GSDOM.fromObject2Element(el, me.#last);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.asJSON = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.asJSON, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" aria-label=\"${me.ariaLabel}\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        translate : `${cfg.clientX}px ${cfg.clientY}px`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n// TODO - add CloseWatcher when API available\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    if (GSDialog.#STACK.length === 0) return null;\r\n    return GSDialog.#STACK[GSDialog.#STACK.length - 1];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (me.visible) {\r\n        if (dlg && !dlg.open) {\r\n          dlg.showModal();\r\n          GSDialog.#STACK.push(me);\r\n          me.emit('change');\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      me.emit('visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #onChange() {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) {\r\n        GSEvents.prevent(e);\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    me.#buttonOkEl.disabled = true;\r\n    me.forms.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    me.#buttonOkEl.disabled = false;\r\n    me.forms.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elements stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n      if (me.#isRange) {\r\n         me.attachEvent(me.#inputEl, 'input', me.#onRange.bind(me));\r\n         me.#onRange();\r\n      } \r\n   }\r\n\r\n   #onRange(e) {\r\n      const me = this;\r\n      const el = me.#outputEl;\r\n      if (el) el.innerHTML = me.#inputEl?.value || '';\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #outputEl() {\r\n      return this.query('input').nextElementSibling;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.includes(',');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}${me.#output}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #output() {\r\n      const me = this;\r\n      if (!me.#isRange) return \"\";\r\n      return `<span class=\"position-absolute px-1\">${me.value}</span>`; \r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for a gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const size = GSAttr.getAsNum(el, 'size', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const ssize = size > 0 ? `${sfx}: ${size}px;` : '';\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [ssize, smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    super.connectedCallback();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#unbindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    if (!me.#bindings) return;\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    if (!me.#bindings) return;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOverlay class\r\n * @module components/GSOverlay\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * SVG overlay renderer around selected target.\r\n * <gs-overlay target=\"#GSId-30-nav\" autoremove></gs-overlay>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOverlay extends GSElement {\r\n\r\n    static #attrs = ['target', 'opacity', 'color', 'radius', 'padding'];\r\n\r\n    #tid = 0;\r\n    #svgid = GSID.id;\r\n\r\n    static {\r\n        customElements.define('gs-overlay', GSOverlay);\r\n        Object.seal(GSOverlay);\r\n    }\r\n\r\n    static get attributes() {\r\n        return GSOverlay.#attrs;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return GSElement.observeAttributes(GSOverlay.#attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (GSOverlay.attributes.includes(name)) {\r\n            if (name === 'target') {\r\n                me.#updateSVG(oldValue, newValue);\r\n            } else {\r\n                me.#updateSVG('', me.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me  = this;\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.svg?.remove();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get autoremove() {\r\n        return this.hasAttribute('autoremove');\r\n    }\r\n\r\n    set autoremove(val) {\r\n        return GSAttr.toggle(this, 'autoremove', GSUtil.asBool(val));\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target', '');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get overlayPadding() {\r\n        return GSAttr.getAsNum(this, 'padding', 1);\r\n    }\r\n\r\n    set overlayPadding(val = 1) {\r\n        return GSAttr.setAsNum(this, 'padding', val);\r\n    }\r\n\r\n    get overlayRadius() {\r\n        return GSAttr.getAsNum(this, 'radius', 6);\r\n    }\r\n\r\n    set overlayRadius(val = 6) {\r\n        return GSAttr.setAsNum(this, 'radius', val);\r\n    }\r\n\r\n    get overlayColor() {\r\n        return GSAttr.get(this, 'color', 'rgb(0,0,0)');\r\n    }\r\n\r\n    set overlayColor(val = '') {\r\n        return GSAttr.set(this, 'color', val);\r\n    }\r\n\r\n    get overlayOpacity() {\r\n        return GSAttr.getAsNum(this, 'opacity', 0.7);\r\n    }\r\n\r\n    set overlayOpacity(val = 0.7) {\r\n        return GSAttr.setAsNum(this, 'opacity', val);\r\n    }\r\n\r\n    get svg() {\r\n        return GSDOM.getByID(this.#svgid);\r\n    }\r\n\r\n    get path() {\r\n        return GSDOM.query(this.svg, 'path');\r\n    }\r\n\r\n    open() {\r\n        const me = this;\r\n        me.#updateSVG('', me.target);\r\n    }\r\n\r\n    close() {\r\n        const me = this;\r\n        const svg = me.svg;\r\n        me.removeEvent(svg, 'click');\r\n        svg?.remove();\r\n    }\r\n    \r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    #onResize() {\r\n        const me = this;\r\n        me.close();\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.open(), 200);\r\n    }\r\n\r\n    #updateSVG(oldTarget = '', newTarget = '') {\r\n        const me = this;\r\n        if (oldTarget === newTarget) return;\r\n        if (!newTarget) return me.svg?.remove();\r\n        const el = GSDOM.query(newTarget);\r\n        if (!el) return;\r\n\r\n        const svg = me.svg || me.#createSVG();\r\n        const path = me.path || me.#createSVGPath();\r\n        const pathStr = me.#createSVGPathString(el);\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        path.setAttribute(\"d\", pathStr);\r\n        if (!me.svg) {\r\n            svg.appendChild(path);\r\n            document.body.appendChild(svg);\r\n            me.attachEvent(svg, 'click', me.reset.bind(me));\r\n        }\r\n\r\n    }\r\n\r\n    get #viewBox() {\r\n        return `0 0 ${window.innerWidth} ${window.innerHeight}`;\r\n    }\r\n\r\n    #createSVG() {\r\n\r\n        const me = this;\r\n\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.id = me.#svgid;\r\n        svg.classList.add(\"gs-overlay\", \"gs-overlay-animated\");\r\n\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        svg.setAttribute(\"xmlSpace\", \"preserve\");\r\n        svg.setAttribute(\"xmlnsXlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin slice\");\r\n\r\n        svg.style.fillRule = \"evenodd\";\r\n        svg.style.clipRule = \"evenodd\";\r\n        svg.style.strokeLinejoin = \"round\";\r\n        svg.style.strokeMiterlimit = \"2\";\r\n        svg.style.zIndex = \"10000\";\r\n        svg.style.position = \"fixed\";\r\n        svg.style.top = \"0\";\r\n        svg.style.left = \"0\";\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        return svg;\r\n    }\r\n\r\n    #createSVGPath() {\r\n        \r\n        const me = this;\r\n\r\n        const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        pathEl.style.fill = me.overlayColor;\r\n        pathEl.style.opacity = me.overlayOpacity;\r\n        pathEl.style.pointerEvents = \"auto\";\r\n        pathEl.style.cursor = \"auto\";\r\n        return pathEl;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n        \r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n        \r\n        const rect = target.getBoundingClientRect()\r\n\r\n        const padding = me.overlayPadding;\r\n        const radius = me.overlayRadius;\r\n      \r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n      \r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n      \r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n      \r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n      \r\n        return `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n          M${highlightBoxX},${highlightBoxY} \r\n          h${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n          v${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n          h-${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n          v-${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;      \r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                translate : `${x}px ${y}px`\r\n            };\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n        me.attachEvent(el, 'dblclick', me.#onDoubleClick.bind(me));\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n        \r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', {start: true});\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', {stop: true});\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n            .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, true);\r\n                el.dataset.gsSplitter = true;\r\n            });\r\n        } else {\r\n            me.#lockable\r\n            .filter(el => el.dataset.gsSplitter)\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, false);\r\n                delete el.dataset.gsSplitter;\r\n            });            \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n    \r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTag extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSTag.#style);\r\n        customElements.define('gs-tag', GSTag);\r\n        Object.seal(GSTag);\r\n    }\r\n\r\n    static get #style() {\r\n        return `\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = me.#renderList();\r\n        const tags = me.#renderTags();\r\n        return `\r\n        <div class=\"d-flex flex-wrap align-items-center gap-1 ${me.css}\">\r\n            ${tags}\r\n            <input list=\"${me.name}_list\" name=\"${me.name}\" type=\"text\" class=\"form-control d-flex w-auto flex-grow-1\" placeholder=\"${me.placeholder}\">\r\n            <datalist id=\"${me.name}_list\">${items}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.query('div'), 'click', me.#onClick.bind(me));\r\n        me.attachEvent(me.#input, 'keydown', me.#onKeyDown.bind(me));\r\n        me.attachEvent(me.#input, 'input', me.#onInput.bind(me));\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTag.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.#data.length >= me.max;\r\n    }\r\n\r\n    get #data() {\r\n        return this.queryAll('.tag').map(el => el.dataset.value);\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();        \r\n    }\r\n\r\n    get #isDuplicate() {\r\n        const me = this;\r\n        const val = me.#input.value.toLowerCase();\r\n        return me.values.filter( v => v.toLowerCase() === val).length > 0 ;\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax ||(!optEl && me.allowAdd == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (me.#isDuplicate) return;\r\n        const src = me.#renderTag(fld.value);\r\n        const el = GSDOM.parse(src, true);\r\n        fld.insertAdjacentElement('beforebegin', el);\r\n        fld.value = '';\r\n        optEl?.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n    \r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const opt  = document.createElement('option');\r\n        opt.value = tagEl.dataset.value;\r\n        me.#datalist.appendChild(opt);\r\n        tagEl.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        return items.map(el => `<option value=\"${el.name}\">`).join('');\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v)).join('');\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        return `<div class=\"badge tag ${me.cssTag}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"btn-close ms-1 ${me.cssClose}\"></button></div>`;\r\n    }\r\n  \r\n    get #input() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.query('datalist');\r\n    }\r\n\r\n    get allowAdd() {\r\n        return GSAttr.getAsBool(this, 'allowadd', false);\r\n    }\r\n\r\n    set allowAdd(val = false) {\r\n        return GSAttr.betAsBool(this, 'allowadd', val);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set max(val = 0) {\r\n        return GSAttr.setAsNum(this, 'max', val);\r\n    }\r\n\r\n    get values() {\r\n        return GSAttr.get(this, 'values', '').split(',').map(v => v.trim());\r\n    }\r\n\r\n    set values(val = '') {\r\n        return GSAttr.set(this, 'values', val);\r\n    }\r\n\r\n    get placeholder() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return GSAttr.get(this, 'placeholder', alt);\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val)\r\n    }    \r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '')\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }  \r\n\r\n    get cssTag() {\r\n        return GSAttr.get(this, 'css-tag', 'bg-secondary')\r\n    }\r\n\r\n    set cssTag(val = '') {\r\n        return GSAttr.set(this, 'css-tag', val);\r\n    }    \r\n\r\n    get cssClose() {\r\n        return GSAttr.get(this, 'css-close', 'text-bg-light')\r\n    }\r\n\r\n    set cssClose(val = '') {\r\n        return GSAttr.set(this, 'css-close', val);\r\n    }    \r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = null;\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events = {};\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events?.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events?.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events?.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', parent = '', css = '') {\r\n\r\n        const me = this;\r\n        const name = el.name || el.title;\r\n        const path = `${parent}/${name}`\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = GSUtil.isStringEmpty(pid) ? idx : `${pid}.${idx}`;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" `);\r\n        html.push(`data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\"  `);\r\n        html.push(`data-path=\"${path}\"  data-name=\"${name}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, path, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                if (sts) {\r\n                    const cl = cid.split('\\.').length;\r\n                    if (cl > pl + 1) {\r\n                        el = el.nextElementSibling;\r\n                        continue;    \r\n                    }\r\n    \r\n                    if (pl + 1 != cl && sts) break;\r\n                }\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parentNode(nodeid) {\r\n        return nodeid.split('.').slice(0,-1).join('.');\r\n    }\r\n\r\n    #parent(el) {\r\n        const me = this;\r\n        el = el || me.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = me.#parentNode(s);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    #next(el) {\r\n        el = el?.nextElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.nextElementSibling;\r\n        }\r\n        return el;\r\n    }\r\n\r\n    #previous(el) {\r\n        el = el?.previousElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.previousElementSibling;\r\n        }        \r\n        return el;\r\n    }\r\n\r\n    get level() {\r\n        return this.#selected?.dataset.nodeid.split('.').length || -1;\r\n    }\r\n\r\n    get path() {\r\n        return this.#selected?.dataset.path;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:first-of-type'));\r\n        const el = me.#next(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.next() ;\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        const el = me.#previous(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.prev() ;\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     * TODO - path navigation\r\n     */\r\n    open(path) {\r\n        const me = this;\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isOpen && isFolder) return me.next();\r\n        me.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     * TODO - path navigation\r\n     */\r\n    close(path) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || !(isOpen && isFolder)) return me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        // me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.repaint();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #filter = [];\r\n    #sort = [];\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        me.#filter = [];\r\n        me.#sort = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = [...me.#data, ...records];\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    // NOT used, dialog issue delay=\"${delay}\"\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles$1","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","tracing","forced","logging","tmp","nodeName","fn","console","log","Error","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","own","contextualize","accept","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","Reflect","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSPromise$1","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","AbortController","GSAbortController","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","getOwnPropertyDescriptor","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","offline","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","waitEvent","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","repaint","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","reset","read","submit","onSubmit","elements","storage","fromObject","reportValidity","toObject","handler","old","write","onField","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","isFormElement","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","metaKey","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","dissmis","comment","ariaLabel","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","getAttrs","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","isCompany","isYear","company","GSDialog","STACK","updateStack","dlg","dialog","showModal","focusable","monitorAction","onForm","onEscape","onClose","onCancel","buttonOkEl","forms","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","isRange","onRange","outputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","output","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSOverlay","tid","svgid","updateSVG","svg","autoremove","overlayPadding","overlayRadius","overlayColor","overlayOpacity","oldTarget","newTarget","createSVG","createSVGPath","pathStr","createSVGPathString","viewBox","createElementNS","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathEl","fill","pointerEvents","cursor","windowX","windowY","radius","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","Event","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onDoubleClick","csize","onMouseUp","onMouseMove","lock","updateMouse","lockable","gsSplitter","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTag","renderList","renderTags","inputType","updateTag","srcElement","removeTag","addTag","isMax","optEl","allowAdd","renderTag","tagEl","cssTag","cssClose","betAsBool","alt","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","notify","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","assign","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","GSMarkdown","converter","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}