{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*/g).filter(v=> GSUtil.isNumber(v)).pop());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        return this.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event \r\n     * @param {string} type Event name to be listened\r\n     * @returns {Event}\r\n     */\r\n    wait(type = '') {\r\n        if (!type) return e('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(type, (e) => r(e));\r\n        });\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst me = this;\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * See GSQuery class\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (editable && !e.altKey) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        return GSDOM.isStyleValue(el, 'display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static #actions = ['ok', 'reset', 'submit'];\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvents.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n        GSEvents.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e) {\r\n\r\n        const el = e.composedPath().shift();\r\n        const action = el?.dataset.action || e.detail.action || el?.type;\r\n        if (!GSFormExt.#actions.includes(action)) return;\r\n\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n\r\n        switch (action) {\r\n            case 'reset':\r\n                me.reset();\r\n                break;\r\n            case 'ok':\r\n            case 'submit':\r\n                GSFormExt.#onSubmit(e, me);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvents.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) return me.reportValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        setTimeout(() => {\r\n            me.#onDataChange();\r\n        }, 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el.tagName);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos - 1] = me.mask[pos - 1];\r\n                pos = pos1 - 1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n\r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                }\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos + 1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos + 1, pos + 1);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvents.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvents.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvents.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSEvents from '../base/GSEvents.mjs';\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        GSEvents.send(me, 'date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n        me.#updateTarget(date);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    const cfg = {clientX: x.clientX || x, clientY: x.clientY || y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      me.style.position = 'fixed';\r\n      me.style.top = '0px';\r\n      me.style.left = '0px';\r\n      me.style.transform = `translate(${cfg.clientX}px, ${cfg.clientY}px)`;\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    me.style.left = '';\r\n    me.style.top = '';\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close');\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        me.style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        me.style.top = `${top}px`;      \r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        let end = true;\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          el.style.left = '100%';\r\n          end = true;\r\n        }\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        GSEvents.prevent(e);\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    me.close();\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    //me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => GSEvents.send(me, 'open'));\r\n    me.attachEvent(me.#menu, 'close', e => GSEvents.send(me, 'close'));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    const me = this;\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    this.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n                 .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.data?.action);\r\n    if (sts) return;\r\n    data.type = 'contextmenu';\r\n    GSEvents.send(me, 'action', data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static get top() {\r\n    return GSDialog.#STACK.length === 0 ? null : GSDialog.#STACK[GSDialog.#STACK.length-1];\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        if (!me.#dialog.open) {\r\n          me.#dialog.showModal();\r\n          GSDialog.#STACK.push(me);\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        me.#dialog.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      GSEvents.send(me, 'visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const sts = GSEvents.send(me, 'data', { type: 'dialog', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n     if (me.cancelable)  me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvents.send(me, 'error', { type: 'dialog', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvents.send(me, 'action', { type: 'dialog', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvents.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'open', { type: 'dialog' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'close', { type: 'dialog', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */  \r\n  extra() {\r\n    \r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.action || data.data?.action);\r\n    if (sts) return;\r\n    data.type = 'dropdown';\r\n    GSEvents.send(me, 'action', data?.data || data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n  #validateAllowed() {\r\n      const me = this;\r\n      let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'body');\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"body\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${idattr} name=\"${me.name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${me.#checked}\r\n               ${me.#mask} ${me.#pattern} ${me.#value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} ${me.#value} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">\r\n         ${me.#input}         \r\n         </slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n\r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n   \r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n   \r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n  }\r\n     \r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }   \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#generateHtml(el));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return ['style=\"', smax, smin, '\"'].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvents.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const sts = GSEvents.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvents.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvents.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvents.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra' : return 'modal-xl';\r\n      case 'large' : return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;    \r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') GSEvents.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.expanded;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvents.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = GSEvents.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, GSFileBox.CSS, true);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvents.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvents.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        \r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n        \r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.getData(me.skip, me.limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" name=\"${me.name}\" ${cspan} class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        requestAnimationFrame(() => me.store.page = 1);\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvents.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvents.send(me, 'selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvents.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvents.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSEvents from \"../../base/GSEvents.mjs\";\r\n import GSAttr from \"../../base/GSAttr.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n import GSData from \"../../base/GSData.mjs\";\r\n import GSUtil from \"../../base/GSUtil.mjs\";\r\n \r\n /**\r\n  * table header sorting coluns\r\n  * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n  * @class\r\n  * @extends {HTMLTableRowElement}\r\n  */\r\n export default class GSTableSort extends HTMLTableRowElement {\r\n \r\n     #sc = 0;\r\n \r\n     static {\r\n         customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n         Object.seal(GSTableSort);\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n         GSComponents.store(me);\r\n         me.onReady();\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         GSComponents.remove(me);\r\n         GSEvents.deattachListeners(me);\r\n     }\r\n \r\n     onReady() {\r\n         const me = this;\r\n         requestAnimationFrame(() => {\r\n             me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n         });\r\n     }\r\n \r\n     get #autoSortable() {\r\n         return this.#sortable.filter(el => el.dataset.order != '0');\r\n     }\r\n \r\n     get #sorted() {\r\n         return this.#sortable.filter(el => el.dataset.idx != '0');\r\n     }\r\n \r\n     get #sortable() {\r\n         return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n     }\r\n \r\n     #onClick(e) {\r\n         const me = this;\r\n         const el = e.composedPath().shift();\r\n         if (el.tagName !== 'TH') return;\r\n         if (el.dataset.sortable != 'true') return;\r\n         const ord = GSUtil.asNum(el.dataset.order);\r\n         el.dataset.order = ord > 0 ? -1 : 1;\r\n         requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n     }\r\n \r\n     #onColumnSort(el, append = false) {\r\n \r\n         const me = this;\r\n \r\n         const ord = GSUtil.asNum(el.dataset.order, -1);\r\n \r\n         if (append) {\r\n             me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n             GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n         } else {\r\n             me.#sc = 1;\r\n             GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                 el.dataset.idx = 0;\r\n                 el.dataset.order = 0;\r\n                 GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n             });\r\n         }\r\n \r\n         el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n         el.dataset.idx = me.#sc;\r\n         el.dataset.order = ord;\r\n         GSDOM.toggleClass(el, 'table-active', true);\r\n \r\n \r\n         let sort = [];\r\n         me.#sorted.forEach(el => {\r\n             const ord = GSUtil.asNum(el.dataset.order, 1);\r\n             const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n             const name = GSAttr.get(el, 'name', el.innerText);\r\n             const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n             sort.push(cfg);\r\n         });\r\n         sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n \r\n         GSEvents.send(me, 'sort', sort, true);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvents.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return el.value;\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const me = this;\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    const toast = me.#dialogToast;\r\n    requestAnimationFrame(() => {\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","selectorText","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","push","innerHTML","textContent","entries","kv","isNull","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvents","listen","prevent","onKeyDown","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","unlisten","once","hasFunction","preventDefault","stopPropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEvent","EventTarget","listeners","Set","listener","off","emit","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents$1","GSComponents","els","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","hasAttribute","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","receiver","Proxy","GSQuery","instance","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","start","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","c","allComps","isType","isHidden","hidden","isStyleValue","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","attachEvents","onSubmit","onAction","actions","reset","reportValidity","toObject","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","_","revealing","masks","placeholder","mask","toPattern","onDataChange","strict","optimized","chars","cnt","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isFormElement","isInList","clean","p","dataGroup","clipboard","writeText","select","required","clipboardData","getData","formatMask","isReveal","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","canceled","every","title","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","end","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","setAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","btn","activeCSS","dismissible","GSButton","disable","button","blur","icon","dissmis","comment","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","hasClass","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","vel","GSMenu","caller","attachMenuItems","attachSubMenu","updatePos","closable","popup","clientX","clientY","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","overflowH","overflowV","handleGroup","option","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","is","isSub","childElementCount","renderSub","fromDOM","renderChild","header","attrs","getAttrs","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","Event","createMenu","targets","onPopup","onError","GSDialog","STACK","dialog","showModal","focusable","onForm","onEscape","onClose","onCancel","isAcceptedAction","isOk","forms","form","reportForm","submitForm","info","confirm","prompt","QUERY_INPUT","buttonCancelEl","buttonOkEl","align","footer","buttonOk","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","validateAllowed","labelEl","inputEl","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","idattr","autoid","cssField","autocomplete","autocapitalize","multiple","accept","step","min","max","minlength","maxlength","description","readonly","cssLabel","cellLabel","isCheckable","isRange","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","previousElementSibling","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","setSize","dlg","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","backdropEl","canvasEl","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSPopover","unfocus","isPopover","hasPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","bsTrigger","openable","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","cursor","autostore","full","isPreceeding","save","onMouseDown","onMouseUp","onMouseMove","updateX","updateY","dx","GSTab","tabs","renderTab","panes","renderPane","renderPanel","tab","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","renderPaneFlat","renderPaneShadow","activePaneCSS","cssPane","GSTooltip","isTooltip","GSAttachment","file","directory","transfer","transferredFiles","files","f","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","resolve","entry","reject","reader","createReader","read","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","clearTimeout","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSStore","remote","skip","limit","page","total","hasSetter","reload","MODES","table","toURL","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","formatFilter","formatSort","filterData","sortData","notify","encodeURIComponent","fromLiteral","sendDelayed","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","Number","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","tid","setCSS","dataID","waitFor","contextMenu","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","processData","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","dom","ctx","postResize","pg","th","GSTableSort","HTMLTableRowElement","sc","autoSortable","sorted","cellIndex","GSTableFilter","attachChangeListener","attachDataListener","getRoot","getValue","listID","GSPagination","firstlast","nextprev","getHtml","previous","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast"],"mappings":"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"}