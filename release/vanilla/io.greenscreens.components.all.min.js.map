{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSLog.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSIcon.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSOverlay.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTag.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.5';\r\n    }\r\n\r\n    get build() {\r\n        return 20241227;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (!(editable && e.altKey)) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => !gs.includes(el)).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    #queued;\r\n    #queue = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n\r\n        this.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n            while (me.#queue.length > 0) {\r\n                try {\r\n                    me.attributeCallback(...me.#queue.shift());\r\n                } catch(e) {\r\n                    GSLog.error(null, e);\r\n                }\r\n            }\r\n            me.#queued = false;\r\n        });\r\n\r\n        //requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        return me.validate();\r\n    }\r\n\r\n    get asJSON() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    // @Deprecated\r\n    set data(data) {\r\n        return this.asJSON = data;\r\n    }\r\n\r\n    // @Deprecated\r\n    get data() {\r\n        return this.asJSON;\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.asJSON);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last) {\r\n            GSDOM.fromObject2Element(el, me.#last);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.asJSON = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.validate();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.asJSON, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self?.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<gs-icon icon=\"${me.icon}\" hover=\"${me.hover}\"></gs-icon>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const opts = GSItem.getAttrs(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${opts} ${disabled} title=\"${me.comment}\" aria-label=\"${me.ariaLabel}\">${content}</button>`;\r\n    }\r\n\r\n    // icon attributes\r\n    \r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get hover() {\r\n        return GSAttr.get(this, 'hover');\r\n    }\r\n\r\n    set hover(val = '') {\r\n        return GSAttr.set(this, 'hover', val);\r\n    }\r\n\r\n    // button attributes\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        translate : `${cfg.clientX}px ${cfg.clientY}px`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n// TODO - add CloseWatcher when API available\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs\r\n   */\r\n  static get size() {\r\n    return GSDialog.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    return  GSDialog.size === 0 ? null : GSDialog.#STACK[GSDialog.size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialog.#updateStack();\r\n    return Array.from(GSDialog.#STACK);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (!dlg) return;\r\n      const cfg = { type: 'dialog', ok: me.visible };\r\n      if (me.visible && !dlg.open) {\r\n        dlg.showModal();\r\n        GSDialog.#STACK.push(me);\r\n        me.emit('change');\r\n        me.#notify(cfg);\r\n      } else  if (!me.visible && dlg.open) {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n        me.#notify(cfg);\r\n      }\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me, 'visible', me.#onVisible.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #notify(cfg) {\r\n    const me = this;\r\n    GSEvents.waitAnimationFrame(() =>{\r\n      me.emit('visible', cfg, true, true);\r\n    });\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onVisible(e) {\r\n    const me = this;\r\n    me.visible ? me.afterOpen() : me.afterClose();\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms?.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = true;\r\n    me.forms?.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = false;\r\n    me.forms?.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  async afterOpen() {\r\n    \r\n  }\r\n\r\n  async afterClose() {\r\n    \r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get active() {\r\n    return GSDialog.top;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elements stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label' && me.#labelEl) me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value' && me.#inputEl) me.#inputEl.value = newValue;\r\n      if (name === 'disabled' && me.#inputEl) me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n      if (me.#isRange) {\r\n         me.attachEvent(me.#inputEl, 'input', me.#onRange.bind(me));\r\n         me.#onRange();\r\n      } \r\n   }\r\n\r\n   #onRange(e) {\r\n      const me = this;\r\n      const el = me.#outputEl;\r\n      if (el) el.innerHTML = me.#inputEl?.value || '';\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #outputEl() {\r\n      return this.query('input').nextElementSibling;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.includes(',');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}${me.#output}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #output() {\r\n      const me = this;\r\n      if (!me.#isRange) return \"\";\r\n      return `<span class=\"position-absolute px-1\">${me.value}</span>`; \r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * \r\n * <gs-icon icon=\"database\" hover=\"gs-fade\" size=\"3\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSIcon extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-icon', GSIcon);\r\n        Object.seal(GSIcon);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        //const attrs = ['icon', 'size', 'css'];\r\n        return GSElement.observeAttributes([]);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.hover) {\r\n            me.attachEvent(me.self, 'mouseover', me.#onMouseOver.bind(me));\r\n            me.attachEvent(me.self, 'mouseout', me.#onMouseOut.bind(me));\r\n        }\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSDOM.toggleClass(this.self, this.hover, true);\r\n    }\r\n\r\n    #onMouseOut(e) {\r\n        GSDOM.toggleClass(this.self, this.hover, false);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `<i class=\"bi bi-${me.icon} ${me.#sizeCss} ${me.css}\"></i>`;\r\n    }\r\n\r\n    get #sizeCss() {\r\n        return this.size>0 ? `fs fs-${this.size}` : '';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size');\r\n    }\r\n\r\n    set size(val = 0) {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Animation css when mouse over\r\n     */\r\n    get hover() {\r\n        return GSAttr.get(this, 'hover');\r\n    }\r\n\r\n    set hover(val = '') {\r\n        return GSAttr.set(this, 'hover', val);\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for a gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const size = GSAttr.getAsNum(el, 'size', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const ssize = size > 0 ? `${sfx}: ${size}px;` : '';\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [ssize, smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    super.connectedCallback();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#unbindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    if (!me.#bindings) return;\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    if (!me.#bindings) return;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOverlay class\r\n * @module components/GSOverlay\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * SVG overlay renderer around selected target.\r\n * <gs-overlay target=\"#GSId-30-nav\" autoremove></gs-overlay>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOverlay extends GSElement {\r\n\r\n    static #attrs = ['target', 'opacity', 'color', 'radius', 'padding'];\r\n\r\n    #tid = 0;\r\n    #svgid = GSID.id;\r\n\r\n    static {\r\n        customElements.define('gs-overlay', GSOverlay);\r\n        Object.seal(GSOverlay);\r\n    }\r\n\r\n    static get attributes() {\r\n        return GSOverlay.#attrs;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return GSElement.observeAttributes(GSOverlay.#attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (GSOverlay.attributes.includes(name)) {\r\n            if (name === 'target') {\r\n                me.#updateSVG(oldValue, newValue);\r\n            } else {\r\n                me.#updateSVG('', me.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me  = this;\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.svg?.remove();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get autoremove() {\r\n        return this.hasAttribute('autoremove');\r\n    }\r\n\r\n    set autoremove(val) {\r\n        return GSAttr.toggle(this, 'autoremove', GSUtil.asBool(val));\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target', '');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get overlayPadding() {\r\n        return GSAttr.getAsNum(this, 'padding', 1);\r\n    }\r\n\r\n    set overlayPadding(val = 1) {\r\n        return GSAttr.setAsNum(this, 'padding', val);\r\n    }\r\n\r\n    get overlayRadius() {\r\n        return GSAttr.getAsNum(this, 'radius', 6);\r\n    }\r\n\r\n    set overlayRadius(val = 6) {\r\n        return GSAttr.setAsNum(this, 'radius', val);\r\n    }\r\n\r\n    get overlayColor() {\r\n        return GSAttr.get(this, 'color', 'rgb(0,0,0)');\r\n    }\r\n\r\n    set overlayColor(val = '') {\r\n        return GSAttr.set(this, 'color', val);\r\n    }\r\n\r\n    get overlayOpacity() {\r\n        return GSAttr.getAsNum(this, 'opacity', 0.7);\r\n    }\r\n\r\n    set overlayOpacity(val = 0.7) {\r\n        return GSAttr.setAsNum(this, 'opacity', val);\r\n    }\r\n\r\n    get svg() {\r\n        return GSDOM.getByID(this.#svgid);\r\n    }\r\n\r\n    get path() {\r\n        return GSDOM.query(this.svg, 'path');\r\n    }\r\n\r\n    open() {\r\n        const me = this;\r\n        me.#updateSVG('', me.target);\r\n    }\r\n\r\n    close() {\r\n        const me = this;\r\n        const svg = me.svg;\r\n        me.removeEvent(svg, 'click');\r\n        svg?.remove();\r\n    }\r\n    \r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    #onResize() {\r\n        const me = this;\r\n        me.close();\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.open(), 200);\r\n    }\r\n\r\n    #updateSVG(oldTarget = '', newTarget = '') {\r\n        const me = this;\r\n        if (oldTarget === newTarget) return;\r\n        if (!newTarget) return me.svg?.remove();\r\n        const el = GSDOM.query(newTarget);\r\n        if (!el) return;\r\n\r\n        const svg = me.svg || me.#createSVG();\r\n        const path = me.path || me.#createSVGPath();\r\n        const pathStr = me.#createSVGPathString(el);\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        path.setAttribute(\"d\", pathStr);\r\n        if (!me.svg) {\r\n            svg.appendChild(path);\r\n            document.body.appendChild(svg);\r\n            me.attachEvent(svg, 'click', me.reset.bind(me));\r\n        }\r\n\r\n    }\r\n\r\n    get #viewBox() {\r\n        return `0 0 ${window.innerWidth} ${window.innerHeight}`;\r\n    }\r\n\r\n    #createSVG() {\r\n\r\n        const me = this;\r\n\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.id = me.#svgid;\r\n        svg.classList.add(\"gs-overlay\", \"gs-overlay-animated\");\r\n\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        svg.setAttribute(\"xmlSpace\", \"preserve\");\r\n        svg.setAttribute(\"xmlnsXlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin slice\");\r\n\r\n        svg.style.fillRule = \"evenodd\";\r\n        svg.style.clipRule = \"evenodd\";\r\n        svg.style.strokeLinejoin = \"round\";\r\n        svg.style.strokeMiterlimit = \"2\";\r\n        svg.style.zIndex = \"10000\";\r\n        svg.style.position = \"fixed\";\r\n        svg.style.top = \"0\";\r\n        svg.style.left = \"0\";\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        return svg;\r\n    }\r\n\r\n    #createSVGPath() {\r\n        \r\n        const me = this;\r\n\r\n        const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        pathEl.style.fill = me.overlayColor;\r\n        pathEl.style.opacity = me.overlayOpacity;\r\n        pathEl.style.pointerEvents = \"auto\";\r\n        pathEl.style.cursor = \"auto\";\r\n        return pathEl;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n        \r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n        \r\n        const rect = target.getBoundingClientRect()\r\n\r\n        const padding = me.overlayPadding;\r\n        const radius = me.overlayRadius;\r\n      \r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n      \r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n      \r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n      \r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n      \r\n        return `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n          M${highlightBoxX},${highlightBoxY} \r\n          h${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n          v${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n          h-${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n          v-${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;      \r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                translate : `${x}px ${y}px`\r\n            };\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n        me.attachEvent(el, 'dblclick', me.#onDoubleClick.bind(me));\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n        \r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', {start: true});\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', {stop: true});\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n            .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, true);\r\n                el.dataset.gsSplitter = true;\r\n            });\r\n        } else {\r\n            me.#lockable\r\n            .filter(el => el.dataset.gsSplitter)\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, false);\r\n                delete el.dataset.gsSplitter;\r\n            });            \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n    \r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTag extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSTag.#style);\r\n        customElements.define('gs-tag', GSTag);\r\n        Object.seal(GSTag);\r\n    }\r\n\r\n    static get #style() {\r\n        return `\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = me.#renderList();\r\n        const tags = me.#renderTags();\r\n        return `\r\n        <div class=\"d-flex flex-wrap align-items-center gap-1 ${me.css}\">\r\n            ${tags}\r\n            <input list=\"${me.name}_list\" name=\"${me.name}\" type=\"text\" class=\"form-control d-flex w-auto flex-grow-1\" placeholder=\"${me.placeholder}\">\r\n            <datalist id=\"${me.name}_list\">${items}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.query('div'), 'click', me.#onClick.bind(me));\r\n        me.attachEvent(me.#input, 'keydown', me.#onKeyDown.bind(me));\r\n        me.attachEvent(me.#input, 'input', me.#onInput.bind(me));\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTag.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.#data.length >= me.max;\r\n    }\r\n\r\n    get #data() {\r\n        return this.queryAll('.tag').map(el => el.dataset.value);\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();        \r\n    }\r\n\r\n    get #isDuplicate() {\r\n        const me = this;\r\n        const val = me.#input.value.toLowerCase();\r\n        return me.values.filter( v => v.toLowerCase() === val).length > 0 ;\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax ||(!optEl && me.allowAdd == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (me.#isDuplicate) return;\r\n        const src = me.#renderTag(fld.value);\r\n        const el = GSDOM.parse(src, true);\r\n        fld.insertAdjacentElement('beforebegin', el);\r\n        fld.value = '';\r\n        optEl?.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n    \r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const opt  = document.createElement('option');\r\n        opt.value = tagEl.dataset.value;\r\n        me.#datalist.appendChild(opt);\r\n        tagEl.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        return items.map(el => `<option value=\"${el.name}\">`).join('');\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v)).join('');\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        return `<div class=\"badge tag ${me.cssTag}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"btn-close ms-1 ${me.cssClose}\"></button></div>`;\r\n    }\r\n  \r\n    get #input() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.query('datalist');\r\n    }\r\n\r\n    get allowAdd() {\r\n        return GSAttr.getAsBool(this, 'allowadd', false);\r\n    }\r\n\r\n    set allowAdd(val = false) {\r\n        return GSAttr.betAsBool(this, 'allowadd', val);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set max(val = 0) {\r\n        return GSAttr.setAsNum(this, 'max', val);\r\n    }\r\n\r\n    get values() {\r\n        return GSAttr.get(this, 'values', '').split(',').map(v => v.trim());\r\n    }\r\n\r\n    set values(val = '') {\r\n        return GSAttr.set(this, 'values', val);\r\n    }\r\n\r\n    get placeholder() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return GSAttr.get(this, 'placeholder', alt);\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val)\r\n    }    \r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '')\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }  \r\n\r\n    get cssTag() {\r\n        return GSAttr.get(this, 'css-tag', 'bg-secondary')\r\n    }\r\n\r\n    set cssTag(val = '') {\r\n        return GSAttr.set(this, 'css-tag', val);\r\n    }    \r\n\r\n    get cssClose() {\r\n        return GSAttr.get(this, 'css-close', 'text-bg-light')\r\n    }\r\n\r\n    set cssClose(val = '') {\r\n        return GSAttr.set(this, 'css-close', val);\r\n    }    \r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = null;\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events = {};\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events?.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events?.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events?.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', parent = '', css = '') {\r\n\r\n        const me = this;\r\n        const name = el.name || el.title;\r\n        const path = `${parent}/${name}`\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = GSUtil.isStringEmpty(pid) ? idx : `${pid}.${idx}`;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" `);\r\n        html.push(`data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\"  `);\r\n        html.push(`data-path=\"${path}\"  data-name=\"${name}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, path, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                if (sts) {\r\n                    const cl = cid.split('\\.').length;\r\n                    if (cl > pl + 1) {\r\n                        el = el.nextElementSibling;\r\n                        continue;    \r\n                    }\r\n    \r\n                    if (pl + 1 != cl && sts) break;\r\n                }\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parentNode(nodeid) {\r\n        return nodeid.split('.').slice(0,-1).join('.');\r\n    }\r\n\r\n    #parent(el) {\r\n        const me = this;\r\n        el = el || me.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = me.#parentNode(s);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    #next(el) {\r\n        el = el?.nextElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.nextElementSibling;\r\n        }\r\n        return el;\r\n    }\r\n\r\n    #previous(el) {\r\n        el = el?.previousElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.previousElementSibling;\r\n        }        \r\n        return el;\r\n    }\r\n\r\n    get level() {\r\n        return this.#selected?.dataset.nodeid.split('.').length || -1;\r\n    }\r\n\r\n    get path() {\r\n        return this.#selected?.dataset.path;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:first-of-type'));\r\n        const el = me.#next(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.next() ;\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        const el = me.#previous(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.prev() ;\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     * TODO - path navigation\r\n     */\r\n    open(path) {\r\n        const me = this;\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isOpen && isFolder) return me.next();\r\n        me.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     * TODO - path navigation\r\n     */\r\n    close(path) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || !(isOpen && isFolder)) return me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        // me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.repaint();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = [...me.#data, ...records];\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table body renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.queryAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" delay=\"${delay}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.removeNative(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  removeNative(notification) {\r\n    this.#list.delete(notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSBase","HTMLElement","refid","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","error","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles$1","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSVersion","version","build","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isNull","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","string","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","readFromObject","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSPromise$1","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","AbortController","GSAbortController","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","UNIQUE","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","reset","read","submit","onSubmit","reportValidity","elements","storage","fromObject","toObject","handler","old","write","onField","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","isFormElement","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","setSelectionRange","metaKey","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","hover","getAttrs","comment","ariaLabel","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","isCompany","isYear","company","GSDialog","STACK","updateStack","opened","dlg","dialog","showModal","notify","monitorAction","onForm","onVisible","onEscape","onClose","onCancel","buttonOkEl","forms","afterOpen","afterClose","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","focusable","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","isRange","onRange","outputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","output","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSIcon","onMouseOver","onMouseOut","sizeCss","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSOverlay","tid","svgid","updateSVG","svg","autoremove","overlayPadding","overlayRadius","overlayColor","overlayOpacity","oldTarget","newTarget","createSVG","createSVGPath","pathStr","createSVGPathString","viewBox","createElementNS","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathEl","fill","pointerEvents","cursor","windowX","windowY","radius","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","Event","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onDoubleClick","csize","onMouseUp","onMouseMove","lock","updateMouse","lockable","gsSplitter","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTag","renderList","renderTags","inputType","updateTag","srcElement","removeTag","addTag","isMax","optEl","allowAdd","renderTag","tagEl","cssTag","cssClose","betAsBool","alt","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","removeNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","assign","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","GSMarkdown","converter","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}