{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSLog.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSOverlay.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTag.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.0';\r\n    }\r\n\r\n    get build() {\r\n        return 20240525;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (!(editable && e.altKey)) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => !gs.includes(el)).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    #queued;\r\n    #queue = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n\r\n        this.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n            while (me.#queue.length > 0) {\r\n                try {\r\n                    me.attributeCallback(...me.#queue.shift());\r\n                } catch(e) {\r\n                    GSLog.error(null, e);\r\n                }\r\n            }\r\n            me.#queued = false;\r\n        });\r\n\r\n        //requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        return me.validate();\r\n    }\r\n\r\n    get asJSON() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    // @Deprecated\r\n    set data(data) {\r\n        return this.asJSON = data;\r\n    }\r\n\r\n    // @Deprecated\r\n    get data() {\r\n        return this.asJSON;\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.asJSON);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last) {\r\n            GSDOM.fromObject2Element(el, me.#last);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.asJSON = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.validate();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.asJSON, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self?.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const opts = GSItem.getAttrs(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${opts} ${disabled} title=\"${me.comment}\" aria-label=\"${me.ariaLabel}\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        translate : `${cfg.clientX}px ${cfg.clientY}px`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n// TODO - add CloseWatcher when API available\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    if (GSDialog.#STACK.length === 0) return null;\r\n    return GSDialog.#STACK[GSDialog.#STACK.length - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialog.#updateStack();\r\n    return Array.from(GSDialog.#STACK);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (!dlg) return;\r\n      const cfg = { type: 'dialog', ok: me.visible };\r\n      if (me.visible && !dlg.open) {\r\n        dlg.showModal();\r\n        GSDialog.#STACK.push(me);\r\n        me.emit('change');\r\n        me.#notify(cfg);\r\n      } else  if (!me.visible && dlg.open) {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n        me.#notify(cfg);\r\n      }\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me, 'visible', me.#onVisible.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #notify(cfg) {\r\n    const me = this;\r\n    GSEvents.waitAnimationFrame(() =>{\r\n      me.emit('visible', cfg, true, true);\r\n    });\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onVisible(e) {\r\n    const me = this;\r\n    me.visible ? me.afterOpen() : me.afterClose();\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms?.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = true;\r\n    me.forms?.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = false;\r\n    me.forms?.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  async afterOpen() {\r\n    \r\n  }\r\n\r\n  async afterClose() {\r\n    \r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get active() {\r\n    return GSDialog.top;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elements stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label' && me.#labelEl) me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value' && me.#inputEl) me.#inputEl.value = newValue;\r\n      if (name === 'disabled' && me.#inputEl) me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n      if (me.#isRange) {\r\n         me.attachEvent(me.#inputEl, 'input', me.#onRange.bind(me));\r\n         me.#onRange();\r\n      } \r\n   }\r\n\r\n   #onRange(e) {\r\n      const me = this;\r\n      const el = me.#outputEl;\r\n      if (el) el.innerHTML = me.#inputEl?.value || '';\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #outputEl() {\r\n      return this.query('input').nextElementSibling;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.includes(',');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}${me.#output}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #output() {\r\n      const me = this;\r\n      if (!me.#isRange) return \"\";\r\n      return `<span class=\"position-absolute px-1\">${me.value}</span>`; \r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for a gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const size = GSAttr.getAsNum(el, 'size', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const ssize = size > 0 ? `${sfx}: ${size}px;` : '';\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [ssize, smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    super.connectedCallback();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#unbindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    if (!me.#bindings) return;\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    if (!me.#bindings) return;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOverlay class\r\n * @module components/GSOverlay\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * SVG overlay renderer around selected target.\r\n * <gs-overlay target=\"#GSId-30-nav\" autoremove></gs-overlay>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOverlay extends GSElement {\r\n\r\n    static #attrs = ['target', 'opacity', 'color', 'radius', 'padding'];\r\n\r\n    #tid = 0;\r\n    #svgid = GSID.id;\r\n\r\n    static {\r\n        customElements.define('gs-overlay', GSOverlay);\r\n        Object.seal(GSOverlay);\r\n    }\r\n\r\n    static get attributes() {\r\n        return GSOverlay.#attrs;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return GSElement.observeAttributes(GSOverlay.#attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (GSOverlay.attributes.includes(name)) {\r\n            if (name === 'target') {\r\n                me.#updateSVG(oldValue, newValue);\r\n            } else {\r\n                me.#updateSVG('', me.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me  = this;\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.svg?.remove();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get autoremove() {\r\n        return this.hasAttribute('autoremove');\r\n    }\r\n\r\n    set autoremove(val) {\r\n        return GSAttr.toggle(this, 'autoremove', GSUtil.asBool(val));\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target', '');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get overlayPadding() {\r\n        return GSAttr.getAsNum(this, 'padding', 1);\r\n    }\r\n\r\n    set overlayPadding(val = 1) {\r\n        return GSAttr.setAsNum(this, 'padding', val);\r\n    }\r\n\r\n    get overlayRadius() {\r\n        return GSAttr.getAsNum(this, 'radius', 6);\r\n    }\r\n\r\n    set overlayRadius(val = 6) {\r\n        return GSAttr.setAsNum(this, 'radius', val);\r\n    }\r\n\r\n    get overlayColor() {\r\n        return GSAttr.get(this, 'color', 'rgb(0,0,0)');\r\n    }\r\n\r\n    set overlayColor(val = '') {\r\n        return GSAttr.set(this, 'color', val);\r\n    }\r\n\r\n    get overlayOpacity() {\r\n        return GSAttr.getAsNum(this, 'opacity', 0.7);\r\n    }\r\n\r\n    set overlayOpacity(val = 0.7) {\r\n        return GSAttr.setAsNum(this, 'opacity', val);\r\n    }\r\n\r\n    get svg() {\r\n        return GSDOM.getByID(this.#svgid);\r\n    }\r\n\r\n    get path() {\r\n        return GSDOM.query(this.svg, 'path');\r\n    }\r\n\r\n    open() {\r\n        const me = this;\r\n        me.#updateSVG('', me.target);\r\n    }\r\n\r\n    close() {\r\n        const me = this;\r\n        const svg = me.svg;\r\n        me.removeEvent(svg, 'click');\r\n        svg?.remove();\r\n    }\r\n    \r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    #onResize() {\r\n        const me = this;\r\n        me.close();\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.open(), 200);\r\n    }\r\n\r\n    #updateSVG(oldTarget = '', newTarget = '') {\r\n        const me = this;\r\n        if (oldTarget === newTarget) return;\r\n        if (!newTarget) return me.svg?.remove();\r\n        const el = GSDOM.query(newTarget);\r\n        if (!el) return;\r\n\r\n        const svg = me.svg || me.#createSVG();\r\n        const path = me.path || me.#createSVGPath();\r\n        const pathStr = me.#createSVGPathString(el);\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        path.setAttribute(\"d\", pathStr);\r\n        if (!me.svg) {\r\n            svg.appendChild(path);\r\n            document.body.appendChild(svg);\r\n            me.attachEvent(svg, 'click', me.reset.bind(me));\r\n        }\r\n\r\n    }\r\n\r\n    get #viewBox() {\r\n        return `0 0 ${window.innerWidth} ${window.innerHeight}`;\r\n    }\r\n\r\n    #createSVG() {\r\n\r\n        const me = this;\r\n\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.id = me.#svgid;\r\n        svg.classList.add(\"gs-overlay\", \"gs-overlay-animated\");\r\n\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        svg.setAttribute(\"xmlSpace\", \"preserve\");\r\n        svg.setAttribute(\"xmlnsXlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin slice\");\r\n\r\n        svg.style.fillRule = \"evenodd\";\r\n        svg.style.clipRule = \"evenodd\";\r\n        svg.style.strokeLinejoin = \"round\";\r\n        svg.style.strokeMiterlimit = \"2\";\r\n        svg.style.zIndex = \"10000\";\r\n        svg.style.position = \"fixed\";\r\n        svg.style.top = \"0\";\r\n        svg.style.left = \"0\";\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        return svg;\r\n    }\r\n\r\n    #createSVGPath() {\r\n        \r\n        const me = this;\r\n\r\n        const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        pathEl.style.fill = me.overlayColor;\r\n        pathEl.style.opacity = me.overlayOpacity;\r\n        pathEl.style.pointerEvents = \"auto\";\r\n        pathEl.style.cursor = \"auto\";\r\n        return pathEl;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n        \r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n        \r\n        const rect = target.getBoundingClientRect()\r\n\r\n        const padding = me.overlayPadding;\r\n        const radius = me.overlayRadius;\r\n      \r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n      \r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n      \r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n      \r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n      \r\n        return `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n          M${highlightBoxX},${highlightBoxY} \r\n          h${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n          v${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n          h-${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n          v-${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;      \r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                translate : `${x}px ${y}px`\r\n            };\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n        me.attachEvent(el, 'dblclick', me.#onDoubleClick.bind(me));\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n        \r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', {start: true});\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', {stop: true});\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n            .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, true);\r\n                el.dataset.gsSplitter = true;\r\n            });\r\n        } else {\r\n            me.#lockable\r\n            .filter(el => el.dataset.gsSplitter)\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, false);\r\n                delete el.dataset.gsSplitter;\r\n            });            \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n    \r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTag extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSTag.#style);\r\n        customElements.define('gs-tag', GSTag);\r\n        Object.seal(GSTag);\r\n    }\r\n\r\n    static get #style() {\r\n        return `\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = me.#renderList();\r\n        const tags = me.#renderTags();\r\n        return `\r\n        <div class=\"d-flex flex-wrap align-items-center gap-1 ${me.css}\">\r\n            ${tags}\r\n            <input list=\"${me.name}_list\" name=\"${me.name}\" type=\"text\" class=\"form-control d-flex w-auto flex-grow-1\" placeholder=\"${me.placeholder}\">\r\n            <datalist id=\"${me.name}_list\">${items}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.query('div'), 'click', me.#onClick.bind(me));\r\n        me.attachEvent(me.#input, 'keydown', me.#onKeyDown.bind(me));\r\n        me.attachEvent(me.#input, 'input', me.#onInput.bind(me));\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTag.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.#data.length >= me.max;\r\n    }\r\n\r\n    get #data() {\r\n        return this.queryAll('.tag').map(el => el.dataset.value);\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();        \r\n    }\r\n\r\n    get #isDuplicate() {\r\n        const me = this;\r\n        const val = me.#input.value.toLowerCase();\r\n        return me.values.filter( v => v.toLowerCase() === val).length > 0 ;\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax ||(!optEl && me.allowAdd == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (me.#isDuplicate) return;\r\n        const src = me.#renderTag(fld.value);\r\n        const el = GSDOM.parse(src, true);\r\n        fld.insertAdjacentElement('beforebegin', el);\r\n        fld.value = '';\r\n        optEl?.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n    \r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const opt  = document.createElement('option');\r\n        opt.value = tagEl.dataset.value;\r\n        me.#datalist.appendChild(opt);\r\n        tagEl.remove();\r\n        me.values = me.#data.join(',');\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        return items.map(el => `<option value=\"${el.name}\">`).join('');\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v)).join('');\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        return `<div class=\"badge tag ${me.cssTag}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"btn-close ms-1 ${me.cssClose}\"></button></div>`;\r\n    }\r\n  \r\n    get #input() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.query('datalist');\r\n    }\r\n\r\n    get allowAdd() {\r\n        return GSAttr.getAsBool(this, 'allowadd', false);\r\n    }\r\n\r\n    set allowAdd(val = false) {\r\n        return GSAttr.betAsBool(this, 'allowadd', val);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set max(val = 0) {\r\n        return GSAttr.setAsNum(this, 'max', val);\r\n    }\r\n\r\n    get values() {\r\n        return GSAttr.get(this, 'values', '').split(',').map(v => v.trim());\r\n    }\r\n\r\n    set values(val = '') {\r\n        return GSAttr.set(this, 'values', val);\r\n    }\r\n\r\n    get placeholder() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return GSAttr.get(this, 'placeholder', alt);\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val)\r\n    }    \r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '')\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }  \r\n\r\n    get cssTag() {\r\n        return GSAttr.get(this, 'css-tag', 'bg-secondary')\r\n    }\r\n\r\n    set cssTag(val = '') {\r\n        return GSAttr.set(this, 'css-tag', val);\r\n    }    \r\n\r\n    get cssClose() {\r\n        return GSAttr.get(this, 'css-close', 'text-bg-light')\r\n    }\r\n\r\n    set cssClose(val = '') {\r\n        return GSAttr.set(this, 'css-close', val);\r\n    }    \r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = null;\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events = {};\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events?.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events?.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events?.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', parent = '', css = '') {\r\n\r\n        const me = this;\r\n        const name = el.name || el.title;\r\n        const path = `${parent}/${name}`\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = GSUtil.isStringEmpty(pid) ? idx : `${pid}.${idx}`;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" `);\r\n        html.push(`data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\"  `);\r\n        html.push(`data-path=\"${path}\"  data-name=\"${name}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, path, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                if (sts) {\r\n                    const cl = cid.split('\\.').length;\r\n                    if (cl > pl + 1) {\r\n                        el = el.nextElementSibling;\r\n                        continue;    \r\n                    }\r\n    \r\n                    if (pl + 1 != cl && sts) break;\r\n                }\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parentNode(nodeid) {\r\n        return nodeid.split('.').slice(0,-1).join('.');\r\n    }\r\n\r\n    #parent(el) {\r\n        const me = this;\r\n        el = el || me.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = me.#parentNode(s);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    #next(el) {\r\n        el = el?.nextElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.nextElementSibling;\r\n        }\r\n        return el;\r\n    }\r\n\r\n    #previous(el) {\r\n        el = el?.previousElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.previousElementSibling;\r\n        }        \r\n        return el;\r\n    }\r\n\r\n    get level() {\r\n        return this.#selected?.dataset.nodeid.split('.').length || -1;\r\n    }\r\n\r\n    get path() {\r\n        return this.#selected?.dataset.path;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:first-of-type'));\r\n        const el = me.#next(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.next() ;\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        const el = me.#previous(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.prev() ;\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     * TODO - path navigation\r\n     */\r\n    open(path) {\r\n        const me = this;\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isOpen && isFolder) return me.next();\r\n        me.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     * TODO - path navigation\r\n     */\r\n    close(path) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || !(isOpen && isFolder)) return me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        // me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.repaint();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = [...me.#data, ...records];\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.queryAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" delay=\"${delay}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.removeNative(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  removeNative(notification) {\r\n    this.#list.delete(notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSBase","HTMLElement","refid","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","error","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles$1","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSVersion","version","build","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isNull","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","readFromObject","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSPromise$1","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","AbortController","GSAbortController","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","UNIQUE","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","reset","read","submit","onSubmit","reportValidity","elements","storage","fromObject","toObject","handler","old","write","onField","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","isFormElement","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","setSelectionRange","metaKey","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","getAttrs","comment","ariaLabel","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","isCompany","isYear","company","GSDialog","STACK","updateStack","opened","dlg","dialog","showModal","notify","monitorAction","onForm","onVisible","onEscape","onClose","onCancel","buttonOkEl","forms","afterOpen","afterClose","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","focusable","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","isRange","onRange","outputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","output","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSOverlay","tid","svgid","updateSVG","svg","autoremove","overlayPadding","overlayRadius","overlayColor","overlayOpacity","oldTarget","newTarget","createSVG","createSVGPath","pathStr","createSVGPathString","viewBox","createElementNS","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathEl","fill","pointerEvents","cursor","windowX","windowY","radius","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","Event","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onDoubleClick","csize","onMouseUp","onMouseMove","lock","updateMouse","lockable","gsSplitter","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTag","renderList","renderTags","inputType","updateTag","srcElement","removeTag","addTag","isMax","optEl","allowAdd","renderTag","tagEl","cssTag","cssClose","betAsBool","alt","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","removeNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","assign","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","GSMarkdown","converter","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}