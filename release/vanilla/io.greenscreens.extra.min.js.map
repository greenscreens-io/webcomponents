{"version":3,"file":"io.greenscreens.extra.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSData.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert lsit of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n        switch (el.type) {\r\n            case 'datetime-local':\r\n            case 'number':\r\n                return el.value ? el.valueAsNumber : el.value;\r\n            default:\r\n                return el.value;\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic monitorAction(owner, type) {\r\n\t\t//owner.on('action', GSUtil.#onAction.bind(owner));\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tif (data.type === type) return;\r\n\t\t\t\r\n\t\t\tGSEvents.prevent(e);\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tconst sts = await GSEvents.onAction(me, action);\r\n\t\t\tif (!sts) {\r\n\t\t\t\tdata.type = type;\r\n\t\t\t\tGSEvents.send(me, 'action', data, true, true, true); // notify self\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic async onAction(owner, action) {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\ttry {\r\n\t\t\taction = GSUtil.capitalizeAttr(action);\r\n\t\t\tconst fn = me[action];\r\n\t\t\tsts = GSFunction.isFunction(fn);\r\n\t\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\t\tif (sts) {\r\n\t\t\t\tif (GSFunction.isFunctionAsync(fn)) {\r\n\t\t\t\t\tawait me[action]();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme[action]();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tif (GSFunction.isFunction(me.onError)) me.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot && el.unstyled !== true).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART == false ? false : globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n        }  catch(e) {\r\n            console.log(e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSChart.#init();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        GSHighlight.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSHighlight.URL_LIB === false) return;\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS == false ? false : globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        const me = this;\r\n        const html = e.data.data;\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        GSMonaco.#init();\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO == false ? false : globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static #init() {\r\n        if (GSMonaco.URL_LIB == false) return;\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (globalThis.GS_URL_MONACO === false) return;\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvents.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        window.requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    //todo take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSMarkdown.URL_LIB == false) return;\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN == false ? false : globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initLib();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    #onScriptReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);\r\n        requestAnimationFrame(() => {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url)\r\n        });\r\n    }\r\n   \r\n    #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return me.#onScriptReady();\r\n        const script = document.createElement('script');\r\n        GSEvents.attach(me, script, 'load', me.#onScriptReady.bind(this));\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","Object","freeze","GSLog","el","msg","print","forced","type","logging","fn","console","log","nodeName","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","url","test","includes","pattern","charset","Math","floor","random","locale","navigator","language","languages","startsWith","Array","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","left","right","lmatch","rmatch","time","Promise","r","setTimeout","bind","callback","animating","requestAnimationFrame","e","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","timeout","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","normalize","getAttribute","attr","asBool","asNum","set","NaN","stringify","from","attributes","filter","sep","GSFunction","isFunction","indexOf","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","appendChild","target","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","res","push","innerHTML","textContent","entries","kv","style","sts","isNull","toggle","apply","toggleClass","contains","root","unwrap","querySelectorAll","valueAsNumber","checked","getValue","styleValue","textTransform","dataset","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","location","hash","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","documentElement","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","opt","json","isJson","func","parseFunction","isFunc","callFunction","GSEvents","Map","listen","prevent","onKeyDown","event","code","ctrlKey","shiftKey","loaded","wait","sendSuspended","er","addEventListener","removeEventListener","unlisten","once","detail","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","async","action","onAction","onError","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","undefined","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","store","create","dynamic","styles","sync","rule","getRule","insertRule","setRule","updateRule","prop","isImportant","setProperty","deleteRule","sort","b","localeCompare","adopt","GSComponents","Set","els","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listener","onStyles","unstyled","listenStyles","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","isBool","compareBool","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","disconnect","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","hide","show","off","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","inject","parseWrapped","insertAdjacent","setHTML","applyTemplate","GSDefine","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","register","init","observeAttributes","resize","destroy","getAsNum","setAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","assign","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","initialized","setInterval","require","config","paths","vs","clearInterval","disabledFeatures","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","onResize","layout","GSMarkdown","converter","last","GS_URL_MARKDOWN","maxHeight","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","onScriptReady","showdown","Converter","tasklists","tables"],"mappings":"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"}