{"version":3,"file":"io.greenscreens.extra.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSData.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert lsit of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot && el.unstyled !== true).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\n\r\nconst origin = globalThis.CHART_URL || globalThis.location?.origin || '/webcomponents';\r\nconst url = `${origin}/assets/chart/chart.mjs`;\r\nconst { Chart, registerables } = await import(url);\r\nChart.register(...registerables);\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    #chart = null;\r\n\r\n    static async #init() {\r\n        //const { Chart, registerables } = await import('/assets/chart/chart.mjs');\r\n        //const module = await import('/assets/chart/chart.mjs');\r\n        //module.Chart.register(...module.registerables);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static URL_LIB = globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '') {\r\n        this.#onHighlight(data);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(this.#code, e.data.data);\r\n    }\r\n\r\n    #onHighlight(data = '') {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static URL_LIB = globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvents.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        window.requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    //todo take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    static URL_LIB = globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initLib();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"overflow-auto ${this.css}\" style=\"max-height: 800px;\"><div/>`;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    #onScriptReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);\r\n        requestAnimationFrame(() => {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url)\r\n        });\r\n    }\r\n   \r\n    #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return me.#onScriptReady();\r\n        const script = document.createElement('script');\r\n        GSEvents.attach(me, script, 'load', me.#onScriptReady.bind(this));\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","Object","freeze","GSLog","el","msg","print","forced","type","logging","fn","console","log","nodeName","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","url","test","includes","pattern","charset","Math","floor","random","locale","navigator","language","languages","startsWith","Array","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","left","right","lmatch","rmatch","time","Promise","r","setTimeout","bind","callback","animating","requestAnimationFrame","e","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","timeout","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","normalize","getAttribute","attr","asBool","asNum","set","NaN","stringify","from","attributes","filter","sep","GSFunction","isFunction","indexOf","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","appendChild","target","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","host","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","res","push","innerHTML","textContent","entries","kv","style","sts","isNull","toggle","apply","toggleClass","contains","root","unwrap","querySelectorAll","checked","styleValue","textTransform","dataset","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","location","hash","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","documentElement","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","callFunction","GSEvents","Map","listen","prevent","onKeyDown","event","code","ctrlKey","shiftKey","loaded","wait","sendSuspended","er","opt","addEventListener","removeEventListener","unlisten","once","detail","hasFunction","preventDefault","stopPropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","undefined","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","store","create","dynamic","styles","sync","rule","getRule","insertRule","setRule","updateRule","prop","isImportant","setProperty","deleteRule","sort","b","localeCompare","adopt","GSComponents","Set","els","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listener","onStyles","unstyled","listenStyles","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","isBool","compareBool","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","disconnect","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","hide","show","off","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","inject","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","CHART_URL","Chart","registerables","register","GSChart","chart","init","observeAttributes","resize","destroy","getAsNum","setAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","assign","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","URL_LIB","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","GS_URL_MONACO","editor","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","initialized","setInterval","require","config","paths","vs","clearInterval","disabledFeatures","getValue","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","onResize","layout","GSMarkdown","GS_URL_MARKDOWN","converter","last","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","onScriptReady","showdown","Converter","tasklists","tables"],"mappings":"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"}