{"version":3,"file":"io.greenscreens.extra.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvent.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSData.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\t\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n    /**\r\n     * Check if element is visible\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n        const rect = el.getBoundingClientRect();\r\n        if (rect.width === 0 || rect.height === 0) return false;\r\n        return !GSDOM.isStyleValue(el, 'display', 'none') && GSUtil.asNum(GSDOM.styleValue(el, 'opacity')) > 0;\r\n    }\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT','SELECT','TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (!map) return null;\r\n\t\tconst css =  (typeof map.get === 'function') ? map.get(name) :  map[name];\r\n\t\treturn css.value ? css.value : css;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if computed style is equal\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic isStyleValue(el, name, val = '') {\r\n\t\treturn GSDOM.styleValue(el, name) === val;\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\t\t\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\t\t\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0 ) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\t\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\t\r\n\t static fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v !='items' && v[0]!= '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\t\r\n\t static fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v !='items' && v[0]!= '#')\r\n\t\t\t.forEach(v =>  src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tglobalThis.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t\tglobalThis.GSEvent = GSEvent;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'ready', {});\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\n\r\nconst origin = globalThis.CHART_URL || globalThis.location?.origin || '/webcomponents';\r\nconst url = `${origin}/assets/chart/chart.mjs`;\r\nconst { Chart, registerables } = await import(url);\r\nChart.register(...registerables);\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    #chart = null;\r\n\r\n    static async #init() {\r\n        //const { Chart, registerables } = await import('/assets/chart/chart.mjs');\r\n        //const module = await import('/assets/chart/chart.mjs');\r\n        //module.Chart.register(...module.registerables);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            //return `<div style=\"width:${me.width}px;height:${me.height}px;\"><canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas></div>`;\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (me.#chart) {\r\n            requestAnimationFrame(() => {\r\n                const div = me.query('div');\r\n                if (div) {\r\n                    div.style.width = `${x}px`;\r\n                    div.style.height = `${y}px`;\r\n                }\r\n                me.#chart.resize(x, y);\r\n            });\r\n        }\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static URL_LIB = globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '') {\r\n        this.#onHighlight(data);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(this.#code, e.data.data);\r\n    }\r\n\r\n    #onHighlight(data = '') {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static URL_LIB = globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvent.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        window.requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","Object","freeze","GSLog","el","msg","print","forced","type","logging","fn","console","log","nodeName","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","url","test","includes","pattern","charset","Math","floor","random","locale","navigator","language","languages","startsWith","Array","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","left","right","lmatch","rmatch","time","Promise","r","setTimeout","bind","callback","animating","requestAnimationFrame","e","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","timeout","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","normalize","getAttribute","attr","asBool","asNum","set","NaN","stringify","from","attributes","filter","GSDOM","activeElement","active","shadowRoot","rect","getBoundingClientRect","width","height","isStyleValue","styleValue","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","forceWrap","nodes","fromNode","head","children","concat","wrap","shift","appendChild","target","link","slot","isText","tagName","indexOf","ownClazz","it","inheritance","pel","constructor","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","removeChild","node","closest","all","shadow","parentAll","childAll","child","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","res","push","innerHTML","textContent","sts","toggle","apply","toggleClass","contains","owner","root","unwrap","querySelectorAll","checked","getComputedStyledMap","css","computedStyleMap","getComputedStyle","dataset","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","location","hash","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","documentElement","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","callFunction","GSEvent","Map","addEventListener","prevent","event","code","ctrlKey","shiftKey","loaded","wait","sendSuspended","er","opt","removeEventListener","listen","once","detail","hasFunction","preventDefault","stopPropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","send","capture","offline","me","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isPromise","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","match","env","nocache","undefined","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","style","store","cssRules","styles","sort","b","String","localeCompare","getOrSet","injectStyle","GSComponents","Set","els","unlisten","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listener","onStyles","listenStyles","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","disconnect","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","visible","hasAttribute","setAsBool","updateUI","getStyle","getTemplate","hide","show","evt","on","off","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","inject","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","CHART_URL","Chart","registerables","register","GSChart","chart","init","observeAttributes","resize","destroy","getAsNum","setAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","assign","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","URL_LIB","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","GS_URL_MONACO","editor","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","initialized","setInterval","require","config","paths","vs","clearInterval","disabledFeatures","getValue","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","onResize","layout"],"mappings":"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"}