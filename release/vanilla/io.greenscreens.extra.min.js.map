{"version":3,"file":"io.greenscreens.extra.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        return owner ? await fn.bind(owner)() : await fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        return owner ? fn.bind(owner)() : fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value) {\r\n\t\tlet o = obj;\r\n\t\tname.split('.').forEach((v, i, a) => {\r\n\t\t\tconst last = i === a.length - 1;\r\n\t\t\tif (!o.hasOwnProperty(v)) o[v] = last ? value : {};\r\n\t\t\to = o[v];\r\n\t\t});\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tlet o = obj;\r\n\t\tname.split('.').forEach((v, i, a) => {\r\n            if (o === null) return;\r\n\t\t\tconst last = i === a.length - 1;\r\n\t\t\tif (!o.hasOwnProperty(v)) return o = null;\r\n\t\t\to = o[v];\r\n\t\t});\r\n\t\treturn o;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist withing object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tlet o = obj || null;\r\n\t\tname.split('.').forEach(v => {\r\n            if (o == null) return;\r\n\t\t\to = o.hasOwnProperty(v) ? o = o[v] : null;\r\n\t\t});\r\n\t\treturn o ? true : false;        \r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\t\t\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tr(prevent ? e.detail : e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.includes('!important');\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_CHART == false ? false : globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSChart.#init();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        GSHighlight.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSHighlight.URL_LIB === false) return;\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_HLJS == false ? false : globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        const me = this;\r\n        const html = e.data.data;\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        GSMonaco.#init();\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MONACO == false ? false : globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static #init() {\r\n        if (GSMonaco.URL_LIB == false) return;\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (globalThis.GS_URL_MONACO === false) return;\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvents.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSMarkdown.URL_LIB == false) return;\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MARKDOWN == false ? false : globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initLib();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    #onScriptReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);\r\n        requestAnimationFrame(() => {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url)\r\n        });\r\n    }\r\n   \r\n    #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return me.#onScriptReady();\r\n        const script = document.createElement('script');\r\n        GSEvents.attach(me, script, 'load', me.#onScriptReady.bind(this));\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","el","Object","freeze","GSLog","msg","print","tracing","forced","type","logging","tmp","nodeName","fn","console","log","Error","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","url","test","startsWith","endsWith","pattern","charset","Math","floor","random","locale","navigator","language","languages","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","from","attributes","filter","sep","GSFunction$1","GSFunction","isFunction","includes","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","args","apply","cnt","async","own","contextualize","accept","requestAnimationFrame","e","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSData","Set","b","sort","first","second","index","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","sts","idx","col","v1","v2","compare","ord","order","compareNum","compareString","isBool","compareBool","s1","s2","localeCompare","last","hasOwnProperty","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","appendChild","target","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","proxy","queryAll","res","push","Proxy","prop","receiver","Reflect","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","style","isNull","toggle","toggleClass","contains","root","unwrap","querySelectorAll","valueAsNumber","checked","getValue","styleValue","textTransform","dataset","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","location","hash","d","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","opt","json","isJson","func","isFunc","callFunction","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","sendSuspended","chained","susspended","removeEventListener","unlisten","undefined","once","r","detail","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","store","create","dynamic","styles","sync","rule","getRule","insertRule","setRule","updateRule","isImportant","setProperty","deleteRule","adopt","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","getOwnPropertyDescriptor","listener","onStyles","unstyled","listenStyles","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","disconnect","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","hide","show","emit","waitEvent","off","attachEvent","removeEvent","attach","isAllowRender","isConfig","setIf","injection","ref","deattachListeners","removeFlat","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","inject","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSChart","chart","URL_LIB","GS_EXTERNAL","GS_URL_CHART","isChart","initializing","Chart","registerables","register","init","observeAttributes","resize","destroy","getAsNum","setAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","initialized","setInterval","require","config","paths","vs","clearInterval","disabledFeatures","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","onResize","layout","GSMarkdown","converter","GS_URL_MARKDOWN","maxHeight","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","onScriptReady","showdown","Converter","tasklists","tables"],"mappings":"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"}