{"version":3,"file":"io.greenscreens.extra.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSData.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) el.id = el.id || GSID.id;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        return owner ? await fn.bind(owner)() : await fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        return owner ? fn.bind(owner)() : fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.indexOf(name) > -1;\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t || el?.tagName === 'GS-BUTTON'\r\n\t\t || GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ( (node = node.previousElementSibling) ) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n        switch (el.type) {\r\n            case 'datetime-local':\r\n            case 'number':\r\n                return el.value ? el.valueAsNumber : el.value;\r\n            default:\r\n                return el.value;\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tr(prevent ? e.detail : e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // TODO - add support for eq,gt,lt,like,or\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready);\r\n\t\t\tme.emit(me, 'ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_CHART == false ? false : globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSChart.#init();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        GSHighlight.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSHighlight.URL_LIB === false) return;\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_HLJS == false ? false : globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        const me = this;\r\n        const html = e.data.data;\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        GSMonaco.#init();\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MONACO == false ? false : globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static #init() {\r\n        if (GSMonaco.URL_LIB == false) return;\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (globalThis.GS_URL_MONACO === false) return;\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvents.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    //todo take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSMarkdown.URL_LIB == false) return;\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MARKDOWN == false ? false : globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initLib();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    #onScriptReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);\r\n        requestAnimationFrame(() => {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url)\r\n        });\r\n    }\r\n   \r\n    #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return me.#onScriptReady();\r\n        const script = document.createElement('script');\r\n        GSEvents.attach(me, script, 'load', me.#onScriptReady.bind(this));\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","el","Object","freeze","GSLog","msg","print","tracing","forced","type","logging","tmp","nodeName","fn","console","log","Error","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","url","test","includes","pattern","charset","Math","floor","random","locale","navigator","language","languages","startsWith","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","from","attributes","filter","sep","GSFunction","isFunction","indexOf","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","args","apply","cnt","async","own","contextualize","accept","requestAnimationFrame","e","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","appendChild","target","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","index","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","res","push","innerHTML","Document","textContent","style","sts","isNull","toggle","toggleClass","contains","root","unwrap","querySelectorAll","valueAsNumber","checked","getValue","styleValue","textTransform","dataset","ignore","checkValidity","toValue","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","location","hash","d","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","opt","json","isJson","func","isFunc","callFunction","GSEvents","Map","listen","prevent","onKeyDown","event","code","ctrlKey","shiftKey","callback","loaded","wait","sendSuspended","chained","susspended","removeEventListener","unlisten","undefined","once","r","detail","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","store","create","dynamic","styles","sync","rule","getRule","insertRule","setRule","updateRule","prop","isImportant","setProperty","deleteRule","sort","b","localeCompare","adopt","GSComponents","Set","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listener","onStyles","unstyled","listenStyles","GSData","first","second","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","isBool","compareBool","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","disconnect","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","hide","show","emit","waitEvent","off","attachEvent","removeEvent","attach","isAllowRender","isConfig","setIf","injection","ref","deattachListeners","removeFlat","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","inject","parseWrapped","insertAdjacent","setHTML","applyTemplate","doReady","GSDefine","GSChart","chart","URL_LIB","GS_EXTERNAL","GS_URL_CHART","isChart","initializing","Chart","registerables","register","init","observeAttributes","resize","destroy","getAsNum","setAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","initialized","setInterval","require","config","paths","vs","clearInterval","disabledFeatures","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","onResize","layout","GSMarkdown","converter","last","GS_URL_MARKDOWN","maxHeight","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","onScriptReady","showdown","Converter","tasklists","tables"],"mappings":"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"}