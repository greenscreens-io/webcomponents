{"version":3,"file":"io.greenscreens.extra.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSData.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) el.id = el.id || GSID.id;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tmsg = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert lsit of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        return owner ? await fn.bind(owner)() : await fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        return owner ? fn.bind(owner)() : fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            requestAnimationFrame(async () => {\r\n                if (cnt <= 0) return;\r\n                cnt--;\r\n                if (cnt !== 0) return;\r\n                try {\r\n                    await GSFunction.#contextualize(fn, own, args);\r\n                } finally {\r\n                    cnt = -1;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n        switch (el.type) {\r\n            case 'datetime-local':\r\n            case 'number':\r\n                return el.value ? el.valueAsNumber : el.value;\r\n            default:\r\n                return el.value;\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail), timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\t\tGSFunction.callFunction(fn);\r\n\t\t\tGSEvents.send(me, 'ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.#doReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_CHART == false ? false : globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSChart.#init();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        GSHighlight.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSHighlight.URL_LIB === false) return;\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_HLJS == false ? false : globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        const me = this;\r\n        const html = e.data.data;\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        GSMonaco.#init();\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MONACO == false ? false : globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static #init() {\r\n        if (GSMonaco.URL_LIB == false) return;\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (globalThis.GS_URL_MONACO === false) return;\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvents.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    //todo take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSMarkdown.URL_LIB == false) return;\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MARKDOWN == false ? false : globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initLib();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    #onScriptReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);\r\n        requestAnimationFrame(() => {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url)\r\n        });\r\n    }\r\n   \r\n    #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return me.#onScriptReady();\r\n        const script = document.createElement('script');\r\n        GSEvents.attach(me, script, 'load', me.#onScriptReady.bind(this));\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","el","Object","freeze","GSLog$1","GSLog","msg","print","forced","type","logging","nodeName","fn","console","log","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","url","test","includes","pattern","charset","Math","floor","random","locale","navigator","language","languages","startsWith","Array","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","normalize","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","callback","animating","requestAnimationFrame","e","error","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","getAttribute","attr","asBool","asNum","set","NaN","stringify","from","attributes","filter","sep","GSFunction","isFunction","indexOf","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","args","apply","cnt","async","own","contextualize","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","forceWrap","nodes","fromNode","children","wrap","appendChild","target","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","getByID","documentElement","walk","qry","query","queryAll","res","push","innerHTML","textContent","entries","kv","style","sts","isNull","toggle","toggleClass","contains","root","unwrap","querySelectorAll","valueAsNumber","checked","getValue","styleValue","textTransform","dataset","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","location","hash","d","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","opt","json","isJson","func","parseFunction","isFunc","callFunction","GSEvents","Map","listen","prevent","onKeyDown","event","code","ctrlKey","shiftKey","loaded","wait","sendSuspended","accept","removeEventListener","unlisten","undefined","once","r","detail","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","store","create","dynamic","styles","sync","rule","getRule","insertRule","setRule","updateRule","prop","isImportant","setProperty","deleteRule","sort","b","localeCompare","adopt","GSComponents","Set","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listener","onStyles","unstyled","listenStyles","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","isBool","compareBool","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","disconnect","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","hide","show","waitEvent","off","attachEvent","removeEvent","attach","isAllowRender","isConfig","setIf","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","inject","parseWrapped","insertAdjacent","setHTML","applyTemplate","doReady","GSDefine","GSChart","chart","URL_LIB","GS_EXTERNAL","GS_URL_CHART","isChart","initializing","Chart","registerables","register","init","observeAttributes","resize","destroy","getAsNum","setAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","initialized","setInterval","require","config","paths","vs","clearInterval","disabledFeatures","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","onResize","layout","GSMarkdown","converter","last","GS_URL_MARKDOWN","maxHeight","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","onScriptReady","showdown","Converter","tasklists","tables"],"mappings":"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"}