{"version":3,"file":"io.greenscreens.components.core.min.js","sources":["../../modules/base/GSLog.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.0';\r\n    }\r\n\r\n    get build() {\r\n        return 20240525;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSBase","HTMLElement","refid","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","error","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSVersion","version","build","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isNull","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","AbortController","GSAbortController","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","UNIQUE","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","asJSON","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray"],"mappings":"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"}