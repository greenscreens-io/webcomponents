{"version":3,"file":"io.greenscreens.components.core.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\t\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n    /**\r\n     * Check if element is visible\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n        const rect = el.getBoundingClientRect();\r\n        if (rect.width === 0 || rect.height === 0) return false;\r\n        return !GSDOM.isStyleValue(el, 'display', 'none') && GSUtil.asNum(GSDOM.styleValue(el, 'opacity')) > 0;\r\n    }\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT','SELECT','TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (!map) return null;\r\n\t\tconst css =  (typeof map.get === 'function') ? map.get(name) :  map[name];\r\n\t\treturn css.value ? css.value : css;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if computed style is equal\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic isStyleValue(el, name, val = '') {\r\n\t\treturn GSDOM.styleValue(el, name) === val;\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\t\t\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\t\t\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0 ) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\t\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\t\r\n\t static fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v !='items' && v[0]!= '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\t\r\n\t static fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v !='items' && v[0]!= '#')\r\n\t\t\t.forEach(v =>  src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tglobalThis.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t\tglobalThis.GSEvent = GSEvent;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * @Class\r\n */\r\nexport default class GSEventBus extends EventTarget {\r\n\r\n    static #registry = new Map();\r\n\r\n    #listeners = new Set();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEventBus());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus) bus.#unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    #unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            me.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return me.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        me.#listeners.add(wrap);\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        Array.from(me.#listeners)\r\n            .filter(o => o.type === type && o.listener === listener)\r\n            .forEach(o => me.#listeners.delete(o));\r\n        return me.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\n import GSLog from \"./GSLog.mjs\";\r\n import GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = GSDOM.getComputedStyledMap(element);\r\n\t\tif (!cs) return; // no Firefox support\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'ready', {});\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSDOM","activeElement","active","shadowRoot","rect","getBoundingClientRect","width","height","isStyleValue","styleValue","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","parentAll","childAll","child","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","push","innerHTML","textContent","toggle","apply","toggleClass","contains","root","unwrap","checked","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvent","prevent","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEventBus","EventTarget","listeners","Set","register","emit","registry","has","exist","bus","unbind","listener","on","off","evt","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents","els","unlisten","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","source","arrow","pos","fromPlacement","isPlacementValid","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","offset","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","hasAttribute","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","entries","kv","hk","registerFilter","expr","lastIndex","hv","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"mappings":"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"}