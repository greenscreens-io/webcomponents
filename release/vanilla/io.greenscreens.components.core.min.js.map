{"version":3,"file":"io.greenscreens.components.core.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        return owner ? await fn.bind(owner)() : await fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        return owner ? fn.bind(owner)() : fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value) {\r\n\t\tlet o = obj;\r\n\t\tname.split('.').forEach((v, i, a) => {\r\n\t\t\tconst last = i === a.length - 1;\r\n\t\t\tif (!o.hasOwnProperty(v)) o[v] = last ? value : {};\r\n\t\t\to = o[v];\r\n\t\t});\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tlet o = obj;\r\n\t\tname.split('.').forEach((v, i, a) => {\r\n            if (o === null) return;\r\n\t\t\tconst last = i === a.length - 1;\r\n\t\t\tif (!o.hasOwnProperty(v)) return o = null;\r\n\t\t\to = o[v];\r\n\t\t});\r\n\t\treturn o;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist withing object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tlet o = obj || null;\r\n\t\tname.split('.').forEach(v => {\r\n            if (o == null) return;\r\n\t\t\to = o.hasOwnProperty(v) ? o = o[v] : null;\r\n\t\t});\r\n\t\treturn o ? true : false;        \r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.indexOf(name) > -1;\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t//.filter(el => el.name && el.name in obj)\r\n\t\t\t.filter(el => GSData.objectPathExist(obj, el.name))\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\t\t\tGSDOM.fromValue(el, val);\r\n\t\t\t\t} else if (el.value === val) el.checked = true; \r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tr(prevent ? e.detail : e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","sheet","CSSStyleSheet","store","set","style","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","Array","from","cssRules","filter","selectorText","pop","sync","rule","getRule","insertRule","setRule","data","replaceAll","split","map","trim","entries","kv","updateRule","prop","isImportant","setProperty","deleteRule","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","tracing","forced","logging","tmp","nodeName","fn","console","log","Error","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","args","apply","cnt","own","contextualize","accept","GSAttr","isHTMLElement","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSData","Set","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","isBool","compareBool","s1","s2","last","hasOwnProperty","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","push","Proxy","receiver","Reflect","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","isNull","toggle","toggleClass","contains","root","unwrap","valueAsNumber","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","chained","susspended","opt","removeEventListener","unlisten","once","r","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","AbortController","GSAbortController","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","disconnect","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","getOwnPropertyDescriptor","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","json","isJson","func","isFunc","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","waitEvent","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray"],"mappings":"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"}