{"version":3,"file":"io.greenscreens.components.core.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = new CSSStyleSheet();\t\t\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\tif (!(id && style)) return;\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic flatten(el) {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        return this.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event \r\n     * @param {string} type Event name to be listened\r\n     * @returns {Event}\r\n     */\r\n    wait(type = '') {\r\n        if (!type) return e('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(type, (e) => r(e));\r\n        });\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst me = this;\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst rule = GSCacheStyles.getRule(source.dataset.cssId);\r\n\r\n\t\tconst style = rule ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tif (rule) GSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tif (rule) rule.style.transform = style.transform;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * See GSQuery class\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","dynamic","adoptedStyleSheets","styles","Array","from","filter","selectorText","pop","sync","rule","getRule","insertRule","setRule","data","replaceAll","split","map","trim","entries","kv","updateRule","prop","isImportant","setProperty","deleteRule","sort","a","b","String","localeCompare","values","css","getOrSet","freeze","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","push","innerHTML","textContent","isNull","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","listen","prevent","onKeyDown","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","unlisten","once","hasFunction","preventDefault","stopPropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEvent","EventTarget","listeners","Set","listener","off","emit","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents","els","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","offset","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","receiver","Proxy","GSQuery","instance","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"mappings":"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"}