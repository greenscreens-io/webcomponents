{"version":3,"file":"io.greenscreens.components.core.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj ? true : false;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\t\t\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","tracing","forced","logging","tmp","nodeName","fn","console","log","Error","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","AbortController","GSAbortController","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","asJSON","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","queueMicrotask","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray"],"mappings":"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"}