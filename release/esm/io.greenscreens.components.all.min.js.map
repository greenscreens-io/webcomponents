{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/base/GSBeep.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSRouter.mjs","../../modules/base/GSTheme.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/autocapitalize.mjs","../../modules/properties/autocomplete.mjs","../../modules/properties/autocorrect.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/MultipatternController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/InteractiveController.mjs","../../modules/components/ext/controllers/ComboController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/controllers/ValidityController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/ext/GSTextArea.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, language) {\r\n\t\tlanguage = language || GSUtil.language;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(language);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default language\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get language() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(language = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(language).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() === right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tif (time <= 0) return;\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type generator function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunctionGenerator(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const GeneratorFunction = (function*(){}).constructor;\r\n        return fn instanceof GeneratorFunction;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\nconst isProxy = Symbol(\"isProxy\")\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return val;\r\n\t\tconst v = el.getAttribute(name) ?? val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {})\r\n\t\t.filter(kv => kv != 'items')\r\n\t\t.filter(kv => kv[0][0] != '#')\r\n\t\t.filter(kv => kv[0][0] != '$')\r\n\t\t.map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop] = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === 'isProxy') return isProxy;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computedStyleMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #language = navigator.language;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, language) {\r\n        const me = this;\r\n        me.language = language;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get language() {\r\n        return this.#language;\r\n    }\r\n\r\n    set language(val) {\r\n        this.#language = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        tmp.setDate(1);\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#language)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#language, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, language) {\r\n        format = format || GSUtil.getDateFormat(language);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    /**\r\n     * Check if a year is a leap year\r\n     * @param {number} year \r\n     * @returns {Boolean}\r\n     */\r\n    static isLeapYear(year) {\r\n        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, language: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', language:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const language = cfg.language || GSUtil.language;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, language);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, language) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(language);\r\n                    return new GSDate(val).format(fmt, language);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, language);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(language, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, language) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(language);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.language);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n        if (obj?.hasOwnProperty(name)) return GSData.readFromProperty(obj, name);\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    /**\r\n     * Create a deep clone of an object\r\n     * @param {Object} obj \r\n     * @returns {Object}\r\n     */\r\n    static deepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to walk, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive,plain,definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (obj[\"#def\"]) {\r\n\t\t\tel[Symbol.for(\"#def\")] = obj[\"#def\"];\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif (host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif(GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\t\r\n\t\t\t}\r\n\t\t} \t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tglobalThis.dispatchEvent?.(new CustomEvent('gs-base-ready', {\r\n\t\t\tdetail: {\r\n\t\t\tmessage: 'GS Base is ready',\r\n\t\t\ttime: new Date(),\r\n\t\t\t}\r\n\t\t}));\t\t\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #suspended = 0; // Corrected typo\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('Error waiting for page load:', e); // Improved error handling\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#suspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#suspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#suspended > 0) GSEvents.#suspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic detachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(this.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A status of successful observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, else removal functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web components. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monitored element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree for mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP method get|put|post\r\n     * @param {Object} headers HTTP request headers in JSON key/value pairs\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @param {} body Data to send in a request \r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            // TODO - detect if binary\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by its name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve already existing template by name,\r\n\t * or inject a new one if it does not exist already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} tpl Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t// return document.getElementById(tpl.slice(1));\r\n\t\t\treturn GSDOM.query(`template[id=\"${tpl.slice(1)}\"]`, true);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multiple functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host =  el.isProxy ? el.self : el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = el.isProxy ? el : GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(host, target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt?.target?.field || evt?.target?.form || evt?.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)(evt);\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleContent(host, target, value, clean = false) {\r\n        const me = this;\r\n        if (value) {\r\n            let src = '';\r\n            const useDef = GSUtil.asBool(value);\r\n            if (useDef) {\r\n                src = GSDOM.fromJsonAsString(me.definition);\r\n            } else {                \r\n                src = me.#toHTML(value);                \r\n            }\r\n\r\n            const content = GSDOM.parse(src, true);\r\n\r\n            if (!useDef) {\r\n                GSAttr.jsonToAttr(me.definition, content);\r\n            }\r\n\r\n            if (clean) { \r\n                target.innerHTML = '';\r\n            }\r\n\r\n            me.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        this.#handleContent(host, target, this.inject, false);\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(host, target) {\r\n        this.#handleContent(host, target, this.swap, true);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host?.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    detach(name = 'click') {\r\n        //GSEvents.detachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get definition() { return this.#proxy[Symbol.for('#def')]; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributtes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('data-gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing atributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBeep class\r\n * @module base/GSBeep\r\n */\r\n\r\n\r\n/**\r\n * A helper class to use browser AudiContext to make tones\r\n * @class\r\n */\r\nexport class GSBeep {\r\n\r\n    static audioCtx = globalThis.AudioContext || globalThis.webkitAudioContext || globalThis.audioContext;\r\n\r\n    /**\r\n     * Helper function to emit a beep sound in the browser using the Web Audio API.\r\n     * \r\n     * @param {number} duration - The duration of the beep sound in milliseconds.\r\n     * @param {number} frequency - The frequency of the beep sound.\r\n     * @param {number} volume - The volume of the beep sound.\r\n     * @param {string} tyoe - The sound type (sine, square, sawtooth, triangle, custom)\r\n     * \r\n     * @returns {Promise} - A promise that resolves when the beep sound is finished.\r\n     */\r\n    static beep(duration = 200, frequency = 440, volume = 1, type = 'sine') {\r\n        return new Promise((resolve, reject) => {\r\n            try{\r\n                if (!GSBeep.isAvailable) return resolve();\r\n                const context = new GSBeep.audioCtx();\r\n                const oscillatorNode = context.createOscillator();\r\n                const gainNode = context.createGain();\r\n                oscillatorNode.connect(gainNode);\r\n\r\n                // Set the oscillator frequency in hertz\r\n                oscillatorNode.frequency.value = frequency;\r\n\r\n                // Set the type of oscillator\r\n                oscillatorNode.type = type;\r\n                gainNode.connect(context.destination);\r\n\r\n                // Set the gain to the volume\r\n                gainNode.gain.value = volume * 0.01;\r\n\r\n                // Start audio with the desired duration\r\n                oscillatorNode.start(context.currentTime);\r\n                oscillatorNode.stop(context.currentTime + duration * 0.001);\r\n\r\n                // Resolve the promise when the sound is finished\r\n                oscillatorNode.onended = () => resolve();                \r\n            }catch(error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    static get isAvailable() {\r\n        const {isActive, hasBeenActive } =  navigator.userActivation;\r\n        return isActive || hasBeenActive;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promises sequentially\r\n\t * @param {Array<Promise>} ps \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        wrap.controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n            me.#listeners.delete(o);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tselected: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tif (!style) return;\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\t\tif (!style) return;\r\n\t\t\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSRouter class\r\n * @module base/GSRouter\r\n */\r\n\r\nimport { GSAttributeHandler } from \"./GSAttributeHandler.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n//  TODO\r\n//  - autoload definition from URL based on hashtag and default location\r\n\r\n\r\n/**\r\n * Class for handling hash based routing.\r\n * Class uses GSAttributeHandler and optional JSON definition to handle routing.\r\n * \r\n * Use globalThis.GS_ROUTER_URL before loading this module to define JSON definition file location\r\n * Use globalThis.GS_ROUTER_ENABLED to enable or disable routing on load\r\n * @Class\r\n */\r\nexport class GSRouter {\r\n\r\n    // use GS_ROUTER_URL to define JSON definition file location\r\n    static DEFINITION_URL = globalThis.GS_ROUTER_URL || '';\r\n    static #definition = {};\r\n\r\n    /**\r\n     * Loda JSON definition for routing from JSON document.\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    static async loadDefinition(url) {\r\n        return GSLoader.load(url, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Initialize routing from provided URL\r\n     * @param {*} url \r\n     */\r\n    static async initialize(url) {\r\n        url = url || GSRouter.DEFINITION_URL;\r\n        if (GSUtil.isStringNonEmpty(url)) {\r\n            GSRouter.#definition = await GSRouter.loadDefinition(url);\r\n        }\r\n        if (globalThis.GS_ROUTER_ENABLED) {\r\n            GSRouter.enable();\r\n        }\r\n        await GSEvents.waitPageLoad(null, null, null, globalThis.GS_ROUTER_WAIT);\r\n        GSRouter.#onHashChange();        \r\n    }\r\n\r\n    /**\r\n     * Enable routing\r\n     */\r\n    static enable() {\r\n        GSEvents.on(globalThis, null, 'hashchange', GSRouter.#onHashChange);\r\n    }\r\n\r\n    /**\r\n     * Disable routing\r\n     */\r\n    static disable() {\r\n        GSEvents.off(globalThis, null, 'hashchange', GSRouter.#onHashChange);\r\n    }\r\n\r\n    /**\r\n     * Register a single route with options\r\n     * @param {string} route Abstract url for a route\r\n     * @param {Object} options \r\n     */\r\n    static register(route, options) {\r\n        GSRouter.#definition[route] = options;\r\n    }\r\n\r\n    /**\r\n     * Unregister a single route\r\n     * @param {string} route \r\n     */\r\n    static unregister(route) {\r\n        delete GSRouter.#definition[route];\r\n    }\r\n\r\n    /**\r\n     * Get URL hashbang without hash\r\n     */\r\n    static get hash() {\r\n        return location.hash.slice(1);\r\n    }\r\n\r\n    /**\r\n     * Return routing definition object\r\n     */\r\n    static get definition() {\r\n        return GSData.deepClone(GSRouter.#definition);\r\n    }\r\n\r\n    static #onHashChange() {\r\n        const def = GSRouter.#definition[GSRouter.hash];\r\n        if (!def) {\r\n            return GSLog.warn(null, `No routing definition found for: ${GSRouter.hash}`);\r\n        }\r\n        const el = GSDOM.fromJson(def);\r\n        const px = GSAttributeHandler.proxify(el);\r\n        GSAttributeHandler.process(px);\r\n    }\r\n\r\n    static {\r\n        globalThis.GS_ROUTER_ENABLED = true;\r\n        globalThis.GS_ROUTER_WAIT = 2000;\r\n        GSRouter.initialize();        \r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n *  Linear data structure following doubly linked list order of operations.\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = this.create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item;\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            };\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    /**\r\n     * Reset the registry\r\n     */\r\n    resetRegistry() {\r\n        this.#handlers.clear();\r\n        this.#map.clear();\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        GSUtil.asArray(val).forEach(o => o[GSAbstractReadWrite.#SELECT] = true);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[GSAbstractReadWrite.#SELECT];\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        const me = this;        \r\n        return GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return val ? val[GSAbstractReadWrite.#SELECT] === true : false;\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n    /**\r\n     * Reset the abstract read/write handler\r\n     */\r\n    reset() {\r\n        this.#processors = null;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Reset the read/write handler\r\n     */\r\n    reset() {\r\n        this.#src = '';\r\n        this.#headers = {};\r\n        this.#reader = 'GET';\r\n        this.#writer = 'POST';\r\n        this.#action = '';\r\n        this.#mode = '';\r\n        this.#key = null;\r\n        this.#skip = 0;\r\n        this.#limit = 0;\r\n        this.#sort = [];\r\n        this.#filter = [];\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Reset the cached read/write handler\r\n     */\r\n    reset() {\r\n        this.clear();\r\n        super.reset();\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree node\r\n     */\r\n    reset() {\r\n        this.#multi = false;\r\n        this.#opened = false;\r\n        this.#focused = false;\r\n        this.#selected = false;\r\n        this.#focusedNode = undefined;\r\n        this.#selectedNode = undefined;\r\n        this.#controllers = undefined;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree data\r\n     */\r\n    resetData() {\r\n        this.#data = TreeNode.root;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n};\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n};\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descriptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all gettable properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocapitalizeTypes = ['', 'none', 'off', 'on', 'sentences', 'words', 'characters'];\r\n\r\nexport const autocapitalize = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocapitalizeTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocompleteTypes = ['', 'off', 'on'];\r\n\r\nexport const autocomplete = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocompleteTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocorrectTypes = ['', 'on', 'off'];\r\n\r\nexport const autocorrect = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocorrectTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReset(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'desktop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const InputTypes = [\r\n   { type: 'checkbox', ignore: true},\r\n   { type: 'radio', ignore: true},\r\n   { type: 'switch', ignore: true},\r\n   { type: 'range', ignore: true},\r\n   { type: 'number', native: true},\r\n   { type: 'email', native: true},\r\n   { type: 'url',  native: true},\r\n   { type: 'file', native: true}, \r\n   { type: 'text'},\r\n   { type: 'password'}\r\n];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.filter(o => o.type === newVal).length === 1;\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg', 'extra' : 'xl' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.detach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf() && me.#target) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.store?.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.store?.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.store?.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.store?.clearSelected(data);\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    storage?.on('select', me.#selectCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n    storage?.off('select', me.#selectCallback);\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #language;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#language = host.language;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#language !== me.#host?.language) {\r\n      me.#language === me.#host?.language;\r\n      me.updateLanguage(me.#language);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#language) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#template = TemplateController.#cache.get(ref);      \r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#template) {\r\n      this.#host.removeController(this);\r\n      me.#host.templateInjected?.();\r\n    } \r\n\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    let template = null;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      template = TemplateController.#cache.get(ref);\r\n    }\r\n    if (!template) {\r\n      template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n      if (cacheable) {\r\n        TemplateController.#cache.set(ref, template);\r\n      }       \r\n    }\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      if (typeof e.target.assignedElements === 'function') {\r\n        e.target.assignedElements().forEach(el => {\r\n          el.onSlotInjected?.(e.target);\r\n        });\r\n      }\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    language: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.language = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);    \r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        me.#dataController ??= new DataController(me);\r\n        me.#dataController.relink?.();\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1) {\r\n    return GSDOM.closest(this, query, levels);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.language, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment ?? '');\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol ?? '');\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is genrated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    if (!e.target.isNav) return;\r\n    const me = this;\r\n    if(e.relatedTarget?.isNav) {\r\n      me.#focus(e.target)\r\n    } else {\r\n      me.selected?.focus();\r\n    }\r\n\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReset(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static styles = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    editable: { type: Boolean },\r\n    range: { type: Number },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n  }\r\n\r\n  #date;\r\n  #selected;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.day = 1;\r\n    me.#selected = new GSDate();\r\n    me.#date.language = GSUtil.language;\r\n    me.#selected.language = GSUtil.language;\r\n    \r\n    me.language = GSUtil.language;\r\n    me.day = me.#selected.day;\r\n    me.month = me.#selected.month;\r\n    me.year = me.#selected.year;\r\n    \r\n    me.editable = false;\r\n    me.range = 5;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me = this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me = this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    }\r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.language);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.day = 1;\r\n    me.#date.month = me.month;\r\n    me.#date.year = me.year;\r\n    me.#date.day = me.day;\r\n    me.#date.language = me.language;\r\n\r\n    const week = GSDate.dayList(true, me.language).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.#date.month;\r\n    me.#selected.year = me.#date.year;\r\n    me.#selected.day = me.#date.day;\r\n    me.#selected.language = me.#date.language;\r\n\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.language = me.#date.language;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.language = me.language;\r\n    const list = me.#date.build(me.language);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#selected) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c2} ${c1} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.language);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n\r\n    const me = this;\r\n\r\n    const options = [];\r\n    let minYear = me.minYear;\r\n    let maxYear = me.maxYear;\r\n\r\n    if (me.range > 0) {\r\n      const year = new GSDate().year;\r\n      minYear = year - me.range;\r\n      maxYear = year + me.range;\r\n      me.#optionsHTML(options, minYear, maxYear);\r\n    }\r\n\r\n    if (!me.editable) {\r\n      return html`<select @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" data-gs-min=\"${minYear}\" data-gs-max=\"${maxYear}\">${options}</select>`;\r\n    }\r\n\r\n    const isList = me.editable && me.range && options.length > 0;\r\n    const listID = isList ? GSID.next : null;\r\n    const list = isList ? html`<datalist id=\"${listID}\">${options}</datalist>` : '';\r\n\r\n    return html`<input name=\"year\" \r\n      type=\"number\" \r\n      list=\"${ifDefined(listID)}\"\r\n      class=\"year ${me.cssYear}\" \r\n      @change=\"${me.#onYear}\" \r\n      min=\"${minYear}\" \r\n      max=\"${maxYear}\"\r\n      value=\"${me.#date.getFullYear()}\">\r\n      ${list}`;\r\n  }\r\n\r\n  #optionsHTML(options, minYear = 0, maxYear = 0) {\r\n    const me = this;\r\n    let val = minYear;\r\n    while (val <= maxYear) {\r\n      if (me.editable) {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>`);\r\n      } else {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>${val}</option>`);\r\n      }\r\n      val++;\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    const me = this;\r\n    const day = GSUtil.asNum(e.target.dataset.day, me.day);\r\n\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.month;\r\n    me.#selected.year = me.year;\r\n    me.#selected.day = day;\r\n\r\n    me.day = day;\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    const yearEl = e?.target;\r\n    if (yearEl?.validity.valid) {\r\n      this.year = yearEl.value;\r\n    }\r\n  }\r\n\r\n  #onKey(e) {\r\n    // console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                language=\"${ifDefined(me.language)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    language=\"${ifDefined(this.language)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;        \r\n        me.auto = true;\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n            me.target = \"tbody\";\r\n            me.filter = \"[selected]\";\r\n            me.offset =\"4\";\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n          }\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler();\r\n        me.#handler?.enable();\r\n        me.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { size, SizeTypes } from '../properties/size.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{--bs-modal-width: 500px;width:var(--bs-modal-width);outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    size : size,\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, },\r\n    confirmText: { reflect: true, },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { \r\n      'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined \r\n    };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true,\r\n      [`modal-${size}`]: size ? true : false\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let  sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;     \r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null :  GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n\r\n    name: { reflect : true},\r\n    rel: { reflect : true},\r\n    acceptCharset : {reflect : true, attribute: 'accept-charset'},\r\n    autocapitalize: { reflect : true},\r\n    autocomplete: { reflect : true},\r\n\r\n    action: { reflect : true},\r\n    enctype: { reflect : true},\r\n    method: { reflect : true},\r\n    novalidate: { reflect : true, type: Boolean},\r\n    target: { reflect : true},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #formRef = createRef();\r\n  #lastState = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n    this.disabled = false;\r\n    this.method = \"dialog\";\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      id=\"${ifDefined(me.name)}\"\r\n      name=\"${ifDefined(me.name)}\"\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @blur=\"${me.#onBlur}\"\r\n      @invalid=\"${me.#onInvalid}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"${me.method}\"\r\n      \r\n      rel=\"${ifDefined(me.rel)}\"\r\n      acceptCharset=\"${ifDefined(me.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n      action=\"${ifDefined(me.action)}\"\r\n      enctype=\"${ifDefined(me.enctype)}\"\r\n      target=\"${ifDefined(me.target)}\"\r\n\r\n      ?novalidate=\"${me.novalidate}\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    me.dataController?.read();\r\n  }\r\n  \r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    const me = this;\r\n    me.#doFilter(me.#filterField);\r\n    me.invalid[0]?.focus();\r\n\t}  \r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      me.elements.forEach(el => GSDOM.reset(el));\r\n      await me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  #button(type) {\r\n    return this.query(`button[type=\"${type}\"]`, true);\r\n  }\r\n\r\n  get submitButton() {\r\n    return this.#button('submit');\r\n  }\r\n  \r\n  get resetButton() {\r\n    return this.#button('reset');\r\n  }\r\n  \r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n  \r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.#childrens(true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get invalid() {\r\n    return this.inputs.filter(el => !el.validity.valid);\r\n  }\r\n\r\n  get asJSON() {\r\n    const data = {};\r\n    this.elements.forEach(field => GSDOM.fromElement2Object(field, data));    \r\n    return data;\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    //me.form.reset(); do not use, create a circular calls\r\n    me.elements.forEach(field => GSDOM.fromObject2Element(field, data));    \r\n    me.#doFilter(me.#filterField);\r\n    me.validate();\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity.valid).length === 0;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity() && \r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.checkValidity()).length === 0;;\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity?.valid)\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    let isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    isValid = me.onValidate(isValid);\r\n    me.#toggle(isValid);\r\n    me.#notify(isValid);\r\n    me.invalid[0]?.focus();\r\n    return isValid;\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  /**\r\n   * Called only if field is valid and changed\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called only if field is invalid\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldInvalid(el) {\r\n\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if(field) me.onFieldInvalid(field);\r\n    me.#toggle(false);\r\n    me.#notify(false);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#toggle(me.isValid);\r\n    me.#notify(me.isValid);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if (field) {\r\n      me.#doFilter(field);\r\n      me.handle(e);\r\n      if (field.validity.valid) me.onFieldChange(field);\r\n    }\r\n    me.#toggle(me.isValid);\r\n  }\r\n\r\n  #notify(isValid = false) {\r\n    const me = this;\r\n    if (me.#lastState === isValid) return;\r\n    me.#lastState = isValid;\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    me.emit('form', data, true, true);    \r\n  }\r\n\r\n  #toggle(isValid = false) {\r\n    const me = this;\r\n    const btn = me.submitButton;\r\n    if (btn) btn.disabled = !isValid;\r\n  }  \r\n\r\n  #findField(e) {\r\n    if (!(e instanceof Event)) return;\r\n    const me = this;\r\n    let field = e.target;\r\n    if (e.composed) {\r\n      field = e.composedPath()\r\n        .filter(el => me.#isField(el))\r\n        .pop();\r\n    }\r\n    if(!me.#isField(field)) field = me.#findField(e.detail);\r\n    return me.#isField(field) ? field : null;\r\n  }\r\n\r\n  #isField(el) {\r\n    return el?.matches?.('input,select,textarea');\r\n  }\r\n\r\n  /**\r\n   * Filter field disabled status\r\n   * @param {HTMLInputElement} field \r\n   */\r\n  #doFilter(field) {\r\n    \r\n    if(!field) return;\r\n    \r\n    const me = this;\r\n\r\n    const value = me.#fieldValue(field);\r\n    const fldName = me.dataset.gsfDisable;\r\n    const fldVal = me.dataset.gsfValue;\r\n    const matched = fldName && field.name === fldName;\r\n    const flag = matched && value === fldVal;\r\n    if (matched) {\r\n      me.elements\r\n        .filter(el => el.name != fldName)\r\n        .forEach(el => el.disabled = flag);\r\n    } \r\n\r\n  }\r\n\r\n  /**\r\n   * Initialy, field might not be set just yet (if it is selectable),\r\n   * so we need to take valeu fro mgs-item definition\r\n   * @param {*} field \r\n   * @returns \r\n   */\r\n  #fieldValue(field) {\r\n    let value = field.tagName === 'GS-FORM-GROUP' ? field.field?.value : field.value;\r\n    if (field.selectable && GSUtil.isNull(value)) {\r\n      value = GSAttr.get(this.query('gs-item[selected]'), 'value');\r\n    }\r\n    return value;\r\n  }\r\n\r\n  #childrens(shadow = false) {\r\n    return this.queryAll('input,select,output,textarea', shadow);\r\n  }\r\n\r\n  get #filterField() {\r\n    const me = this;\r\n    return me.elements.filter(el => el.name === me.dataset.gsfDisable).pop();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0, autocapitalize, autocorrect, autocomplete } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static #SELECTOPT = {\r\n    name : {},\r\n    value : {},\r\n    selected : {type: Boolean}\r\n  }\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    label: {},\r\n    description: {},\r\n    placeholder: {reflect: true},\r\n\r\n    pattern: {},\r\n    mask: {},\r\n    \r\n    form: {},\r\n    wrap: {},\r\n    spellcheck: {},\r\n\r\n    type: { ...inputType },\r\n    name: {},\r\n    list: {},\r\n    accept: {},   \r\n    value: {},\r\n\r\n    lang: {reflect: true},\r\n    title: {reflect: true},\r\n    rows: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    cols: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { ...autocapitalize, reflect: true },\r\n    autocorrect: { ...autocorrect, reflect: true },\r\n    autocomplete: { reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    invalidMessage: {reflect: true, attribute: 'invalid-message' },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.rows = 0;\r\n    this.cols = 0;\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.invalidMessage = 'Invalid input',\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = me.formComponent;\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n\r\n    if (!me.form && form) me.form = form.name;\r\n\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    }      \r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    me.#onRange();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local language=\"${ifDefined(me.language)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    if (me.#isTextArea) return me.#textArea(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);    \r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map( el => html`<option value=\"${el.value}\" ?selected=${el.selected}>${el.name || el.innerText || el.value }</option>`);\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    return html`<select ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            form=\"${ifDefined(me.form)}\"\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n            ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #isTextArea() {\r\n    const me = this;\r\n    return (me.rows > 0 || me.cols > 0) && me.type === 'text';\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  get #isBlock() {\r\n    return this.block || this.formComponent?.block || false;\r\n  }\r\n\r\n  get #isBeep() {\r\n    return this.beep || this.formComponent?.beep || false;\r\n  }\r\n  \r\n  #timeout() {\r\n    return this.timeout || this.formComponent?.timeout || 0;\r\n  }\r\n\r\n  #textArea(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const title = me.title ? me.translate(me.title) : null;\r\n\r\n    return html`<textarea  is=\"gs-ext-text\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)}\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            cols=\"${me.cols}\"\r\n            rows=\"${me.rows}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            spellcheck=\"${ifDefined(me.spellcheck)}\" \r\n            wrap=\"${ifDefined(me.wrap)}\" \r\n            form=\"${ifDefined(me.form)}\" \r\n            name=\"${name}\" \r\n            value=\"${ifDefined(value)}\"\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            title=\"${ifDefined(title)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"            \r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"      \r\n      ></textarea>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    let title = me.isRange ? me.value : me.title;\r\n    title = title ? me.translate(me.title) : title;\r\n\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const description = me.description ? me.translate(me.description) : null;\r\n    \r\n    me.#initStyle();\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            form=\"${ifDefined(me.form)}\"\r\n            value=\"${ifDefined(value)}\"\r\n            title=\"${ifDefined(title)}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            description=\"${ifDefined(description)}\"\r\n\r\n            .multipattern=\"${ifDefined(me.#patterns)}\"\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) { \r\n    this.emit('input', e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    this.emit('blur', e, true, true);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isRange) me.value = e.target?.value;\r\n    me.emit('change', e, true, true);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.emit('invalid', e, true, true);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field?.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  get formComponent() {\r\n    return GSDOM.closest(this, 'gs-form');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n// TODO: Make generic JSON to template generator, \r\n// then create string template and apply it to the lit html function.\r\n// Use all properties exstractor from super components and use type definition for bool proeprties.\r\n// Use xtype to define component type and use it to create component instance.\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const data = me.data || {};\r\n    const items = me.data?.items || [];\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n\r\n      .storage=\"${ifDefined(data.storage)}\" \r\n      ?disabled=${ifDefined(data.disabled)}.\r\n      .data=\"${ifDefined(data.data)}\"\r\n      \r\n      .name=\"${ifDefined(data.name)}\"\r\n      .rel=\"${ifDefined(data.rel)}\"\r\n      .acceptCharset=\"${ifDefined(data.acceptCharset)}\"\r\n      .autocapitalize=\"${ifDefined(data.autocapitalize)}\"\r\n      .autocomplete=\"${ifDefined(data.autocomplete)}\"\r\n\r\n      .action=\"${ifDefined(data.action)}\"\r\n      .enctype=\"${ifDefined(data.enctype)}\"\r\n      .method=\"${ifDefined(data.method)}\"\r\n      ?novalidate=\"${ifDefined(data.novalidate)}\"\r\n      .target=\"${ifDefined(data.target)}\"\r\n\r\n      ?block=\"${ifDefined(data.block)}\"\r\n      ?beep=\"${ifDefined(data.beep)}\"\r\n      .timeout=\"${ifDefined(data.timeout)}\"\r\n\r\n      ?flat=\"${ifDefined(data.flat)}\"\r\n      ?rtl=\"${ifDefined(data.rtl)}\"\r\n      ?hide=\"${ifDefined(data.hide)}\"\r\n      ?padding=\"${ifDefined(data.padding)}\"\r\n      ?margin=\"${ifDefined(data.margin)}\"\r\n      ?rounded=\"${ifDefined(data.rounded)}\"\r\n      ?bordered=\"${ifDefined(data.bordered)}\"\r\n      ?shadow=\"${ifDefined(data.shadow)}\"\r\n      ?keep=\"${ifDefined(data.keep)}\"\r\n      .css=\"${ifDefined(data.css)}\"\r\n      .theme=\"${ifDefined(data.theme)}\"\r\n      .os=\"${ifDefined(data.os)}\"\r\n      .browser=\"${ifDefined(data.browser)}\"\r\n      .language=\"${ifDefined(data.language)}\"\r\n      .environment=\"${ifDefined(data.environment)}\"\r\n      .orientation=\"${ifDefined(data.orientation)}\"\r\n      .protocol=\"${ifDefined(data.protocol)}\"\r\n      .template=\"${ifDefined(data.template)}\"      \r\n      >\r\n      <slot>\r\n        ${repeat(items, (item) => me.#renderFormGroup(me.data, item))}\r\n      </slot>\r\n    </gs-form>`;\r\n  }\r\n\r\n  #renderFormGroup(definition, item) {\r\n    return html`<gs-form-group \r\n      .icon=\"${ifDefined(item.icon)}\"\r\n      .layout=\"${ifDefined(item.layout)}\"\r\n      .placement=\"${ifDefined(item.placement)}\"\r\n\r\n      .label=\"${ifDefined(item.label)}\"\r\n      .description=\"${ifDefined(item.description)}\"\r\n      .placeholder=\"${ifDefined(item.placeholder)}\"\r\n      \r\n      .pattern=\"${ifDefined(item.pattern)}\"\r\n      .mask=\"${ifDefined(item.mask)}\"\r\n\r\n      .form=\"${ifDefined(item.form)}\"\r\n      .formaction=\"${ifDefined(item.formaction)}\"\r\n      .formenctype=\"${ifDefined(item.formenctype)}\"\r\n      .formmethod=\"${ifDefined(item.formmethod)}\"\r\n      .formnovalidate=\"${ifDefined(item.formnovalidate)}\"\r\n      .formtarget=\"${ifDefined(item.formtarget)}\"\r\n      .wrap=\"${ifDefined(item.wrap)}\"\r\n      .spellcheck=\"${ifDefined(item.spellcheck)}\"\r\n\r\n      .type=\"${ifDefined(item.type)}\"\r\n      .name=\"${ifDefined(item.name)}\"\r\n      .list=\"${ifDefined(item.list)}\"\r\n      .accept=\"${ifDefined(item.accept)}\"\r\n      .value=\"${ifDefined(item.value)}\"\r\n      \r\n      .lang=\"${ifDefined(item.lang)}\"\r\n      .title=\"${ifDefined(item.title)}\"\r\n      .cols=\"${ifDefined(item.cols)}\"\r\n      .rows=\"${ifDefined(item.rows)}\"\r\n      .step=\"${ifDefined(item.step)}\"\r\n      .min=\"${ifDefined(item.min)}\"\r\n      .max=\"${ifDefined(item.max)}\"\r\n      .maxlength=\"${ifDefined(item.maxlength)}\"\r\n      .minlength=\"${ifDefined(item.minlength)}\"\r\n\r\n      ?reverse=\"${ifDefined(item.reverse)}\"\r\n      ?selectable=\"${ifDefined(item.selectable)}\"\r\n\r\n      ?autoid=\"${ifDefined(item.autoid)}\"\r\n      ?autocopy=\"${ifDefined(item.autocopy)}\"\r\n      ?autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      .autocapitalize=\"${ifDefined(item.autocapitalize)}\"\r\n      .autocorrect=\"${ifDefined(item.autocorrect)}\"\r\n      .autocomplete=\"${ifDefined(item.autocomplete)}\"\r\n\r\n      ?autofocus=\"${ifDefined(item.autofocus)}\"\r\n      ?autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      ?disabled=\"${ifDefined(item.disabled)}\"\r\n      ?checked=\"${ifDefined(item.checked)}\"\r\n      ?multiple=\"${ifDefined(item.multiple)}\"\r\n      ?reveal=\"${ifDefined(item.reveal)}\"\r\n      ?readonly=\"${ifDefined(item.readonly)}\"\r\n      ?required=\"${ifDefined(item.required)}\"\r\n\r\n      .invalidMessage=\"${ifDefined(item.invalidMessage)}\"  \r\n      \r\n      ?block=\"${ifDefined(item.block || definition.block)}\"\r\n      ?beep=\"${ifDefined(item.beep || definition.beep)}\"\r\n      ?timeout=\"${ifDefined(item.timeout || definition.timeout)}\"\r\n\r\n      ?flat=\"${ifDefined(item.flat)}\"\r\n      ?rtl=\"${ifDefined(item.rtl)}\"\r\n      ?hide=\"${ifDefined(item.hide)}\"\r\n      ?padding=\"${ifDefined(item.padding)}\"\r\n      ?margin=\"${ifDefined(item.margin)}\"\r\n      ?rounded=\"${ifDefined(item.rounded)}\"\r\n      ?bordered=\"${ifDefined(item.bordered)}\"\r\n      ?shadow=\"${ifDefined(item.shadow)}\"\r\n      ?keep=\"${ifDefined(item.keep)}\"\r\n      .css=\"${ifDefined(item.css)}\"\r\n      .theme=\"${ifDefined(item.theme)}\"\r\n      .os=\"${ifDefined(item.os)}\"\r\n      .browser=\"${ifDefined(item.browser)}\"\r\n      .language=\"${ifDefined(item.language || definition.language)}\"\r\n      .environment=\"${ifDefined(item.environment)}\"\r\n      .orientation=\"${ifDefined(item.orientation)}\"\r\n      .protocol=\"${ifDefined(item.protocol)}\"\r\n      .template=\"${ifDefined(item.template)}\">\r\n      </gs-form-group>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName);\r\n  }\r\n\r\n  get generated() {\r\n    const me = this;\r\n    return this.queryAll(`${me.childTagName}[generated]`);\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    if (me.multiple) return me.queryAll(`${me.childTagName}[active]`);\r\n    return me.query(`${me.childTagName}[active]`);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    tooltip: {} // Add tooltip property\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\"\r\n     title=\"${ifDefined(me.tooltip)}\"> \r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:space=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewBox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.pages = 5;\r\n    me.labelFirst = '&laquo;';\r\n    me.labelLast = '&raquo;';\r\n    me.labelNext = '&rsaquo;';\r\n    me.labelPrevious = '&lsaquo;';\r\n    if (me.#isInTable) {\r\n      me.slot = \"extra\";\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  get #isInTable() {\r\n    return this.parentComponent?.tagName === 'GS-TABLE';\r\n  }\r\n  \r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTarget(); // Fixed typo: #attachTaraget -> #attachTarget\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n    me.#postPopup();\r\n  }\r\n\r\n  willUpdate(changedProperties) {\r\n    if (changedProperties.has('opened')) {\r\n      this.#postPopup();\r\n    }\r\n    return super.willUpdate(changedProperties); \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #postPopup() {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {display: me.opened ? '' : 'none'}); \r\n  }\r\n\r\n  #attachTarget() { // Fixed typo: #attachTaraget -> #attachTarget\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    colspan: {},\r\n    storage: {},\r\n    ref: {}, // if set; use storage or gs-items to map ref value to virtual field\r\n    filter: { type: Boolean },\r\n    hidden: { type: Boolean },\r\n    fixed: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input, th > select', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n\r\n    let mask = '';\r\n    const hasSub = cfg.childElementCount > 0;\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.language || GSUtil.language);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    if (hasSub && cfg.fixed) {\r\n      return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n          <select is=\"gs-ext-select\" .index=${index}\r\n              class=\"form-select ${css}\" \r\n              name=\"${cell}\"> \r\n              ${me.#renderOption(cfg)}\r\n              </select>\r\n          </th>`;\r\n    }\r\n\r\n    let listid = '';\r\n    let list = '';\r\n    if (hasSub) {\r\n      listid = `${me.id}-list-${index}`;\r\n      list = html`<datalist id=\"${listid}\">${me.#renderOption(cfg)}</datalist>`;\r\n    } \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        ${list}\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            list=\"${ifDefined(listid)}\"\r\n            name=\"${cell}\" \r\n            placeholder=\"${ifDefined(cfg.title)}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderOption(cfg) {\r\n    if (cfg.childElementCount == 0) return '';\r\n    const sub = GSItem.proxify(cfg);\r\n    return sub.map(el => html`<option value=\"${el.value}\">${cfg.fixed ? el.map : ''}</option>`);\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" \r\n        colspan=\"${ifDefined(cfg.colspan)}\"\r\n        width=\"${ifDefined(cfg?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const selected = me.dataController.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => me.#renderCell(cell, i))}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderCell(cell, index) {\r\n    const cfg = this.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    return html`<td class=\"text-${cfg?.align}\" colspan=\"${ifDefined(cfg.colspan)}\" ><span>${cell}</span></td>`;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, language : cfg?.language };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context')) return;\r\n    \r\n    const record = me.data[tr.index];\r\n    const isSelected = me.dataController.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.dataController.removeSelected(record);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      if (isSelected) {\r\n        me.dataController.clearSelected(me.data);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else {\r\n      me.dataController.clearSelected(me.data);\r\n      me.dataController.addSelected(record);\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('click', me.#clickCallback);\r\n    me.#host.on?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('click', me.#clickCallback);\r\n    me.#host.off?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #changeCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.initRules();\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('change', me.#changeCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#buildSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#buildAccept();\r\n    me.#toPattern();\r\n  }\r\n\r\n  checkValidity() {  \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Mask not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n    \r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n\r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n\r\n    let isMatch = true;\r\n    if (me.#pattern) {\r\n      me.#pattern.lastIndex = 0;\r\n      isMatch = me.#pattern.test(me.raw);\r\n    }\r\n\r\n    return isMatch;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format();\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#format();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n        .map(v => maskType[v.toLowerCase()])\r\n        .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      }\r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format() {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    const val = me.#clean(me.#host.raw);\r\n    me.value = val.join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, (c, i) => input[i] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = me.#slots.has(v) ? maskType[v.toLowerCase()] : null;\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle multiple patterns\r\n */\r\nexport class MultipatternController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n  \r\n  checkValidity() {    \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Pattern not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get patterns() {\r\n    const obj = this.#host.multipattern;\r\n    if (obj instanceof RegExp) return [obj];\r\n    if (Array.isArray(obj)) return obj.filter(o => o instanceof RegExp);\r\n    throw new Error('Invalid multipattern value. Expected RegExp object or array.');\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    let isMatch = true;\r\n    for (const r of me.patterns) {\r\n      isMatch = r.test(me?.value);\r\n      if (isMatch) break;\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password to support keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for options atribute (combo and data lists)\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class InteractiveController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get component() {\r\n    return this.#host\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    return this.#host;\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    //return this.#host.owner;\r\n    return this.#host.form || GSDOM.closest(this.#host, 'form');\r\n  }\r\n\r\n  get formElements() {\r\n    return GSDOM.formElements(this.owner, true);\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me.#host)\r\n            .filter(el => el !== me.filter)            \r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    me.#host.disabled = false;\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, 'option').forEach(el => me.#togleOption(el, true));\r\n    GSDOM.queryAll(list, filter).forEach(el => me.#togleOption(el, false));\r\n\r\n  }\r\n\r\n  #togleOption(el, value) {\r\n      GSAttr.toggle(el, 'disabled', value);\r\n      GSDOM.toggleClass(el, 'd-none', value);\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    this.formElements.forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ComboController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    return this.component;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ListController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.component.list) return me.component.list;\r\n    const list = GSAttr.get(me.component, 'list');\r\n    return GSDOM.getByID(me.owner, list);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSBeep } from \"../../../base/GSBeep.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle for input/testarea to support validity checkups\r\n */\r\nexport class ValidityController {\r\n\r\n  #host;\r\n\r\n  #invalidCallback;\r\n  #blurCallback;\r\n  #changeCallback;\r\n  #focusCallback;\r\n  #inputCallback;\r\n\r\n  #processing;  \r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#processing = false;\r\n    me.#host = host;\r\n    me.#invalidCallback = me.#onInvalid.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('invalid', me.#invalidCallback);\r\n    me.#host.on?.('blur', me.#blurCallback);\r\n    me.#host.on?.('focus', me.#focusCallback);\r\n    me.#host.on?.('change', me.#changeCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('invalid', me.#invalidCallback);\r\n    me.#host.off?.('blur', me.#blurCallback);\r\n    me.#host.off?.('focus', me.#focusCallback);\r\n    me.#host.off?.('change', me.#changeCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  reset() {\r\n    this.setCustomValidity('');\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  async report() {    \r\n    const me = this;\r\n    if (me.#processing) return;\r\n    me.#processing = true;\r\n    me.reportValidity();\r\n    if (me.isVisible) {\r\n      if (me.block) me.focus();\r\n      if (me.beep && me.isTyped) await me.#beep();\r\n    }\r\n    await GSUtil.timeout(me.timeout);\r\n    me.setCustomValidity(me.isValid ? '' : ' ');\r\n    me.#togglUI(me.isValid);\r\n    me.#processing = false;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  focus() {\r\n    return this.#host.focus();\r\n  }\r\n  \r\n  get isTyped() {\r\n    return GSUtil.asBool(this.#host.dataset.typed);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  get beep() {\r\n    return this.#host.beep;\r\n  }\r\n\r\n  get block() {\r\n    return this.#host.block;\r\n  }\r\n\r\n  get timeout() {\r\n    return this.#host.timeout;\r\n  }\r\n\r\n  get isVisible() {\r\n    return GSDOM.isVisible(this.#host);\r\n  }\r\n\r\n  #onInput(e) {\r\n    this.#host.dataset.typed = true;\r\n    this.#processing = false;\r\n  }\r\n\r\n  #onFocus(e) {\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.report();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if(me.checkValidity()) {\r\n      me.reset();\r\n    }\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    if (me.isValid) {\r\n      me.reset();\r\n    } else {\r\n      me.checkValidity();\r\n    }\r\n  }\r\n\r\n  #togglUI(isValid) {\r\n    GSDOM.toggleClass(this.#host, 'is-invalid', !isValid);\r\n  }\r\n\r\n  #beep() {\r\n    return GSBeep.beep(100, 1200, 150, 'triangle');\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    #isConnected = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#isConnected = false;\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { ComboController } from \"./controllers/ComboController.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n    #comboController = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#comboController ??= new ComboController(this);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n        this.#controllers?.forEach((c) => c.hostUpdated?.());\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n        me.on('reset', me.#onReset);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n        GSEvents.detachListeners(me);\r\n    }\r\n        \r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.resetSelect(this);\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    #onReset(e) {\r\n        this.reset();\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.detachListeners(this);\r\n    }\r\n        \r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { MultipatternController } from './controllers/MultipatternController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\nimport { ValidityController } from './controllers/ValidityController.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various features such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true },\r\n    multipattern: { type : Object},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #multiPatternController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n  #validityController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.block = false;\r\n    this.beep = false;\r\n    this.timeout = 0;\r\n    this.#copyselect = new CopySelectController(this);\r\n    this.#validityController = new ValidityController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n\r\n    if (changed.has('mask') && me.mask && me.type === 'text') {\r\n      me.placeholder = me.mask;\r\n      me.#maskController ??= new MaskController(me);\r\n    }\r\n\r\n    if (changed.has('multipattern')) {\r\n      const isMulti = Array.isArray(me.multipattern) && me.multipattern.length > 0;\r\n      const isType = ['text', 'password'].includes(me.type);\r\n      if (isMulti && isType) {\r\n        me.#multiPatternController ??= new MultipatternController(me);\r\n      }\r\n    }\r\n\r\n    if (me.list) {\r\n      me.#listController ??= new ListController(me);\r\n    }\r\n\r\n    switch (me.type) {\r\n      case 'text':\r\n        me.#textController ??= new TextController(me);\r\n        break;\r\n      case 'password':\r\n        me.#passwordController ??= new PasswordController(me);\r\n        break;\r\n      case 'number':\r\n        me.#numberController ??= new NumberController(me);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    if (me.autofocus) me.focus();    \r\n    const data = me.formComponent?.data;\r\n    if (data) GSDOM.fromObject2Element(me, data);\r\n    me.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  checkValidity() {\r\n    const me = this;\r\n    me.#validityController.reset();\r\n    super.checkValidity();\r\n    me.#multiPatternController?.checkValidity();\r\n    me.#maskController?.checkValidity();\r\n    super.checkValidity();\r\n    return me.validity.valid;\r\n  }\r\n\r\n  reportValidity() {\r\n    super.reportValidity();\r\n    this.#validityController.report();\r\n  }\r\n\r\n  reset() {\r\n    GSDOM.reset(this);\r\n  }\r\n\r\n  get formComponent() {\r\n    return this.closest('gs-form');\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = this.mask === val ? '' : val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { CopySelectController } from \"./controllers/CopySelectController.mjs\";\r\nimport { ValidityController } from \"./controllers/ValidityController.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-text\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLTextAreaElement}\r\n */\r\nexport class GSTextArea extends HTMLTextAreaElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-text', GSTextArea, { extends: 'textarea' });\r\n        Object.seal(GSTextArea);\r\n    }\r\n\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n\r\n    #copyselect;\r\n    #validityController;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#copyselect = new CopySelectController(this);\r\n        this.#validityController = new ValidityController(this);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#controllers?.forEach((c) => c.hostUpdated?.());\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    checkValidity() {\r\n        const me = this;\r\n        me.#validityController.reset();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        super.reportValidity();\r\n        this.#validityController.report();\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.reset(this);\r\n    }\r\n    \r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        this.value = await GSLoader.loadSafe(url, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n        maxFileSize: { reflect: true, attribute: 'max-file-size', type: Number }, // New property\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n        this.maxFileSize = 0; // Default to 0, meaning no limit\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        // Filter out files that exceed the maxFileSize\r\n        const validAttachments = me.maxFileSize > 0 \r\n            ? attachments.filter(a => a.file.size <= me.maxFileSize)\r\n            : attachments;\r\n\r\n        const accepted = me.emit('accept', { attachments: validAttachments }, true, false, true);\r\n        if (accepted && validAttachments.length) {\r\n            me.#accept(validAttachments);\r\n            me.emit('accepted', { attachments: validAttachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        language: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.language = GSUtil.language;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.language);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        format: {},\r\n        language: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = navigator.language;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.language, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.language = me.language;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        currency: {},\r\n        language: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.language, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" language=\"${me.language}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  /**\r\n   * Toggle selection state\r\n   */\r\n  toggleSelection() {\r\n    this.select(!this.selected);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.toggleSelection();\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        try {\r\n            const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n            const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n            me.data = data;\r\n            me.options = options;\r\n        } catch (error) {\r\n            GSLog.error(null, error);\r\n        }\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas?.getContext('2d');\r\n        if (ctx) {\r\n            me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n        } else {\r\n            GSLog.error(null, 'Failed to get canvas context');\r\n        }\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        try {\r\n            const data = await GSLoader.load(me.url);\r\n            if (!data) throw new Error(`Code URL ${me.url} unreachable!`);\r\n            me.#data = data;\r\n            me.#onHighlight(data);\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        try {\r\n            const response = me.#worker;\r\n            const blob = new Blob([response], { type: 'application/javascript' });\r\n            const blobURL = URL.createObjectURL(blob);\r\n            const worker = new Worker(blobURL);\r\n            worker.onmessage = me.#onMessage.bind(me);\r\n            worker.postMessage({ data: data, url: blobURL, append: append });\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        try {\r\n            const data = url ? await GSLoader.load(url) : null;\r\n            if (!data) throw new Error(`Code URL ${url} unreachable!`);\r\n            me.code = '';\r\n            me.#onLanguage(me.language);\r\n            me.code = data;\r\n        } catch (error) {\r\n            me.code = error.message;\r\n        }\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner?.getBoundingClientRect();\r\n            if (rect) {\r\n                me.#editor.layout({ width: rect.width, height: rect.height });\r\n            }\r\n        });\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","o","Array","isArray","isBool","isDate","isNumber","isString","min","max","Math","match","dft","language","sep","numberSeparator","extractNumber","replaceAll","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","isNull","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","isProxy","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","key","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","childElementCount","querySelector","fmt","style","fields","limit","sts","rec","filterRecord","isPrimitive","filterSimple","filterComplex","filterValue","primitive","found","flt","toCheck","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","shadow","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSelectElement","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","plain","definitions","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","for","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","properties","mergeObjects","template","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","dispatchEvent","Event","bubbles","composed","CustomEvent","detail","message","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","suspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","cancelable","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSTemplateCache","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSAttributeHandler","anchor","call","inject","property","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleSwap","handleInject","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleTemplate","field","form","isForm","HTMLFormElement","isField","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","handleContent","clean","useDef","definition","toHTML","applyContent","applyTemplate","clone","insertAdjacent","detach","off","parentComponent","DEFINITION","override","GSBeep","AudioContext","webkitAudioContext","audioContext","duration","frequency","volume","isAvailable","audioCtx","oscillatorNode","createOscillator","gainNode","createGain","connect","destination","gain","start","currentTime","stop","onended","isActive","hasBeenActive","userActivation","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","GSElement","tags","collect","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","object","GSQuery","instance","GSRouter","GS_ROUTER_URL","DEFINITION_URL","loadDefinition","GS_ROUTER_ENABLED","enable","waitPageLoad","GS_ROUTER_WAIT","onHashChange","route","deepClone","fromJson","px","process","initialize","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","Qe","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","resetRegistry","GSReadWriteRegistry","GSAbstractReadWrite","processors","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","addSelected","asArray","SELECT","removeSelected","clearSelected","getSelected","isSelected","GSReadWrite","reader","writer","mode","skip","TYPE","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReadWrite","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","resetData","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","AutocapitalizeTypes","autocapitalize","hasChanged","AutocompleteTypes","autocomplete","AutocorrectTypes","autocorrect","ButtonTypes","buttonType","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","extra","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","selectCallback","onSelect","write","storeID","firstPage","page","lastPage","nextPage","prevPage","storage","requestUpdate","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","onLanguage","OrientationController","hosts","onOrientation","TemplateController","lastRef","templateRef","schedule","templateInjected","isTplEl","cacheable","tasks","task","finally","ThemeController","updateTheme","updateThemeExt","SlotController","onSlotChanged","assignedElements","onSlotInjected","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","detachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","isGenerated","elementStyles","cssRule","setCSSProperty","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","isNav","relatedTarget","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","iconEl","animate","isReset","isSubmit","submit","hover","iconHtml","renderIcon","GSCalendarElement","editable","minYear","maxYear","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","optionsHTML","onYear","isList","listID","selectedIndex","yearEl","validity","valid","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","isInTable","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","lifoWriteRef","itemHolder","PROPERTIES","initLIFO","updateHandler","formatSort","formatFilter","isDebug","gsDebug","isCached","formated","save","verifyHandler","callOnceLifo","lifoReadRefCallback","lifoWriteRefCallback","lifoCall","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","onOpenChanged","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","simple","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","acceptCharset","enctype","novalidate","block","beep","formRef","lastState","onChange","onBlur","onInvalid","doFilter","filterField","elements","submitButton","resetButton","childrens","inputs","reportValidity","onValidate","disableInput","enableInput","onFieldChange","onFieldInvalid","findField","fieldValue","fldName","gsfDisable","fldVal","gsfValue","matched","selectable","GSFormGroupElement","layout","label","description","placeholder","mask","spellcheck","rows","cols","step","minLength","maxLength","autoid","autocopy","autoselect","reveal","readonly","required","invalidMessage","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","formComponent","SELECTOPT","onRange","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","selectHTML","isTextArea","fld","vertical","initStyle","listHTML","outerHTML","isBlock","isBeep","isSwitch","isCheckable","isFloating","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","renderFormGroup","formaction","formenctype","formmethod","formnovalidate","formtarget","maxlength","minlength","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","generated","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSNavElement","isTab","GSNavItemElement","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","cursor","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","onAuto","reposition","postPopup","popupFixed","panel","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","isAfter","tabs","renderTabs","panels","renderPanels","GSTableElement","colspan","hidden","fixed","filterType","cssFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","renderRecord","renderEmpty","renderHandler","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","hasSub","onFilter","renderOption","listid","icons","sortType","cells","remapRecord","renderCell","record","elementTofilter","column","getElementIndex","prepareSorter","isComplex","tr","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","changeCallback","initRules","onFocus","j","buildSlots","findIndex","buildAccept","toPattern","isMatch","setCustomValidity","setSelectionRange","substring","selectionStart","selectionEnd","lastIndex","maskType","chars","masks","special","MultipatternController","multipattern","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","InteractiveController","monitorCallback","blurCallback","onMonitor","onDataChange","hasUpdated","formElements","strict","isInList","togleEl","dataGroup","togleOption","isButtonElement","ComboController","ListController","ValidityController","invalidCallback","processing","togglUI","isTyped","report","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","comboController","setIf","onReset","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","multiPatternController","passwordController","numberController","textController","listController","validityController","isMulti","isType","GSTextArea","HTMLTextAreaElement","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","maxFileSize","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","validAttachments","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","toggleSelection","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}