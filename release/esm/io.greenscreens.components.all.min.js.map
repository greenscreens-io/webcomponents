{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/GSElement.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/NavItem.mjs","../../modules/components/Nav.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/data/TreeNode.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asNum(val = 0, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst safe = opt[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = opt[prop]?.default;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {} };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields) {\r\n        data = Array.isArray(data) ? data : [];\r\n        filter = Array.isArray(filter) ? filter : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (value?.toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            value = rec[flt.name];\r\n            if (flt.name) {\r\n                if (value instanceof Date) {\r\n                    found = found && GSData.matchDate(value, flt);\r\n                } else {\r\n                    found = found && ('' + value).toLocaleLowerCase().includes(match);\r\n                }\r\n            } else {\r\n                found = found && GSData.filterSimple(rec, flt.value);\r\n            }\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static matchDate(val, filter) {\r\n\r\n        if (!filter.value) return false;\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return val.getTime() === filter.value;\r\n            case 'date':\r\n                return val.getTime() === filter.value.getTime();                \r\n        }\r\n\r\n        const value = '' + filter.value;\r\n        const local = val.toLocaleDateString(filter.locale);\r\n        const iso = val.toISOString();\r\n        return local.includes(value) || iso.includes(value);\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromObject(obj, name) {\r\n        name.split('.')\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n        return name.split('.')\r\n            .map(v => GSData.readFromProperty(obj, v))\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .length > 0;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t */\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template href=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\treturn document.getElementById(tpl.slice(1));\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - togle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n        if (!(isField || isForm)) return;\r\n    }\r\n\r\n    #handleAction(target) {\r\n        const me = this;\r\n        GSEvents.send(target, 'action', me.action);\r\n    }\r\n\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const content = GSDOM.parse(this.inject, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML = this.swap;\r\n    }\r\n\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                return [GSDOM.root(me.#host)];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        return GSDOM.queryAll(document.body, me.target, false, true) || [me.#host];\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     */\r\n    static clone(from, to) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('remote', GSReadWrite);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\nexport const InputTypes = ['checkbox', 'radio', 'switch', 'number', 'range', 'text', 'passsword', 'email', 'url', 'file'];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values) {\r\n    const me = this;\r\n    me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');\r\n    return me.#dynamic.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated(changedProperties) {\r\n    const me = this;\r\n    if (!me.#isSelf()) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #selected;\r\n  #focused;\r\n  #multiselect = new Set();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.multiple ? [...this.#multiselect.values()] : this.#selected;\r\n  }\r\n\r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el && el.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el && el.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    if (me.multiple) {\r\n      me.#multiselect.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (me.#selected) {\r\n      me.#selected.active = false;\r\n      me.#selected.blur();\r\n    }\r\n    me.#multiselect.clear();\r\n    me.#focused = undefined;\r\n    me.#selected = undefined;\r\n    this.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    this.#host?.onSelected?.(el);\r\n    this.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#multiselect.add(el);\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#multiselect.delete(el);\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    if (me.#selected && !me.multiple) {\r\n      me.#selected.active = false;\r\n      me.#toggle(me.#selected);\r\n    }\r\n\r\n    me.#selected = el;\r\n    if (el) {\r\n      if (me.multiple) {\r\n        el.active = !el.active;\r\n      } else {\r\n        el.active = true;\r\n      }\r\n      me.#toggle(el);\r\n    }\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    const me = this;\r\n    me.#focus(e.target)\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#select(e.target);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate(changes) {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#request();    \r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    this.#request();\r\n  }\r\n\r\n  requestUpdate() {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  #request() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#lastRef = ref;\r\n      TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    const host = this.#host;\r\n    if(this.isTemplateElement) return host.url;\r\n    return host.template || host.query('template', false);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    await GSUtil.timeout(100);\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = true));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return noChange;\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : ''\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon class=\"bi bi-${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static style = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, styleMap } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const css = this.isHorizontal ? 'img-fluid' : 'card-img';\r\n    return html`<img src=\"${this.image}\" class=\"rounded-${this.placement} ${css} ${this.cssImage}\" style=${styleMap(this.imageStyle)} alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(this.renderClass())}\">\r\n    ${this.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x, clientY: y, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDContextElement class\r\n * @module components/GSDContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));\r\n        me.#attachTarget();\r\n    }\r\n    \r\n    #attachTarget() {\r\n        const me = this;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    // style=\"-display:contents;width:${me.width}px !important;height:${me.height}px !important;\"\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n        me.autorefresh = true;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        me.storage = me.id;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#initLIFO();\r\n        me.#config = GSItem.proxify(me, GSData.PROPERTIES);\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.id, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#handler?.enable();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#handler?.disable();\r\n        this.#handler?.removeProcessor(this);\r\n        this.#lifoReadRef = null;\r\n        clearTimeout(this.#iid);\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { refelct: true, type: Boolean },\r\n    opened: { refelct: true, type: Boolean },\r\n    cancelable: { refelct: true, type: Boolean },\r\n    closable: { refelct: true, type: Boolean },\r\n    escapable: { refelct: true, type: Boolean },\r\n    disabled: { refelct: true, type: Boolean },\r\n\r\n    title: { refelct: true },\r\n    message: { refelct: true },\r\n    cancelText: { refelct: true, },\r\n    confirmText: { refelct: true, },\r\n\r\n    buttonAlign: { refelct: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { refelct: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { refelct: true, attribute: 'icon-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated() {\r\n    super.updated();\r\n    const me = this;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify();\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${me.cssConfirm}\" \r\n      color=\"primary\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${me.cssCancel}\" \r\n      color=\"primary\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            class=\"dialog p-0 border-0 ${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">${me.translate(me.message)}</slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); f.values = data;});\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  #onConfirm(e) {\r\n    this.close();\r\n    this.emit('click-action');\r\n  }\r\n\r\n  #onCancel(e) {\r\n    this.close();\r\n    this.emit('click-action');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) {\r\n        GSEvents.prevent(e);\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  static #updateStack() {\r\n    const stack = GSDialogElement.#STACK;\r\n    stack = stack.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const stack = GSDialogElement.#STACK;\r\n    if (stack.length === 0) return null;\r\n    return stack[stack.length - 1];\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': true,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            @notify=\"${me.open}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = [];\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      me.asJSON = me.data;\r\n    }\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.queryAll('input,select,textarea', true)\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .map(el => el.checkValidity())\r\n      .filter(v => v === false).length === 0;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.queryAll('input,select,output,textarea', true);\r\n  }\r\n\r\n  get asJSON() {\r\n    return GSDOM.toObject(this);\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    GSDOM.fromObject(me, data);\r\n    return me.validate();\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  reset(e) {\r\n    const me = this;\r\n    if (e?.target === me.form) {\r\n      me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (me.validate()) me.dataController?.write(me.asJSON);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity() && me.isValid;\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isBindable) me.handle(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0 } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    description: {},\r\n    label: {},\r\n    placeholder: {},\r\n    pattern: {},\r\n    mask: {},\r\n\r\n    name: {},\r\n    type: { ...inputType },\r\n    list: {},\r\n    accept: {},\r\n\r\n    lang : {},\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { type: Boolean, reflect: true },\r\n    autocomplete: { type: Boolean, reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n  }\r\n\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.type = 'text';\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#onRange();\r\n    if (me.templateRef && !me.field)  {\r\n      const field = GSDOM.formElements(me.renderRoot).pop();\r\n      me.#inputRef.value = field;\r\n      if (field) {\r\n        field.name = this.name;\r\n        me.attachEvent(field, 'change', me.#onChange.bind(me));\r\n      } \r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    `;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const tpl = me.query('template') || me.template;\r\n    if (tpl) return me.renderTemplate();\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            value=\"${value}\"\r\n            type=\"${type}\" \r\n    \r\n            style=\"${me.reverse && me.isRange ? 'transform: rotateY(180deg);' : ''}\"\r\n            class=\"${me.#cssField} ${me.cssField}\" \r\n\r\n            placeholder=\"${ifDefined(me.translate(me.placeholder))}\"\r\n            description=\"${ifDefined(me.translate(me.description))}\"\r\n\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            \r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?autocomplete=\"${me.autocomplete}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) {\r\n    const me = this;\r\n    if (me.isRange) {\r\n      const el = me.#ouptutRef.value;\r\n      if (el) el.innerHTML = me.field?.value || '';\r\n      me.field.title = me.field.value;\r\n    }\r\n    me.emit('input', e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.emit('change', e, true);\r\n  }\r\n\r\n  async #onBlur(e) {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n    let isValid = false;\r\n    for (const r of me.#patterns) {\r\n      isValid = r.test(el.value);\r\n      if (isValid) break;\r\n    }\r\n\r\n    if (!isValid) {\r\n      el.setCustomValidity('Invalid input');\r\n      el.reportValidity();\r\n      el.focus();\r\n      await GSUtil.timeout(2000);\r\n      el.setCustomValidity('');\r\n    }\r\n\r\n    me.emit('change', e);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.field?.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.field?.reportValidity();\r\n  }\r\n\r\n  get value() {\r\n    return this.field?.value;\r\n  }\r\n\r\n  set value(val) {\r\n    GSDOM.fromObject2Element(this.field, { [this.name]: val });\r\n    this.validate();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.initData();\r\n    this.#controller = new ElementNavigationController(this);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#controller.attach(this.#elRef.value);\r\n    super.firstUpdated(changed);\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\">${me.renderItems()}</slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return undefined;\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return true;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  settings(el) {\r\n    const cfg = el instanceof GSElement ? el.definitions : GSElement.allProperties(el);\r\n    const items = GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const superColor = me.superColor ? `--gs-icon-super-color:${me.superColor};` : '';\r\n    return html`<i class=\"bi ${classMap(me.renderClass())}\" data-super=\"${ifDefined(me.super)}\" style=\"${ifDefined(superColor)}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, styleMap, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.autofit = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #build(el, idx, els) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const css = me.#panelCSS(el, col);\r\n        const style = me.#panelStyle(el, horizontal);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div class=\"d-flex ${classMap(css)}\" style=\"${styleMap(style)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template url=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col) {\r\n\r\n        const resizable = el.min > 0 || el.max > 0 || el.resizable;\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.min;\r\n        const max = el.max;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first} ${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      this.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon name=\"${this.icon}\" size=\"${this.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean },\r\n    cssItem: { attribute: 'css-item' },\r\n    data: { type: Array },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.data = this.settings;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-list-item');\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot>${this.renderItems()}</slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .selectable=\"${o.selectable === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-LIST-ITEM';\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-list-item');\r\n  }\r\n\r\n\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    selectable: { type: Boolean, reflect: true },\r\n    generated: { state: true, type: Boolean }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.bind();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#activeCSS, {});\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active\r\n    }\r\n    return me.active ? me.mapCSS(me.#activeCSS, css) : css;\r\n  }\r\n\r\n  #renderIcon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.translate(this.title) : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.translate(this.title);\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n  \r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    generated: { state: true, type : Boolean }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentElement.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentElement.placement;\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.owner.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.owner.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { GSNavItemElement } from './NavItem.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSNavItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-NAV-ITEM';\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    el?.click();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.color = 'rgb(0,0,0)';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        return svg`<path style=\"fill:${me.color};opacity:${me.opacity};pointerEvents:auto;cursor:auto;\" d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.pages = 5;\r\n    this.labelFirst = '&laquo;';\r\n    this.labelLast = '&raquo;';\r\n    this.labelNext = '&rsaquo;';\r\n    this.labelPrevious = '&lsaquo;';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, styleMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"progress-bar ${classMap(me.renderClass())}\" \r\n             style=${styleMap(me.styles)} \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changedProperties) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changedProperties.has('value')) {\r\n      let val = me.step + changedProperties.get('value');\r\n      val = me.#update(val, val);\r\n      changedProperties.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changedProperties) {\r\n    if (changedProperties.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    this.styles.width = `${this.percentage}%`;\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged : notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#mouseController.attach(this.#splitter);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return GSDOM.component(this)?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template url=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\nimport { GSTabItemElement } from './Tab.mjs';\r\n\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSTabItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-tab');\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n     html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\">${me.renderPanels()}</slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n      return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n        return html`<gs-tab generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus || o.active}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });\r\n  }  \r\n \r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel name=\"${o.name}\" \r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filter navigable element\r\n   * @param {HTMLElement} el \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\n\r\n/**\r\n * A simple HTML Table rederer for read-only tabular data representation\r\n * For complex interactive dat use gs-table\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    filter: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    selections: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];\r\n    this.selections = [];\r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    const me = this;\r\n    return me.data.filter((v, i) => me.selectable.includes(i));\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.data = [];\r\n    this.selections = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.selections = [];\r\n    if (changed.has('selectable') && !me.selectable) me.selections = [];\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\"></slot>\r\n    `;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    me.selections = [];\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        <input .index=${index}\r\n            class=\"form-control ${css}\" \r\n            name=\"${cell}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" width=\"${ifDefined(me.#config[index]?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    if (!Array.isArray(entry)) entry = me.columns.map(v => entry[v]);\r\n    entry = entry.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n    const color = me.colorSelect && me.selections.includes(index) ? `table-${me.colorSelect}` : '';\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\">\r\n          ${entry.map((cell, i) => html`<td class=\"text-${me.#config[i]?.align}\"><span>${cell}</span></td>`)}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #onFilter(e) {\r\n    const me = this;\r\n    const filter = me.#input\r\n      .map(el => {\r\n        if (!el.value) return undefined;\r\n        if (el.type === 'date') return { name: el.name, value: el.valueAsDate }\r\n        const index = el.index;\r\n        const cfg = me.#config[index];\r\n        const type = cfg.filterType || cfg.columnType;\r\n        let val =  el.value;\r\n        if (type === 'date') {\r\n          const format = cfg.format || GSUtil.getDateFormat(cfg.locale || GSUtil.locale)\r\n          val = GSDate.parse(val, format);\r\n        }\r\n        return { name: el.name, value: val, locale : cfg.locale }\r\n      })\r\n      .filter(el => el?.value);\r\n    me.dataController.filter(filter);\r\n  }\r\n\r\n  #onSort(e) {\r\n    const me = this;\r\n    if (!me.sortable) return;\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      return me.dataController.sort(sort);\r\n    }\r\n\r\n    me.data = GSData.sortData(me.data, sort);\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    const me = this;\r\n    if (!me.selectable) return;\r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    const isSelected = me.selections.includes(tr.index);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.selections = me.selections.filter(v => v != tr.index);\r\n      } else {\r\n        me.selections.push(tr.index);\r\n        me.requestUpdate();\r\n      }\r\n    } else {\r\n      me.selections = isSelected ? [] : [tr.index];\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    url: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSCSSMap } from \"../../base/GSCSSMap.mjs\";\r\nimport { GSDate } from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        if (me.autofocus) me.focus();\r\n        if (me.type === 'date') me.dataset.value = me.placeholder;\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        const me = this;\r\n        const dft = me.type === 'date' ? GSUtil.getDateFormat(me.lang || GSUtil.locale) : '';\r\n        return GSAttr.get(me, 'mask', dft);\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    get value() {\r\n        if (this.type === 'date') {\r\n            return this.dataset.value || super.value;\r\n        }\r\n        return super.value;\r\n    }\r\n\r\n    set value(val) {\r\n        if (this.type === 'date') {\r\n            val =val ? new GSDate(GSDate.parse(val, this.mask)).format('YYYY-MM-DD') : val;\r\n        }\r\n        super.value = val;\r\n        this.#onChange();\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        queueMicrotask(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset || {};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.validate()) return;\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                //GSEvents.send(me, 'change', {}, true, true);\r\n                GSEvents.send(me, 'change', {});\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n        if (me.type === 'date') {\r\n            me.dataset.value = new GSDate(this.valueAsDate).format(me.mask);\r\n        }\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n\r\n        if (!me.mask) return;\r\n\r\n        if (e.code === 'Tab') {\r\n            if (!me.validate()) {\r\n                GSEvents.prevent(e);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.validate()) {\r\n                    return GSEvents.prevent(e);\r\n                }\r\n\r\n                if (me.type === 'date') {\r\n                    if (copycut) {\r\n                        GSUtil.writeToClipboard(me.value);\r\n                    } else {\r\n                        GSUtil.readFromClipboard().then(val => me.value = val);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n        }\r\n\r\n        if (me.type === 'date') {\r\n            if (e.code === 'Delete') {\r\n                me.value = '';\r\n            }\r\n            return;\r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if (pos2 === tmp.length) return;\r\n            handle = true;\r\n            while (pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if (pos1 === 0) return;\r\n            handle = true;\r\n            while (pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >= 0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1 - 1;\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;\r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n\r\n        const me = this;\r\n        \r\n        if (!me.mask) return;\r\n        if (e.ctrlKey || e.altKey || e.shiftKey || e.metaKey || e.key.length !== 1) return;\r\n        if (me.type === 'date') return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];\r\n        }\r\n\r\n\r\n        while (pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);\r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type == 'range') me.title = me.value;\r\n        if (me.type == 'date') {\r\n            me.dataset.value = new GSDate(this.valueAsDate).format(me.mask);\r\n        }\r\n        //GSEvents.send(me, 'changed', {}, true, true);\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n        me.value = me.#updateText(me.value);\r\n        //me.validate();\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n\r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = changedProperties.has('opened');\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        if (me.timeout > 0) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n            await GSUtil.timeout(GSDOM.SPEED);\r\n            me.remove();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        return this.parentElement instanceof GSNotificationElement;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref, styleMap } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\" style=\"${styleMap(opt)}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","min","max","Math","match","dft","locale","isString","sep","numberSeparator","extractNumber","replaceAll","isNumber","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","o","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr$1","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","fmt","style","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","matchDate","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","sort","sortPair","sts","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","isDate","s1","s2","localeCompare","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","r","readFromProperty","GSDOM$1","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","plain","innerText","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","querySelector","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","validate","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","template","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleSwap","handleInject","handleTemplate","field","form","isField","HTMLFormElement","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","properties","toggleProperty","tout","symbol","applyContent","applyTemplate","clone","insertAdjacent","deattach","DEFINITION","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","We","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","GSReadWrite","reader","writer","mode","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isPrimitive","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","ButtonTypes","buttonType","hasChanged","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","addController","hostConnected","controllers","hostDisconnected","removeController","changed","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","changedProperties","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","read","write","storeID","search","storage","firstPage","page","lastPage","nextPage","prevPage","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","ElementNavigationController","selected","focused","multiselect","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","focus","blur","onSelected","onDeselected","onFocused","isNavigable","select","OrientationController","hosts","requestUpdate","onOrientation","ThemeController","hostUpdate","changes","updateTheme","updateThemeExt","TemplateController","lastRef","request","templateRef","schedule","tasks","task","process","finally","LocalizationController","updateLanguage","updateLanguageExt","langauge","onLanguage","GSElement","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","definitions","mergeObjects","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","open","message","opened","GSAccordionItemElement","shouldUpdate","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","toggleColor","autofocus","outline","toggling","icon","tooltip","refEl","isReset","isSubmit","submit","isReest","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","styleID","closeSubmenus","updatePosition","onMouseOver","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSDContextElement","attachTarget","onPopup","composedPath","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onLoad","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","initLIFO","PROPERTIES","updateHandler","formatSort","formatFilter","isDebug","gsDebug","formated","verifyHandler","save","callOnceLifo","lifoReadRefCallback","lifoRead","GSDialogElement","standard","refelct","escapable","cancelText","confirmText","buttonAlign","iconCancel","iconConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","stack","GSDrawerElement","backdrop","expanded","scroll","fingers","transition","duration","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","formRef","onChange","elements","fromObject","disableInput","enableInput","reportValidity","GSFormGroupElement","layout","description","label","placeholder","mask","step","minLength","maxLength","autoid","autocopy","autoselect","autocapitalize","autocomplete","reveal","readonly","required","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","onRange","formElements","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","renderIcon","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","fld","vertical","isSwitch","onBlur","isCheckable","isFloating","setCustomValidity","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","initData","renderWrappedUI","renderWrappedClass","allProperties","GSIconElement","superColor","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","loading","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","horizontal","tplEl","elementTemplate","tc","dir","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","selectable","GSListItemElement","generated","initial","activeCSS","renderFirst","renderSecond","itemCSS","cssActive","GSNavItemElement","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSNavElement","isTab","GSOverlayElement","autoremove","radius","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","Event","HTMLSlotElement","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","cursor","cssUpdate","lock","updateMouse","stop","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","GSTabPanelElement","GSTabGroupElement","tabCSS","isAfter","renderPanels","findPanel","GSTableElement","filterType","cssFilter","colorHead","colorSelect","stripedColumn","divider","striped","hover","grid","borderless","columns","selections","datacolumn","multisort","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","fill","renderFilters","onSort","entry","renderColumn","onSelect","renderRecord","columnType","columType","input","valueAt","row","cell","cfgType","string","timestamp","dataType","renderFilter","onFilter","icons","sortType","column","getElementIndex","prepareSorter","sortData","isComplex","tr","isSelected","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","GSComboExt","HTMLSelectElement","observedAttributes","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputExt","_","revealing","masks","toPattern","onDataChange","strict","optimized","chars","special","maskType","onKeyPress","onPaste","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","dataGroup","clipboardData","getData","formatMask","isReveal","altKey","wordop","copycut","writeToClipboard","readFromClipboard","pos1","selectionStart","pos2","selectionEnd","setSelectionRange","metaKey","lastIndex","onNumberInput","onTextInput","substring","updateText","valid","vld","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","positionCSS","DEFAULT","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","pendingUpdate","validParent","SPEED","renderWithHeader","renderSimple","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","onRefresh","onAppend","addedNode","onInsert","insertedNode","onExpand","onCollapse","onFocusChanged","onSelectionChanged","selectedNode","onRemove","TreeNode","focusedNode","visible","expand","collapse","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","expandAll","collapseAll","collapsed","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","back","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}