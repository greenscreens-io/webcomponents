{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReader.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/SlotController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/GSElement.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/ListItem.mjs","../../modules/components/List.mjs","../../modules/components/NavItem.mjs","../../modules/components/Nav.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    get build() {\r\n        return 20241227;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asNum(val = 0, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst safe = opt[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = opt[prop]?.default;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {} };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [];\r\n        filter = Array.isArray(filter) ? filter : [];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n            value = rec[flt.name];\r\n            if (flt.name) {\r\n                found = found && GSData.filterValue(value, flt)\r\n            } else {\r\n                found = found && GSData.filterSimple(rec, flt.value);\r\n            }\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        if (value instanceof Date) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (value instanceof Date) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(filter.value), filter.op);\r\n        } else {\r\n            return ('' + value).toLocaleLowerCase().includes(('' + filter.value).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, locale) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(locale);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.locale);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\t\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t */\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynaamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\treturn document.getElementById(tpl.slice(1));\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const src = this.#toHTML(this.inject);\r\n            const content = GSDOM.parse(src, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML =  this.#toHTML(this.swap);\r\n    }\r\n\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                return [GSDOM.root(me.#host)];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     */\r\n    static clone(from, to) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('remote', GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReader extends GSReadWrite {\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('cached', GSCachedReader);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\nexport const InputTypes = ['checkbox', 'radio', 'switch', 'number', 'range', 'text', 'passsword', 'email', 'url', 'file'];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf()) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #selected;\r\n  #focused;\r\n  #multiselect = new Set();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.init();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.multiple ? [...this.#multiselect.values()] : this.#selected;\r\n  }\r\n\r\n  init() {\r\n    const me = this;\r\n    me.#selected = me.#host.data?.filter(o => o.active).pop();\r\n  }\r\n\r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el && el.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el && el.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    if (me.multiple) {\r\n      me.#multiselect.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (me.#selected) {\r\n      me.#selected.active = false;\r\n      me.#selected.blur();\r\n    }\r\n    me.#multiselect.clear();\r\n    me.#focused = undefined;\r\n    me.#selected = undefined;\r\n    this.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    this.#host?.onSelected?.(el);\r\n    this.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#multiselect.add(el);\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#multiselect.delete(el);\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    if (me.#selected && !me.multiple) {\r\n      me.#selected.active = false;\r\n      me.#toggle(me.#selected);\r\n    }\r\n\r\n    me.#selected = el;\r\n    if (el) {\r\n      if (me.multiple) {\r\n        el.active = !el.active;\r\n      } else {\r\n        el.active = true;\r\n      }\r\n      me.#toggle(el);\r\n    }\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    const me = this;\r\n    me.#focus(e.target)\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath().filter(el => el.parentElement === me.#host).pop();\r\n    if (!el) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.#selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n  #injected;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#injected = false;\r\n    me.#request();    \r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    this.#request();\r\n  }\r\n\r\n  requestUpdate() {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  hostUpdated() {\r\n    if (this.#injected) this.#host.templateInjected?.();\r\n  }\r\n\r\n  #request() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#lastRef = ref;\r\n      if (ref) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#injected = true;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    const host = this.#host;\r\n    if (!host) return;\r\n    if(this.isTemplateElement) return host.src;\r\n    return host.template || host.query('template', false);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    await GSUtil.timeout(100);\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      e.target.assignedElements().forEach(el => {\r\n        el.onSlotInjected?.(e.target);\r\n      });\r\n    }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon class=\"bi bi-${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static style = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x, clientY: y, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();        \r\n        this.auto = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.target || me.filter));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        me.storage = me.id;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#initLIFO();\r\n        me.#config = GSItem.proxify(me, GSData.PROPERTIES);\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.id, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#handler?.enable();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#handler?.disable();\r\n        this.#handler?.removeProcessor(this);\r\n        this.#lifoReadRef = null;\r\n        clearTimeout(this.#iid);\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, },\r\n    confirmText: { reflect: true, },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    const me = this;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify();\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { 'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.values = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    //me.forms.forEach(form => form.submit());\r\n    const ret = me.forms?.map?.(form => form.submit());\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        const sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null :  GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': true,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            @notify=\"${me.open}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"dialog\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    this.dataController?.read();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      me.asJSON = me.data;\r\n    }\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .map(el => el.checkValidity())\r\n      .filter(v => v === false).length === 0;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.queryAll('input,select,output,textarea', true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get asJSON() {\r\n    return GSDOM.toObject(this);\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    GSDOM.fromObject(me, data);\r\n    return me.validate();\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .filter(el => !el.checkValidity())\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      me.elements.forEach(el => el.value = el.defaultValue);\r\n      me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity() && me.isValid;\r\n    if (!isValid) me.reportValidity();\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    me.emit('form', data, true, true);\r\n    return isValid;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isBindable) me.handle(e);\r\n    if (me.validate()) me.onFieldChange(e.detail);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0 } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    description: {},\r\n    label: {},\r\n    placeholder: {},\r\n    pattern: {},\r\n    mask: {},\r\n\r\n    name: {},\r\n    type: { ...inputType },\r\n    list: {},\r\n    accept: {},\r\n\r\n    lang: {},\r\n    default: { reflect: true },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { type: Boolean, reflect: true },\r\n    autocomplete: { type: Boolean, reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = GSDOM.closest(me, 'gs-form');\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n    me.#patterns = GSItem.collect(me)\r\n    .filter(el => el.dataset.pattern)\r\n    .map(el => new RegExp(el.dataset.pattern));\r\n    super.connectedCallback();\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    me.value = me.default;\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#onRange();\r\n    if (me.templateRef && !me.field) {\r\n      const field = GSDOM.formElements(me.renderRoot).pop();\r\n      me.#inputRef.value = field;\r\n      if (field) {\r\n        field.name = this.name;\r\n        me.attachEvent(field, 'change', me.#onChange.bind(me));\r\n      }\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    `;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const tpl = me.query('template') || me.template;\r\n    if (tpl) return me.renderTemplate();\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            value=\"${ifDefined(value)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(me.translate(me.placeholder))}\"\r\n            description=\"${ifDefined(me.translate(me.description))}\"\r\n\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            \r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?autocomplete=\"${me.autocomplete}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) {\r\n    const me = this;\r\n    if (me.isRange) {\r\n      const el = me.#ouptutRef.value;\r\n      if (el) el.innerHTML = me.value || '';\r\n      me.field.title = me.value;\r\n    }\r\n    me.emit('input', e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.emit('change', e, true);\r\n  }\r\n\r\n  async #onBlur(e) {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) {\r\n      me.reportValidity();\r\n      el.focus();\r\n      await GSUtil.timeout(2000);\r\n      el.setCustomValidity('');\r\n    }\r\n\r\n    me.emit('change', e);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    let isValid = el?.checkValidity();\r\n    for (const r of me.#patterns) {\r\n      isValid = r.test(el?.value);\r\n      if (!isValid) break;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  reportValidity() {\r\n    const me = this;\r\n    const el = me.field;\r\n    const msg = me.#patterns.length > 0 ? 'Invalid input' : '';\r\n    el?.setCustomValidity(msg);\r\n    return el?.reportValidity();\r\n  }\r\n\r\n  get value() {\r\n    return this.field?.value;\r\n  }\r\n\r\n  set value(val) {\r\n    GSDOM.fromObject2Element(this.field, { [this.name]: val });\r\n    this.validate();\r\n    this.#onRange();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.initData();\r\n    this.#controller = new ElementNavigationController(this);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#controller.init();\r\n    this.#controller.attach(this.#elRef.value);\r\n    super.firstUpdated(changed);\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\">${me.renderItems()}</slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return undefined;\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return true;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el).toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i class=\"bi ${classMap(me.renderClass())}\" data-super=\"${ifDefined(me.super)}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon css=\"mx-1\" name=\"${this.icon}\" size=\"${this.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    selectable: { type: Boolean, reflect: true },\r\n    generated: { state: true, type: Boolean }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n  \r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.owner.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { GSListItemElement } from './ListItem.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSListItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-list-item');\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot>${this.renderItems()}</slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .selectable=\"${o.selectable === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-LIST-ITEM';\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-list-item');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    generated: { state: true, type : Boolean }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentElement.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentElement.placement;\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.owner.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.owner.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { GSNavItemElement } from './NavItem.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSNavItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-NAV-ITEM';\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.pages = 5;\r\n    this.labelFirst = '&laquo;';\r\n    this.labelLast = '&raquo;';\r\n    this.labelNext = '&rsaquo;';\r\n    this.labelPrevious = '&lsaquo;';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentElement?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\nimport { GSTabItemElement } from './Tab.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.queryAll('gs-tab').forEach(el => me.#findPanel(el));\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSTabItemElement);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    const tabEl = me.query('gs-tab[active],gs-tab[autofocus],gs-tab')\r\n    me.onSelected(tabEl);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-tab');\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated\r\n        .active=\"${o.active}\"\r\n        .autofocus=\"${o.autofocus || o.active}\"\r\n        .disabled=\"${ifDefined(o.disabled)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel name=\"${o.name}\" \r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filter navigable element\r\n   * @param {HTMLElement} el \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = false; // me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\n\r\n/**\r\n * A simple HTML Table rederer for read-only tabular data representation\r\n * For complex interactive dat use gs-table\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    filter: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    selections: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];\r\n    this.selections = [];\r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    const me = this;\r\n    return me.data.filter((v, i) => me.selections.includes(i));\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.data = [];\r\n    this.selections = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.selections = [];\r\n    if (changed.has('selectable') && !me.selectable) me.selections = [];\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\"></slot>\r\n    `;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    me.selections = [];\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n    let mask = '';\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.locale || GSUtil.locale);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            name=\"${cell}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" width=\"${ifDefined(me.#config[index]?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    if (!Array.isArray(entry)) entry = me.columns.map(v => entry[v]);\r\n    entry = entry.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n    const color = me.colorSelect && me.selections.includes(index) ? `table-${me.colorSelect}` : '';\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\">\r\n          ${entry.map((cell, i) => html`<td class=\"text-${me.#config[i]?.align}\"><span>${cell}</span></td>`)}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    if (me.data.length > 0 ) return '';\r\n    return html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n\r\n  }\r\n\r\n  #onFilter(e) {\r\n    const me = this;\r\n    const filter = me.#input\r\n      .map(el => {\r\n        if (!el.value) return undefined;\r\n        const isDate = el.type === 'date';\r\n        const val = isDate ? el.valueAsDate : el.value;\r\n        const cfg = me.#config[el.index];\r\n        return { name: el.name, value: val, locale : cfg?.locale }\r\n      })\r\n      .filter(el => el?.value);\r\n    me.dataController.filter(filter);\r\n  }  \r\n\r\n  #onSort(e) {\r\n    const me = this;\r\n    if (!me.sortable) return;\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      return me.dataController.sort(sort);\r\n    }\r\n\r\n    me.data = GSData.sortData(me.data, sort);\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    const me = this;\r\n    if (!me.selectable) return;\r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    const isSelected = me.selections.includes(tr.index);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.selections = me.selections.filter(v => v != tr.index);\r\n      } else {\r\n        me.selections.push(tr.index);\r\n        me.requestUpdate();\r\n      }\r\n    } else {\r\n      me.selections = isSelected ? [] : [tr.index];\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('click', me.#clickCallback);\r\n    me.#host.on('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('click', me.#clickCallback);\r\n    me.#host.off('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('blur', me.#blurCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('blur', me.#blurCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#builSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#builAccept();\r\n    me.#toPattern();    \r\n  }\r\n  \r\n  validate() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    me.#pattern.lastIndex = 0;\r\n    const isMatch = me.required ? me.#pattern.test(me.raw) : true;\r\n    const isValid = isMatch && me.checkValidity();\r\n    if (!isMatch) me.setCustomValidity('Data did not match pattern!');\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n  \r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format(e);\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onBlur(e) {\r\n    // me.value === me.pattern && (me.value = \"\");\r\n    this.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n      .map(v => maskType[v.toLowerCase()])\r\n      .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      } \r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format(e) {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    me.value = me.#clean(me.#host.raw).join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, c => input[0] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = maskType[v.toLowerCase()];\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password tosupport keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update avaialble selections in another field selections.\r\n */\r\nexport class ListController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.#host.list) return me.#host.list;\r\n    const list = GSAttr.get(me.#host, 'list');\r\n    return GSDOM.getByID(me.#host.owner, list);\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.#host.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    return this.#host.owner;\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me)\r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    const form = GSDOM.closest(el, 'form');\r\n    GSDOM.formElements(form)\r\n      .forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various feature such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#copyselect = new CopySelectController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n\r\n    if (changed.has('mask') && this.mask && this.type === 'text') {\r\n      this.placeholder = this.mask;\r\n      this.#maskController ??= new MaskController(this);\r\n      this.#maskController.initRules();\r\n    }\r\n\r\n    if (this.list) {\r\n      this.#listController ??= new ListController(this);\r\n    }\r\n\r\n    switch (this.type) {\r\n      case 'text':\r\n        this.#textController ??= new TextController(this);\r\n        break;\r\n      case 'password':\r\n        this.#passwordController ??= new PasswordController(this);\r\n        break;\r\n      case 'number':\r\n        this.#numberController ??= new NumberController(this);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus) this.focus();\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = changedProperties.has('opened');\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        if (me.timeout > 0) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n            await GSUtil.timeout(GSDOM.SPEED);\r\n            me.remove();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        return this.parentElement instanceof GSNotificationElement;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","min","max","Math","match","dft","locale","isString","sep","numberSeparator","extractNumber","replaceAll","isNumber","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","isNull","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","o","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr$1","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","fmt","style","fields","limit","sts","rec","filterRecord","filterSimple","filterComplex","key","filterValue","found","flt","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","isDate","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM$1","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","plain","innerText","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","querySelector","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","validate","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","template","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleSwap","handleInject","handleTemplate","field","form","isForm","HTMLFormElement","isField","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","properties","toggleProperty","tout","symbol","toHTML","applyContent","applyTemplate","clone","insertAdjacent","deattach","DEFINITION","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","Je","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","GSReadWrite","reader","writer","mode","skip","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReader","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","selected","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isPrimitive","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","ButtonTypes","buttonType","hasChanged","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","write","storeID","storage","firstPage","page","lastPage","nextPage","prevPage","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","ElementNavigationController","multiselect","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","composedPath","OrientationController","hosts","requestUpdate","onOrientation","ThemeController","hostUpdate","updateTheme","updateThemeExt","TemplateController","lastRef","injected","request","templateInjected","templateRef","schedule","tasks","task","process","finally","SlotController","onSlotChanged","assignedElements","onSlotInjected","LocalizationController","updateLanguage","updateLanguageExt","langauge","onLanguage","GSElement","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","definitions","mergeObjects","elementStyles","cssRule","setCSSProperty","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","message","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","toggleColor","autofocus","outline","toggling","icon","tooltip","refEl","isReset","isSubmit","submit","isReest","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseOver","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","initialize","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","initLIFO","PROPERTIES","updateHandler","formatSort","formatFilter","isDebug","gsDebug","formated","verifyHandler","save","callOnceLifo","lifoReadRefCallback","lifoRead","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","ret","GSDrawerElement","backdrop","scroll","fingers","transition","duration","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","formRef","onChange","elements","inputs","fromObject","disableInput","enableInput","reportValidity","defaultValue","onFieldChange","GSFormGroupElement","layout","description","label","placeholder","mask","step","minLength","maxLength","autoid","autocopy","autoselect","autocapitalize","autocomplete","reveal","readonly","required","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","onRange","formElements","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","renderIcon","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","fld","vertical","isSwitch","onBlur","isCheckable","isFloating","setCustomValidity","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","initData","renderWrappedUI","renderWrappedClass","getName","allProperties","GSIconElement","superColor","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListItemElement","selectable","generated","initial","renderFirst","renderSecond","itemCSS","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSListElement","GSNavItemElement","itemsCSS","isNav","buttonCSS","buildCSS","cssButton","navType","GSNavElement","isTab","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","cursor","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","Event","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","stop","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","tabEl","isAfter","renderPanels","GSTableElement","filterType","cssFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","hover","grid","borderless","columns","selections","datacolumn","multisort","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","onSelect","renderRecord","renderEmpty","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","onFilter","icons","sortType","column","getElementIndex","prepareSorter","isComplex","tr","isSelected","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","blurCallback","onFocus","initRules","j","builSlots","findIndex","builAccept","toPattern","lastIndex","isMatch","setSelectionRange","substring","selectionStart","selectionEnd","maskType","clean","chars","masks","special","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","ListController","monitorCallback","changeCallback","onMonitor","onDataChange","hasUpdated","strict","isInList","togleEl","dataGroup","isButtonElement","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","props","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","HTMLSelectElement","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","passwordController","numberController","textController","listController","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","positionCSS","DEFAULT","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","pendingUpdate","validParent","SPEED","renderWithHeader","renderSimple","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}